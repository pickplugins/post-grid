/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@wordpress/icons/build-module/icon/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/icon/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/**
 * WordPress dependencies
 */

/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */

/**
 * Return an SVG icon.
 *
 * @param {IconProps} props icon is the SVG component to render
 *                          size is a number specifiying the icon size in pixels
 *                          Other props will be passed to wrapped SVG component
 *
 * @return {JSX.Element}  Icon component
 */

function Icon(_ref) {
  let {
    icon,
    size = 24,
    ...props
  } = _ref;
  return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(icon, {
    width: size,
    height: size,
    ...props
  });
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Icon);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@wordpress/icons/build-module/library/chevron-down.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/chevron-down.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

const chevronDown = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  viewBox: "0 0 24 24",
  xmlns: "http://www.w3.org/2000/svg"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M17.5 11.6L12 16l-5.5-4.4.9-1.2L12 14l4.5-3.6 1 1.2z"
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (chevronDown);
//# sourceMappingURL=chevron-down.js.map

/***/ }),

/***/ "./node_modules/@wordpress/icons/build-module/library/chevron-up.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/chevron-up.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

const chevronUp = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  viewBox: "0 0 24 24",
  xmlns: "http://www.w3.org/2000/svg"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M6.5 12.4L12 8l5.5 4.4-.9 1.2L12 10l-4.5 3.6-1-1.2z"
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (chevronUp);
//# sourceMappingURL=chevron-up.js.map

/***/ }),

/***/ "./node_modules/@wordpress/icons/build-module/library/close.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/close.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

const close = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M13 11.8l6.1-6.3-1-1-6.1 6.2-6.1-6.2-1 1 6.1 6.3-6.5 6.7 1 1 6.5-6.6 6.5 6.6 1-1z"
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (close);
//# sourceMappingURL=close.js.map

/***/ }),

/***/ "./node_modules/@wordpress/icons/build-module/library/link-off.js":
/*!************************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/link-off.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

const linkOff = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M15.6 7.3h-.7l1.6-3.5-.9-.4-3.9 8.5H9v1.5h2l-1.3 2.8H8.4c-2 0-3.7-1.7-3.7-3.7s1.7-3.7 3.7-3.7H10V7.3H8.4c-2.9 0-5.2 2.3-5.2 5.2 0 2.9 2.3 5.2 5.2 5.2H9l-1.4 3.2.9.4 5.7-12.5h1.4c2 0 3.7 1.7 3.7 3.7s-1.7 3.7-3.7 3.7H14v1.5h1.6c2.9 0 5.2-2.3 5.2-5.2 0-2.9-2.4-5.2-5.2-5.2z"
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (linkOff);
//# sourceMappingURL=link-off.js.map

/***/ }),

/***/ "./node_modules/@wordpress/icons/build-module/library/link.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/link.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

const link = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M15.6 7.2H14v1.5h1.6c2 0 3.7 1.7 3.7 3.7s-1.7 3.7-3.7 3.7H14v1.5h1.6c2.8 0 5.2-2.3 5.2-5.2 0-2.9-2.3-5.2-5.2-5.2zM4.7 12.4c0-2 1.7-3.7 3.7-3.7H10V7.2H8.4c-2.9 0-5.2 2.3-5.2 5.2 0 2.9 2.3 5.2 5.2 5.2H10v-1.5H8.4c-2 0-3.7-1.7-3.7-3.7zm4.6.9h5.3v-1.5H9.3v1.5z"
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (link);
//# sourceMappingURL=link.js.map

/***/ }),

/***/ "./node_modules/@wordpress/icons/build-module/library/menu.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/menu.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

const menu = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M5 5v1.5h14V5H5zm0 7.8h14v-1.5H5v1.5zM5 19h14v-1.5H5V19z"
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (menu);
//# sourceMappingURL=menu.js.map

/***/ }),

/***/ "./node_modules/@wordpress/icons/build-module/library/plus.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wordpress/icons/build-module/library/plus.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/primitives */ "@wordpress/primitives");
/* harmony import */ var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__);


/**
 * WordPress dependencies
 */

const plus = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.SVG, {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24"
}, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.Path, {
  d: "M18 11.2h-5.2V6h-1.6v5.2H6v1.6h5.2V18h1.6v-5.2H18z"
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (plus);
//# sourceMappingURL=plus.js.map

/***/ }),

/***/ "./node_modules/animejs/lib/anime.es.js":
/*!**********************************************!*\
  !*** ./node_modules/animejs/lib/anime.es.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*
 * anime.js v3.2.1
 * (c) 2020 Julian Garnier
 * Released under the MIT license
 * animejs.com
 */

// Defaults

var defaultInstanceSettings = {
  update: null,
  begin: null,
  loopBegin: null,
  changeBegin: null,
  change: null,
  changeComplete: null,
  loopComplete: null,
  complete: null,
  loop: 1,
  direction: 'normal',
  autoplay: true,
  timelineOffset: 0
};

var defaultTweenSettings = {
  duration: 1000,
  delay: 0,
  endDelay: 0,
  easing: 'easeOutElastic(1, .5)',
  round: 0
};

var validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];

// Caching

var cache = {
  CSS: {},
  springs: {}
};

// Utils

function minMax(val, min, max) {
  return Math.min(Math.max(val, min), max);
}

function stringContains(str, text) {
  return str.indexOf(text) > -1;
}

function applyArguments(func, args) {
  return func.apply(null, args);
}

var is = {
  arr: function (a) { return Array.isArray(a); },
  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },
  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },
  svg: function (a) { return a instanceof SVGElement; },
  inp: function (a) { return a instanceof HTMLInputElement; },
  dom: function (a) { return a.nodeType || is.svg(a); },
  str: function (a) { return typeof a === 'string'; },
  fnc: function (a) { return typeof a === 'function'; },
  und: function (a) { return typeof a === 'undefined'; },
  nil: function (a) { return is.und(a) || a === null; },
  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },
  rgb: function (a) { return /^rgb/.test(a); },
  hsl: function (a) { return /^hsl/.test(a); },
  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },
  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; },
};

// Easings

function parseEasingParameters(string) {
  var match = /\(([^)]+)\)/.exec(string);
  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];
}

// Spring solver inspired by Webkit Copyright © 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js

function spring(string, duration) {

  var params = parseEasingParameters(string);
  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);
  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);
  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);
  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);
  var w0 = Math.sqrt(stiffness / mass);
  var zeta = damping / (2 * Math.sqrt(stiffness * mass));
  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;
  var a = 1;
  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;

  function solver(t) {
    var progress = duration ? (duration * t) / 1000 : t;
    if (zeta < 1) {
      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));
    } else {
      progress = (a + b * progress) * Math.exp(-progress * w0);
    }
    if (t === 0 || t === 1) { return t; }
    return 1 - progress;
  }

  function getDuration() {
    var cached = cache.springs[string];
    if (cached) { return cached; }
    var frame = 1/6;
    var elapsed = 0;
    var rest = 0;
    while(true) {
      elapsed += frame;
      if (solver(elapsed) === 1) {
        rest++;
        if (rest >= 16) { break; }
      } else {
        rest = 0;
      }
    }
    var duration = elapsed * frame * 1000;
    cache.springs[string] = duration;
    return duration;
  }

  return duration ? solver : getDuration;

}

// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function

function steps(steps) {
  if ( steps === void 0 ) steps = 10;

  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };
}

// BezierEasing https://github.com/gre/bezier-easing

var bezier = (function () {

  var kSplineTableSize = 11;
  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }
  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }
  function C(aA1)      { return 3.0 * aA1 }

  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }
  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }

  function binarySubdivide(aX, aA, aB, mX1, mX2) {
    var currentX, currentT, i = 0;
    do {
      currentT = aA + (aB - aA) / 2.0;
      currentX = calcBezier(currentT, mX1, mX2) - aX;
      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }
    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);
    return currentT;
  }

  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
    for (var i = 0; i < 4; ++i) {
      var currentSlope = getSlope(aGuessT, mX1, mX2);
      if (currentSlope === 0.0) { return aGuessT; }
      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
      aGuessT -= currentX / currentSlope;
    }
    return aGuessT;
  }

  function bezier(mX1, mY1, mX2, mY2) {

    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }
    var sampleValues = new Float32Array(kSplineTableSize);

    if (mX1 !== mY1 || mX2 !== mY2) {
      for (var i = 0; i < kSplineTableSize; ++i) {
        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
      }
    }

    function getTForX(aX) {

      var intervalStart = 0;
      var currentSample = 1;
      var lastSample = kSplineTableSize - 1;

      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
        intervalStart += kSampleStepSize;
      }

      --currentSample;

      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
      var guessForT = intervalStart + dist * kSampleStepSize;
      var initialSlope = getSlope(guessForT, mX1, mX2);

      if (initialSlope >= 0.001) {
        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
      } else if (initialSlope === 0.0) {
        return guessForT;
      } else {
        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
      }

    }

    return function (x) {
      if (mX1 === mY1 && mX2 === mY2) { return x; }
      if (x === 0 || x === 1) { return x; }
      return calcBezier(getTForX(x), mY1, mY2);
    }

  }

  return bezier;

})();

var penner = (function () {

  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)

  var eases = { linear: function () { return function (t) { return t; }; } };

  var functionEasings = {
    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },
    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },
    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },
    Bounce: function () { return function (t) {
      var pow2, b = 4;
      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}
      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)
    }; },
    Elastic: function (amplitude, period) {
      if ( amplitude === void 0 ) amplitude = 1;
      if ( period === void 0 ) period = .5;

      var a = minMax(amplitude, 1, 10);
      var p = minMax(period, .1, 2);
      return function (t) {
        return (t === 0 || t === 1) ? t : 
          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);
      }
    }
  };

  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];

  baseEasings.forEach(function (name, i) {
    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };
  });

  Object.keys(functionEasings).forEach(function (name) {
    var easeIn = functionEasings[name];
    eases['easeIn' + name] = easeIn;
    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };
    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : 
      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };
    eases['easeOutIn' + name] = function (a, b) { return function (t) { return t < 0.5 ? (1 - easeIn(a, b)(1 - t * 2)) / 2 : 
      (easeIn(a, b)(t * 2 - 1) + 1) / 2; }; };
  });

  return eases;

})();

function parseEasings(easing, duration) {
  if (is.fnc(easing)) { return easing; }
  var name = easing.split('(')[0];
  var ease = penner[name];
  var args = parseEasingParameters(easing);
  switch (name) {
    case 'spring' : return spring(easing, duration);
    case 'cubicBezier' : return applyArguments(bezier, args);
    case 'steps' : return applyArguments(steps, args);
    default : return applyArguments(ease, args);
  }
}

// Strings

function selectString(str) {
  try {
    var nodes = document.querySelectorAll(str);
    return nodes;
  } catch(e) {
    return;
  }
}

// Arrays

function filterArray(arr, callback) {
  var len = arr.length;
  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;
  var result = [];
  for (var i = 0; i < len; i++) {
    if (i in arr) {
      var val = arr[i];
      if (callback.call(thisArg, val, i, arr)) {
        result.push(val);
      }
    }
  }
  return result;
}

function flattenArray(arr) {
  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);
}

function toArray(o) {
  if (is.arr(o)) { return o; }
  if (is.str(o)) { o = selectString(o) || o; }
  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }
  return [o];
}

function arrayContains(arr, val) {
  return arr.some(function (a) { return a === val; });
}

// Objects

function cloneObject(o) {
  var clone = {};
  for (var p in o) { clone[p] = o[p]; }
  return clone;
}

function replaceObjectProps(o1, o2) {
  var o = cloneObject(o1);
  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }
  return o;
}

function mergeObjects(o1, o2) {
  var o = cloneObject(o1);
  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }
  return o;
}

// Colors

function rgbToRgba(rgbValue) {
  var rgb = /rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(rgbValue);
  return rgb ? ("rgba(" + (rgb[1]) + ",1)") : rgbValue;
}

function hexToRgba(hexValue) {
  var rgx = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );
  var rgb = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  var r = parseInt(rgb[1], 16);
  var g = parseInt(rgb[2], 16);
  var b = parseInt(rgb[3], 16);
  return ("rgba(" + r + "," + g + "," + b + ",1)");
}

function hslToRgba(hslValue) {
  var hsl = /hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(hslValue) || /hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(hslValue);
  var h = parseInt(hsl[1], 10) / 360;
  var s = parseInt(hsl[2], 10) / 100;
  var l = parseInt(hsl[3], 10) / 100;
  var a = hsl[4] || 1;
  function hue2rgb(p, q, t) {
    if (t < 0) { t += 1; }
    if (t > 1) { t -= 1; }
    if (t < 1/6) { return p + (q - p) * 6 * t; }
    if (t < 1/2) { return q; }
    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }
    return p;
  }
  var r, g, b;
  if (s == 0) {
    r = g = b = l;
  } else {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    r = hue2rgb(p, q, h + 1/3);
    g = hue2rgb(p, q, h);
    b = hue2rgb(p, q, h - 1/3);
  }
  return ("rgba(" + (r * 255) + "," + (g * 255) + "," + (b * 255) + "," + a + ")");
}

function colorToRgb(val) {
  if (is.rgb(val)) { return rgbToRgba(val); }
  if (is.hex(val)) { return hexToRgba(val); }
  if (is.hsl(val)) { return hslToRgba(val); }
}

// Units

function getUnit(val) {
  var split = /[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);
  if (split) { return split[1]; }
}

function getTransformUnit(propName) {
  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }
  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }
}

// Values

function getFunctionValue(val, animatable) {
  if (!is.fnc(val)) { return val; }
  return val(animatable.target, animatable.id, animatable.total);
}

function getAttribute(el, prop) {
  return el.getAttribute(prop);
}

function convertPxToUnit(el, value, unit) {
  var valueUnit = getUnit(value);
  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }
  var cached = cache.CSS[value + unit];
  if (!is.und(cached)) { return cached; }
  var baseline = 100;
  var tempEl = document.createElement(el.tagName);
  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;
  parentEl.appendChild(tempEl);
  tempEl.style.position = 'absolute';
  tempEl.style.width = baseline + unit;
  var factor = baseline / tempEl.offsetWidth;
  parentEl.removeChild(tempEl);
  var convertedUnit = factor * parseFloat(value);
  cache.CSS[value + unit] = convertedUnit;
  return convertedUnit;
}

function getCSSValue(el, prop, unit) {
  if (prop in el.style) {
    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';
    return unit ? convertPxToUnit(el, value, unit) : value;
  }
}

function getAnimationType(el, prop) {
  if (is.dom(el) && !is.inp(el) && (!is.nil(getAttribute(el, prop)) || (is.svg(el) && el[prop]))) { return 'attribute'; }
  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }
  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }
  if (el[prop] != null) { return 'object'; }
}

function getElementTransforms(el) {
  if (!is.dom(el)) { return; }
  var str = el.style.transform || '';
  var reg  = /(\w+)\(([^)]*)\)/g;
  var transforms = new Map();
  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }
  return transforms;
}

function getTransformValue(el, propName, animatable, unit) {
  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);
  var value = getElementTransforms(el).get(propName) || defaultVal;
  if (animatable) {
    animatable.transforms.list.set(propName, value);
    animatable.transforms['last'] = propName;
  }
  return unit ? convertPxToUnit(el, value, unit) : value;
}

function getOriginalTargetValue(target, propName, unit, animatable) {
  switch (getAnimationType(target, propName)) {
    case 'transform': return getTransformValue(target, propName, animatable, unit);
    case 'css': return getCSSValue(target, propName, unit);
    case 'attribute': return getAttribute(target, propName);
    default: return target[propName] || 0;
  }
}

function getRelativeValue(to, from) {
  var operator = /^(\*=|\+=|-=)/.exec(to);
  if (!operator) { return to; }
  var u = getUnit(to) || 0;
  var x = parseFloat(from);
  var y = parseFloat(to.replace(operator[0], ''));
  switch (operator[0][0]) {
    case '+': return x + y + u;
    case '-': return x - y + u;
    case '*': return x * y + u;
  }
}

function validateValue(val, unit) {
  if (is.col(val)) { return colorToRgb(val); }
  if (/\s/g.test(val)) { return val; }
  var originalUnit = getUnit(val);
  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;
  if (unit) { return unitLess + unit; }
  return unitLess;
}

// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes
// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744

function getDistance(p1, p2) {
  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));
}

function getCircleLength(el) {
  return Math.PI * 2 * getAttribute(el, 'r');
}

function getRectLength(el) {
  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);
}

function getLineLength(el) {
  return getDistance(
    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, 
    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}
  );
}

function getPolylineLength(el) {
  var points = el.points;
  var totalLength = 0;
  var previousPos;
  for (var i = 0 ; i < points.numberOfItems; i++) {
    var currentPos = points.getItem(i);
    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }
    previousPos = currentPos;
  }
  return totalLength;
}

function getPolygonLength(el) {
  var points = el.points;
  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));
}

// Path animation

function getTotalLength(el) {
  if (el.getTotalLength) { return el.getTotalLength(); }
  switch(el.tagName.toLowerCase()) {
    case 'circle': return getCircleLength(el);
    case 'rect': return getRectLength(el);
    case 'line': return getLineLength(el);
    case 'polyline': return getPolylineLength(el);
    case 'polygon': return getPolygonLength(el);
  }
}

function setDashoffset(el) {
  var pathLength = getTotalLength(el);
  el.setAttribute('stroke-dasharray', pathLength);
  return pathLength;
}

// Motion path

function getParentSvgEl(el) {
  var parentEl = el.parentNode;
  while (is.svg(parentEl)) {
    if (!is.svg(parentEl.parentNode)) { break; }
    parentEl = parentEl.parentNode;
  }
  return parentEl;
}

function getParentSvg(pathEl, svgData) {
  var svg = svgData || {};
  var parentSvgEl = svg.el || getParentSvgEl(pathEl);
  var rect = parentSvgEl.getBoundingClientRect();
  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');
  var width = rect.width;
  var height = rect.height;
  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);
  return {
    el: parentSvgEl,
    viewBox: viewBox,
    x: viewBox[0] / 1,
    y: viewBox[1] / 1,
    w: width,
    h: height,
    vW: viewBox[2],
    vH: viewBox[3]
  }
}

function getPath(path, percent) {
  var pathEl = is.str(path) ? selectString(path)[0] : path;
  var p = percent || 100;
  return function(property) {
    return {
      property: property,
      el: pathEl,
      svg: getParentSvg(pathEl),
      totalLength: getTotalLength(pathEl) * (p / 100)
    }
  }
}

function getPathProgress(path, progress, isPathTargetInsideSVG) {
  function point(offset) {
    if ( offset === void 0 ) offset = 0;

    var l = progress + offset >= 1 ? progress + offset : 0;
    return path.el.getPointAtLength(l);
  }
  var svg = getParentSvg(path.el, path.svg);
  var p = point();
  var p0 = point(-1);
  var p1 = point(+1);
  var scaleX = isPathTargetInsideSVG ? 1 : svg.w / svg.vW;
  var scaleY = isPathTargetInsideSVG ? 1 : svg.h / svg.vH;
  switch (path.property) {
    case 'x': return (p.x - svg.x) * scaleX;
    case 'y': return (p.y - svg.y) * scaleY;
    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;
  }
}

// Decompose value

function decomposeValue(val, unit) {
  // const rgx = /-?\d*\.?\d+/g; // handles basic numbers
  // const rgx = /[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g; // handles exponents notation
  var rgx = /[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g; // handles exponents notation
  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';
  return {
    original: value,
    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],
    strings: (is.str(val) || unit) ? value.split(rgx) : []
  }
}

// Animatables

function parseTargets(targets) {
  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];
  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });
}

function getAnimatables(targets) {
  var parsed = parseTargets(targets);
  return parsed.map(function (t, i) {
    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };
  });
}

// Properties

function normalizePropertyTweens(prop, tweenSettings) {
  var settings = cloneObject(tweenSettings);
  // Override duration if easing is a spring
  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }
  if (is.arr(prop)) {
    var l = prop.length;
    var isFromTo = (l === 2 && !is.obj(prop[0]));
    if (!isFromTo) {
      // Duration divided by the number of tweens
      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }
    } else {
      // Transform [from, to] values shorthand to a valid tween value
      prop = {value: prop};
    }
  }
  var propArray = is.arr(prop) ? prop : [prop];
  return propArray.map(function (v, i) {
    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};
    // Default delay value should only be applied to the first tween
    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }
    // Default endDelay value should only be applied to the last tween
    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }
    return obj;
  }).map(function (k) { return mergeObjects(k, settings); });
}


function flattenKeyframes(keyframes) {
  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })
  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);
  var properties = {};
  var loop = function ( i ) {
    var propName = propertyNames[i];
    properties[propName] = keyframes.map(function (key) {
      var newKey = {};
      for (var p in key) {
        if (is.key(p)) {
          if (p == propName) { newKey.value = key[p]; }
        } else {
          newKey[p] = key[p];
        }
      }
      return newKey;
    });
  };

  for (var i = 0; i < propertyNames.length; i++) loop( i );
  return properties;
}

function getProperties(tweenSettings, params) {
  var properties = [];
  var keyframes = params.keyframes;
  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }
  for (var p in params) {
    if (is.key(p)) {
      properties.push({
        name: p,
        tweens: normalizePropertyTweens(params[p], tweenSettings)
      });
    }
  }
  return properties;
}

// Tweens

function normalizeTweenValues(tween, animatable) {
  var t = {};
  for (var p in tween) {
    var value = getFunctionValue(tween[p], animatable);
    if (is.arr(value)) {
      value = value.map(function (v) { return getFunctionValue(v, animatable); });
      if (value.length === 1) { value = value[0]; }
    }
    t[p] = value;
  }
  t.duration = parseFloat(t.duration);
  t.delay = parseFloat(t.delay);
  return t;
}

function normalizeTweens(prop, animatable) {
  var previousTween;
  return prop.tweens.map(function (t) {
    var tween = normalizeTweenValues(t, animatable);
    var tweenValue = tween.value;
    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;
    var toUnit = getUnit(to);
    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);
    var previousValue = previousTween ? previousTween.to.original : originalValue;
    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;
    var fromUnit = getUnit(from) || getUnit(originalValue);
    var unit = toUnit || fromUnit;
    if (is.und(to)) { to = previousValue; }
    tween.from = decomposeValue(from, unit);
    tween.to = decomposeValue(getRelativeValue(to, from), unit);
    tween.start = previousTween ? previousTween.end : 0;
    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;
    tween.easing = parseEasings(tween.easing, tween.duration);
    tween.isPath = is.pth(tweenValue);
    tween.isPathTargetInsideSVG = tween.isPath && is.svg(animatable.target);
    tween.isColor = is.col(tween.from.original);
    if (tween.isColor) { tween.round = 1; }
    previousTween = tween;
    return tween;
  });
}

// Tween progress

var setProgressValue = {
  css: function (t, p, v) { return t.style[p] = v; },
  attribute: function (t, p, v) { return t.setAttribute(p, v); },
  object: function (t, p, v) { return t[p] = v; },
  transform: function (t, p, v, transforms, manual) {
    transforms.list.set(p, v);
    if (p === transforms.last || manual) {
      var str = '';
      transforms.list.forEach(function (value, prop) { str += prop + "(" + value + ") "; });
      t.style.transform = str;
    }
  }
};

// Set Value helper

function setTargetsValue(targets, properties) {
  var animatables = getAnimatables(targets);
  animatables.forEach(function (animatable) {
    for (var property in properties) {
      var value = getFunctionValue(properties[property], animatable);
      var target = animatable.target;
      var valueUnit = getUnit(value);
      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);
      var unit = valueUnit || getUnit(originalValue);
      var to = getRelativeValue(validateValue(value, unit), originalValue);
      var animType = getAnimationType(target, property);
      setProgressValue[animType](target, property, to, animatable.transforms, true);
    }
  });
}

// Animations

function createAnimation(animatable, prop) {
  var animType = getAnimationType(animatable.target, prop.name);
  if (animType) {
    var tweens = normalizeTweens(prop, animatable);
    var lastTween = tweens[tweens.length - 1];
    return {
      type: animType,
      property: prop.name,
      animatable: animatable,
      tweens: tweens,
      duration: lastTween.end,
      delay: tweens[0].delay,
      endDelay: lastTween.endDelay
    }
  }
}

function getAnimations(animatables, properties) {
  return filterArray(flattenArray(animatables.map(function (animatable) {
    return properties.map(function (prop) {
      return createAnimation(animatable, prop);
    });
  })), function (a) { return !is.und(a); });
}

// Create Instance

function getInstanceTimings(animations, tweenSettings) {
  var animLength = animations.length;
  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };
  var timings = {};
  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;
  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;
  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;
  return timings;
}

var instanceID = 0;

function createNewInstance(params) {
  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);
  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);
  var properties = getProperties(tweenSettings, params);
  var animatables = getAnimatables(params.targets);
  var animations = getAnimations(animatables, properties);
  var timings = getInstanceTimings(animations, tweenSettings);
  var id = instanceID;
  instanceID++;
  return mergeObjects(instanceSettings, {
    id: id,
    children: [],
    animatables: animatables,
    animations: animations,
    duration: timings.duration,
    delay: timings.delay,
    endDelay: timings.endDelay
  });
}

// Core

var activeInstances = [];

var engine = (function () {
  var raf;

  function play() {
    if (!raf && (!isDocumentHidden() || !anime.suspendWhenDocumentHidden) && activeInstances.length > 0) {
      raf = requestAnimationFrame(step);
    }
  }
  function step(t) {
    // memo on algorithm issue:
    // dangerous iteration over mutable `activeInstances`
    // (that collection may be updated from within callbacks of `tick`-ed animation instances)
    var activeInstancesLength = activeInstances.length;
    var i = 0;
    while (i < activeInstancesLength) {
      var activeInstance = activeInstances[i];
      if (!activeInstance.paused) {
        activeInstance.tick(t);
        i++;
      } else {
        activeInstances.splice(i, 1);
        activeInstancesLength--;
      }
    }
    raf = i > 0 ? requestAnimationFrame(step) : undefined;
  }

  function handleVisibilityChange() {
    if (!anime.suspendWhenDocumentHidden) { return; }

    if (isDocumentHidden()) {
      // suspend ticks
      raf = cancelAnimationFrame(raf);
    } else { // is back to active tab
      // first adjust animations to consider the time that ticks were suspended
      activeInstances.forEach(
        function (instance) { return instance ._onDocumentVisibility(); }
      );
      engine();
    }
  }
  if (typeof document !== 'undefined') {
    document.addEventListener('visibilitychange', handleVisibilityChange);
  }

  return play;
})();

function isDocumentHidden() {
  return !!document && document.hidden;
}

// Public Instance

function anime(params) {
  if ( params === void 0 ) params = {};


  var startTime = 0, lastTime = 0, now = 0;
  var children, childrenLength = 0;
  var resolve = null;

  function makePromise(instance) {
    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });
    instance.finished = promise;
    return promise;
  }

  var instance = createNewInstance(params);
  var promise = makePromise(instance);

  function toggleInstanceDirection() {
    var direction = instance.direction;
    if (direction !== 'alternate') {
      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';
    }
    instance.reversed = !instance.reversed;
    children.forEach(function (child) { return child.reversed = instance.reversed; });
  }

  function adjustTime(time) {
    return instance.reversed ? instance.duration - time : time;
  }

  function resetTime() {
    startTime = 0;
    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);
  }

  function seekChild(time, child) {
    if (child) { child.seek(time - child.timelineOffset); }
  }

  function syncInstanceChildren(time) {
    if (!instance.reversePlayback) {
      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }
    } else {
      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }
    }
  }

  function setAnimationsProgress(insTime) {
    var i = 0;
    var animations = instance.animations;
    var animationsLength = animations.length;
    while (i < animationsLength) {
      var anim = animations[i];
      var animatable = anim.animatable;
      var tweens = anim.tweens;
      var tweenLength = tweens.length - 1;
      var tween = tweens[tweenLength];
      // Only check for keyframes if there is more than one tween
      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }
      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;
      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);
      var strings = tween.to.strings;
      var round = tween.round;
      var numbers = [];
      var toNumbersLength = tween.to.numbers.length;
      var progress = (void 0);
      for (var n = 0; n < toNumbersLength; n++) {
        var value = (void 0);
        var toNumber = tween.to.numbers[n];
        var fromNumber = tween.from.numbers[n] || 0;
        if (!tween.isPath) {
          value = fromNumber + (eased * (toNumber - fromNumber));
        } else {
          value = getPathProgress(tween.value, eased * toNumber, tween.isPathTargetInsideSVG);
        }
        if (round) {
          if (!(tween.isColor && n > 2)) {
            value = Math.round(value * round) / round;
          }
        }
        numbers.push(value);
      }
      // Manual Array.reduce for better performances
      var stringsLength = strings.length;
      if (!stringsLength) {
        progress = numbers[0];
      } else {
        progress = strings[0];
        for (var s = 0; s < stringsLength; s++) {
          var a = strings[s];
          var b = strings[s + 1];
          var n$1 = numbers[s];
          if (!isNaN(n$1)) {
            if (!b) {
              progress += n$1 + ' ';
            } else {
              progress += n$1 + b;
            }
          }
        }
      }
      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);
      anim.currentValue = progress;
      i++;
    }
  }

  function setCallback(cb) {
    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }
  }

  function countIteration() {
    if (instance.remaining && instance.remaining !== true) {
      instance.remaining--;
    }
  }

  function setInstanceProgress(engineTime) {
    var insDuration = instance.duration;
    var insDelay = instance.delay;
    var insEndDelay = insDuration - instance.endDelay;
    var insTime = adjustTime(engineTime);
    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);
    instance.reversePlayback = insTime < instance.currentTime;
    if (children) { syncInstanceChildren(insTime); }
    if (!instance.began && instance.currentTime > 0) {
      instance.began = true;
      setCallback('begin');
    }
    if (!instance.loopBegan && instance.currentTime > 0) {
      instance.loopBegan = true;
      setCallback('loopBegin');
    }
    if (insTime <= insDelay && instance.currentTime !== 0) {
      setAnimationsProgress(0);
    }
    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {
      setAnimationsProgress(insDuration);
    }
    if (insTime > insDelay && insTime < insEndDelay) {
      if (!instance.changeBegan) {
        instance.changeBegan = true;
        instance.changeCompleted = false;
        setCallback('changeBegin');
      }
      setCallback('change');
      setAnimationsProgress(insTime);
    } else {
      if (instance.changeBegan) {
        instance.changeCompleted = true;
        instance.changeBegan = false;
        setCallback('changeComplete');
      }
    }
    instance.currentTime = minMax(insTime, 0, insDuration);
    if (instance.began) { setCallback('update'); }
    if (engineTime >= insDuration) {
      lastTime = 0;
      countIteration();
      if (!instance.remaining) {
        instance.paused = true;
        if (!instance.completed) {
          instance.completed = true;
          setCallback('loopComplete');
          setCallback('complete');
          if (!instance.passThrough && 'Promise' in window) {
            resolve();
            promise = makePromise(instance);
          }
        }
      } else {
        startTime = now;
        setCallback('loopComplete');
        instance.loopBegan = false;
        if (instance.direction === 'alternate') {
          toggleInstanceDirection();
        }
      }
    }
  }

  instance.reset = function() {
    var direction = instance.direction;
    instance.passThrough = false;
    instance.currentTime = 0;
    instance.progress = 0;
    instance.paused = true;
    instance.began = false;
    instance.loopBegan = false;
    instance.changeBegan = false;
    instance.completed = false;
    instance.changeCompleted = false;
    instance.reversePlayback = false;
    instance.reversed = direction === 'reverse';
    instance.remaining = instance.loop;
    children = instance.children;
    childrenLength = children.length;
    for (var i = childrenLength; i--;) { instance.children[i].reset(); }
    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }
    setAnimationsProgress(instance.reversed ? instance.duration : 0);
  };

  // internal method (for engine) to adjust animation timings before restoring engine ticks (rAF)
  instance._onDocumentVisibility = resetTime;

  // Set Value helper

  instance.set = function(targets, properties) {
    setTargetsValue(targets, properties);
    return instance;
  };

  instance.tick = function(t) {
    now = t;
    if (!startTime) { startTime = now; }
    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);
  };

  instance.seek = function(time) {
    setInstanceProgress(adjustTime(time));
  };

  instance.pause = function() {
    instance.paused = true;
    resetTime();
  };

  instance.play = function() {
    if (!instance.paused) { return; }
    if (instance.completed) { instance.reset(); }
    instance.paused = false;
    activeInstances.push(instance);
    resetTime();
    engine();
  };

  instance.reverse = function() {
    toggleInstanceDirection();
    instance.completed = instance.reversed ? false : true;
    resetTime();
  };

  instance.restart = function() {
    instance.reset();
    instance.play();
  };

  instance.remove = function(targets) {
    var targetsArray = parseTargets(targets);
    removeTargetsFromInstance(targetsArray, instance);
  };

  instance.reset();

  if (instance.autoplay) { instance.play(); }

  return instance;

}

// Remove targets from animation

function removeTargetsFromAnimations(targetsArray, animations) {
  for (var a = animations.length; a--;) {
    if (arrayContains(targetsArray, animations[a].animatable.target)) {
      animations.splice(a, 1);
    }
  }
}

function removeTargetsFromInstance(targetsArray, instance) {
  var animations = instance.animations;
  var children = instance.children;
  removeTargetsFromAnimations(targetsArray, animations);
  for (var c = children.length; c--;) {
    var child = children[c];
    var childAnimations = child.animations;
    removeTargetsFromAnimations(targetsArray, childAnimations);
    if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }
  }
  if (!animations.length && !children.length) { instance.pause(); }
}

function removeTargetsFromActiveInstances(targets) {
  var targetsArray = parseTargets(targets);
  for (var i = activeInstances.length; i--;) {
    var instance = activeInstances[i];
    removeTargetsFromInstance(targetsArray, instance);
  }
}

// Stagger helpers

function stagger(val, params) {
  if ( params === void 0 ) params = {};

  var direction = params.direction || 'normal';
  var easing = params.easing ? parseEasings(params.easing) : null;
  var grid = params.grid;
  var axis = params.axis;
  var fromIndex = params.from || 0;
  var fromFirst = fromIndex === 'first';
  var fromCenter = fromIndex === 'center';
  var fromLast = fromIndex === 'last';
  var isRange = is.arr(val);
  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);
  var val2 = isRange ? parseFloat(val[1]) : 0;
  var unit = getUnit(isRange ? val[1] : val) || 0;
  var start = params.start || 0 + (isRange ? val1 : 0);
  var values = [];
  var maxValue = 0;
  return function (el, i, t) {
    if (fromFirst) { fromIndex = 0; }
    if (fromCenter) { fromIndex = (t - 1) / 2; }
    if (fromLast) { fromIndex = t - 1; }
    if (!values.length) {
      for (var index = 0; index < t; index++) {
        if (!grid) {
          values.push(Math.abs(fromIndex - index));
        } else {
          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;
          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;
          var toX = index%grid[0];
          var toY = Math.floor(index/grid[0]);
          var distanceX = fromX - toX;
          var distanceY = fromY - toY;
          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);
          if (axis === 'x') { value = -distanceX; }
          if (axis === 'y') { value = -distanceY; }
          values.push(value);
        }
        maxValue = Math.max.apply(Math, values);
      }
      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }
      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }
    }
    var spacing = isRange ? (val2 - val1) / maxValue : val1;
    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;
  }
}

// Timeline

function timeline(params) {
  if ( params === void 0 ) params = {};

  var tl = anime(params);
  tl.duration = 0;
  tl.add = function(instanceParams, timelineOffset) {
    var tlIndex = activeInstances.indexOf(tl);
    var children = tl.children;
    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }
    function passThrough(ins) { ins.passThrough = true; }
    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }
    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));
    insParams.targets = insParams.targets || params.targets;
    var tlDuration = tl.duration;
    insParams.autoplay = false;
    insParams.direction = tl.direction;
    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);
    passThrough(tl);
    tl.seek(insParams.timelineOffset);
    var ins = anime(insParams);
    passThrough(ins);
    children.push(ins);
    var timings = getInstanceTimings(children, params);
    tl.delay = timings.delay;
    tl.endDelay = timings.endDelay;
    tl.duration = timings.duration;
    tl.seek(0);
    tl.reset();
    if (tl.autoplay) { tl.play(); }
    return tl;
  };
  return tl;
}

anime.version = '3.2.1';
anime.speed = 1;
// TODO:#review: naming, documentation
anime.suspendWhenDocumentHidden = true;
anime.running = activeInstances;
anime.remove = removeTargetsFromActiveInstances;
anime.get = getOriginalTargetValue;
anime.set = setTargetsValue;
anime.convertPx = convertPxToUnit;
anime.path = getPath;
anime.setDashoffset = setDashoffset;
anime.stagger = stagger;
anime.timeline = timeline;
anime.easing = parseEasings;
anime.penner = penner;
anime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (anime);


/***/ }),

/***/ "./src/blocks/accordion/index.js":
/*!***************************************!*\
  !*** ./src/blocks/accordion/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");













const {
  RawHTML
} = wp.element;









var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__.registerBlockType)("post-grid/accordion", {
  title: "Accordion",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M3 7.00003C2.44772 7.00003 2 7.44775 2 8.00003V16C2 16.5523 2.44772 17 3 17H21C21.5523 17 22 16.5523 22 16V8.00003C22 7.44775 21.5523 7.00003 21 7.00003H3ZM20.75 14.75C20.75 15.3023 20.3023 15.75 19.75 15.75H4.25C3.69772 15.75 3.25 15.3023 3.25 14.75V11.75C3.25 11.1977 3.69772 10.75 4.25 10.75H19.75C20.3023 10.75 20.75 11.1977 20.75 11.75V14.75Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M2 3C2 2.44772 2.44772 2 3 2H21C21.5523 2 22 2.44772 22 3V4.75C22 5.30228 21.5523 5.75 21 5.75H3C2.44772 5.75 2 5.30228 2 4.75V3Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M2 19.25C2 18.6977 2.44772 18.25 3 18.25H21C21.5523 18.25 22 18.6977 22 19.25V21C22 21.5523 21.5523 22 21 22H3C2.44772 22 2 21.5523 2 21V19.25Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          content: '',
          tag: 'div',
          class: 'pg-accordion'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    items: {
      type: 'array',
      default: [{
        isActive: false,
        headerText: 'What is Lorem Ipsum?',
        content: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',
        icon: '',
        iconToggle: '',
        styles: {}
      }]
    },
    header: {
      type: 'object',
      default: {
        options: {
          text: 'What is Lorem Ipsum?',
          tag: 'div',
          class: 'pg-accordion-header'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    headerActive: {
      type: 'object',
      default: {
        options: {
          text: 'What is Lorem Ipsum?',
          tag: 'div',
          class: 'pg-accordion-header '
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    content: {
      type: 'object',
      default: {
        options: {
          text: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',
          tag: 'div',
          class: 'pg-accordion-content'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'fas fa-chevron-right',
          class: 'icon',
          positon: 'beforeHeader',
          enableToggle: 'yes'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    iconToggle: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'fas fa-chevron-down',
          class: 'iconToggle'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var items = attributes.items;
    var wrapper = attributes.wrapper;
    var header = attributes.header;
    var headerActive = attributes.headerActive;
    var content = attributes.content;
    var icon = attributes.icon;
    var iconToggle = attributes.iconToggle;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    const [isLoading, setisLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(window.PostGridPluginData);
    const [isOpen, setisOpen] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false); // Wrapper CSS Class Selectors

    var wrapperSelector = blockClass;
    var headerSelector = blockClass + ' .pg-accordion-header';
    var headerActiveSelector = blockClass + ' .pg-accordion-header.active';
    var contentSelector = blockClass + ' .pg-accordion-content';
    const iconSelector = blockClass + ' .icon-wrap';
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);
    const [iconToggleHtml, setIconToggleHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      var iconSrc = iconToggle.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconToggleHtml(iconHtml);
    }, [iconToggle]);

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconToggle(arg) {
      var options = { ...iconToggle.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        iconToggle: { ...iconToggle,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControlHeader(nextValues) {
      var responsive = header.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...header.styles,
        padding: responsive
      };
      setAttributes({
        header: { ...header,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[headerSelector] = blockCssY.items[headerSelector] != undefined ? blockCssY.items[headerSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[headerSelector]['padding-top'] != undefined ? blockCssY.items[headerSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'padding-top': paddingTop
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[headerSelector]['padding-right'] != undefined ? blockCssY.items[headerSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'padding-right': paddingRight
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[headerSelector]['padding-bottom'] != undefined ? blockCssY.items[headerSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[headerSelector]['padding-left'] != undefined ? blockCssY.items[headerSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'padding-left': paddingLeft
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function paddingControlContent(nextValues) {
      var responsive = content.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...content.styles,
        padding: responsive
      };
      setAttributes({
        content: { ...content,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[contentSelector] = blockCssY.items[contentSelector] != undefined ? blockCssY.items[contentSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[contentSelector]['padding-top'] != undefined ? blockCssY.items[contentSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'padding-top': paddingTop
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[contentSelector]['padding-right'] != undefined ? blockCssY.items[contentSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'padding-right': paddingRight
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[contentSelector]['padding-bottom'] != undefined ? blockCssY.items[contentSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[contentSelector]['padding-left'] != undefined ? blockCssY.items[contentSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'padding-left': paddingLeft
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControlHeader(nextValues) {
      var responsive = header.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...header.styles,
        margin: responsive
      };
      setAttributes({
        header: { ...header,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[headerSelector] = blockCssY.items[headerSelector] != undefined ? blockCssY.items[headerSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[headerSelector]['margin-top'] != undefined ? blockCssY.items[headerSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'margin-top': marginTop
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[headerSelector]['margin-right'] !== undefined ? blockCssY.items[headerSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'margin-right': marginRight
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[headerSelector]['margin-bottom'] !== undefined ? blockCssY.items[headerSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'margin-bottom': marginBottom
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[headerSelector]['margin-left'] !== undefined ? blockCssY.items[headerSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'margin-left': marginLeft
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControlContent(nextValues) {
      var responsive = content.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...content.styles,
        margin: responsive
      };
      setAttributes({
        content: { ...content,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[contentSelector] = blockCssY.items[contentSelector] != undefined ? blockCssY.items[contentSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[contentSelector]['margin-top'] != undefined ? blockCssY.items[contentSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'margin-top': marginTop
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[contentSelector]['margin-right'] !== undefined ? blockCssY.items[contentSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'margin-right': marginRight
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[contentSelector]['margin-bottom'] !== undefined ? blockCssY.items[contentSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'margin-bottom': marginBottom
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[contentSelector]['margin-left'] !== undefined ? blockCssY.items[contentSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'margin-left': marginLeft
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2",
      title: "header",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Header",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: header.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...header.options,
          tag: newVal
        };
        setAttributes({
          header: { ...header,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: header.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(header.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = header.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...header.styles,
          color: newValuesObj
        };
        setAttributes({
          header: { ...header,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: header.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(header.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = header.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...header.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          header: { ...header,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Active Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: headerActive.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(headerActive.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = headerActive.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...headerActive.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          headerActive: { ...headerActive,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[headerActiveSelector] = { ...blockCssY.items[headerActiveSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: header.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlHeader(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: header.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlHeader(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Content",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: content.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...content.options,
          tag: newVal
        };
        setAttributes({
          content: { ...content,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: content.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(content.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = content.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...content.styles,
          color: newValuesObj
        };
        setAttributes({
          content: { ...content,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[contentSelector] = { ...blockCssY.items[contentSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: content.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(content.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = content.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...content.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          content: { ...content,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[contentSelector] = { ...blockCssY.items[contentSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: content.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlContent(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: content.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlContent(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_16__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Choose Toggled Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_16__["default"], {
      library: iconToggle.options.library,
      srcType: iconToggle.options.srcType,
      iconSrc: iconToggle.options.iconSrc,
      onChange: onChangeIconToggle
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose...',
        value: ''
      }, {
        label: 'Before Header Text',
        value: 'beforeHeader'
      }, {
        label: 'After Header Text',
        value: 'afterHeader'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Enable Icon Toggle"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: icon.options.enableToggle,
      options: [{
        label: 'Yes',
        value: 'yes'
      }, {
        label: 'No',
        value: 'no'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          enableToggle: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_11__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Text "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, wrapperSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_13__["default"], {
      utm: {
        utm_source: 'BlockText',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: [blockId]
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "bg-blue-500 p-2 px-5 text-white my-4 text-center cursor-pointer",
      onClick: ev => {
        var itemx = items.concat({
          isActive: false,
          headerText: 'What is Lorem Ipsum?',
          content: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',
          icon: '',
          iconToggle: '',
          styles: {}
        });
        setAttributes({
          items: itemx
        });
      }
    }, "Add"), items.map((item, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: `${header.options.class} ${items[i].isActive ? 'active' : ''} cursor-pointer`,
        onClick: ev => {
          items[i].isActive = !items[i].isActive;
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
        }
      }, icon.options.position == 'beforeHeader' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, icon.options.enableToggle == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, !items[i].isActive && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      }), items[i].isActive && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap",
        dangerouslySetInnerHTML: {
          __html: iconToggleHtml
        }
      })), icon.options.enableToggle == 'no' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.RichText, {
        tagName: "span",
        value: item.headerText,
        allowedFormats: ['core/bold', 'core/italic', 'core/link'],
        onChange: content => {
          items[i].headerText = content;
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
        },
        placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Start Writing...')
      }), icon.options.position == 'afterHeader' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, icon.options.enableToggle == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, !items[i].isActive && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap float-right",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      }), items[i].isActive && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap float-right",
        dangerouslySetInnerHTML: {
          __html: iconToggleHtml
        }
      })), icon.options.enableToggle == 'no' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap float-right",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "text-lg cursor-pointer px-2 text-red-500  py-1 float-right icon-close",
        onClick: ev => {
          items.splice(i, 1);
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
          ev.preventDefault();
        }
      })), items[i].isActive && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: content.options.class
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.RichText, {
        tagName: "div",
        value: item.content,
        allowedFormats: ['core/bold', 'core/italic', 'core/link'],
        onChange: content => {
          items[i].content = content;
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
        },
        placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Start Writing...')
      })));
    })))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/archive-description/index.js":
/*!*************************************************!*\
  !*** ./src/blocks/archive-description/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");













const {
  RawHTML
} = wp.element;












var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/archive-description", {
  title: "Archive description",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 95C25 92.2386 27.2386 90 30 90H470C472.761 90 475 92.2386 475 95V145C475 147.761 472.761 150 470 150H30C27.2386 150 25 147.761 25 145V95Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 234C25 231.239 27.2386 229 30 229H470C472.761 229 475 231.239 475 234V254C475 256.761 472.761 259 470 259H30C27.2386 259 25 256.761 25 254V234Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 298C25 295.239 27.2386 293 30 293H470C472.761 293 475 295.239 475 298V318C475 320.761 472.761 323 470 323H30C27.2386 323 25 320.761 25 318V298Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 362C25 359.239 27.2386 357 30 357H366C368.761 357 371 359.239 371 362V382C371 384.761 368.761 387 366 387H30C27.2386 387 25 384.761 25 382V362Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    archiveTitle: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          archiveType: 'auto',
          customLabel: 'Archive: %s',
          dateFormat: '',
          linkTo: '',
          // postUrl, customField, authorUrl, authorLink, homeUrl, custom
          linkToUrl: '',
          linkToMetaKey: '',
          linkTarget: '_blank',
          linkAttr: [],
          customUrl: '',
          class: ''
        },
        styles: {
          textAlign: {},
          display: {},
          width: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'far fa-calendar-alt',
          position: 'beforeArchiveTitle',

          /*before, after, prefix, postfix */
          class: 'postdate-icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    prefix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    postfix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    let archiveTitle = attributes.archiveTitle;
    var wrapper = attributes.wrapper;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var icon = attributes.icon;
    var prefix = attributes.prefix;
    var postfix = attributes.postfix;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [customTags, setCustomTags] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [linkPickerPosttitle, setLinkPickerPosttitle] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    var archiveTypes = {
      'auto': {
        label: 'Auto Detect',
        value: 'auto'
      } // 'author': { label: 'Author', value: 'author' },
      // 'category': { label: 'Category', value: 'category' },
      // 'tag': { label: 'Tag', value: 'tag' },
      // 'taxonomy': { label: 'Taxonomy', value: 'taxonomy' },
      // 'search': { label: 'Search', value: 'search' },
      // 'index': { label: 'Index', value: 'index' },
      // 'year': { label: 'Year', value: 'year' },
      // 'month': { label: 'Month', value: 'month' },
      // 'date': { label: 'Date', value: 'date' },
      // 'wcCatalog': { label: 'WooCommerce Catalog', value: 'wcCatalog' },
      // 'wcSearch': { label: 'WooCommerce Search', value: 'wcSearch' },

    };
    var dateFormats = {
      'Y-M-d': {
        label: '2022-May-25',
        value: 'Y-M-d'
      },
      'Y-m-d': {
        label: '2022-05-25',
        value: 'Y-m-d'
      },
      'd-m-y': {
        label: '25-05-2022',
        value: 'd-m-y'
      },
      'd/m/y': {
        label: '25/05/2022',
        value: 'd/m/y'
      },
      'y-m-d': {
        label: '2022-05-25',
        value: 'y-m-d'
      },
      'y/m/d': {
        label: '2022/05/25',
        value: 'y/m/d'
      },
      'D M y': {
        label: 'Sun May 2022',
        value: 'D M y'
      },
      'D M d, y': {
        label: 'Sun May 11, 2022',
        value: 'D M d, y'
      },
      'M D d, y': {
        label: 'May Sun 11, 2022',
        value: 'M D d, y'
      },
      'M d, y': {
        label: 'May 11, 2022',
        value: 'M d, y'
      },
      'd M y': {
        label: '25 May 2022',
        value: 'd M y'
      }
    };
    const [archiveTitleEdited, setarchiveTitleEdited] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Hello %s');

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      console.log(archiveTitle);
      var archiveType = archiveTitle.options.archiveType;

      if (archiveType == 'auto') {
        //archiveTitleEdited = archiveTitle.options.customLabel;
        setarchiveTitleEdited(archiveTitle.options.customLabel);
      }
    }, [archiveTitle]);

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    String.prototype.strtr = function (dic) {
      const str = this.toString(),
            makeToken = inx => `{{###~${inx}~###}}`,
            tokens = Object.keys(dic).map((key, inx) => ({
        key,
        val: dic[key],
        token: makeToken(inx)
      })),
            tokenizedStr = tokens.reduce((carry, entry) => carry.replace(new RegExp(entry.key, "g"), entry.token), str);

      return tokens.reduce((carry, entry) => carry.replace(new RegExp(entry.token, "g"), entry.val), tokenizedStr);
    };

    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      console.log(iconHtml);
      setIconHtml(iconHtml);
    }, [icon]);
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ archiveTitle: archiveTitle });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
      customTags['currentYear'] = '2022';
      customTags['currentMonth'] = '07';
      customTags['currentDay'] = '27';
      customTags['currentDate'] = '27';
      customTags['currentTime'] = '27';
      customTags['postPublishDate'] = '123';
      customTags['postModifiedDate'] = '123';
      customTags['termId'] = '';
      customTags['termTitle'] = '';
      customTags['termDescription'] = '';
      customTags['termPostCount'] = '';
      customTags['postTagTitle'] = 'First Tag Title';
      customTags['postTagsTitle'] = 'First Tag Title';
      customTags['postCategoryTitle'] = 'First Category Title';
      customTags['postCategoriesTitle'] = 'First Categories Title';
      customTags['postTermTitle'] = 'First Term Title';
      customTags['postTermsTitle'] = 'List of all terms title';
      customTags['postId'] = '123';
      customTags['postStatus'] = '123';
      customTags['authorId'] = '123';
      customTags['authorName'] = 'Nur Hasan';
      customTags['authorFirstName'] = 'Nur';
      customTags['authorLastName'] = 'Hasan';
      customTags['authorDescription'] = 'Hasan';
      customTags['excerpt'] = 'Here is the post excerpt';
      customTags['rankmathTitle'] = 'Hasan';
      customTags['rankmathPermalink'] = 'Hasan';
      customTags['rankmathExcerpt'] = 'Hasan';
      customTags['rankmathFocusKeyword'] = 'Hasan';
      customTags['rankmathFocusKeywords'] = 'Hasan';
      customTags['rankmathOrgname'] = 'Hasan';
      customTags['rankmathOrgurl'] = 'Hasan';
      customTags['rankmathOrglogo'] = 'Hasan';
      customTags['siteTitle'] = '';
      customTags['siteDescription'] = '';
      customTags['siteTagline'] = '';
      customTags['postMeta'] = '';
      customTags['separator'] = '';
      customTags['searchTerms'] = '';
      customTags['counter'] = '1';
    }, [clientId]); // Wrapper CSS Class Selectors

    const postDateWrapperSelector = blockClass;
    var postDateSelector = '';

    if (wrapper.options.tag.length != 0) {
      if (archiveTitle.options.linkTo.length > 0) {
        postDateSelector = blockClass + ' a';
      } else {
        postDateSelector = blockClass; //postDateSelector = blockClass + ' .archiveTitle';
      }
    } else {
      postDateSelector = blockClass;
    }

    const postDatePrefixSelector = blockClass + ' .prefix';
    const postDatePostfixSelector = blockClass + ' .postfix';
    const iconSelector = blockClass + ' .postdate-icon';
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function paddingControl(nextValues) {
      var responsive = archiveTitle.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...archiveTitle.styles,
        padding: responsive
      };
      setAttributes({
        archiveTitle: { ...archiveTitle,
          styles: styles
        }
      });
      blockCssY.items[postDateSelector] = blockCssY.items[postDateSelector] != undefined ? blockCssY.items[postDateSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[postDateSelector]['padding-top'] != undefined ? blockCssY.items[postDateSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[postDateSelector]['padding-right'] != undefined ? blockCssY.items[postDateSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[postDateSelector]['padding-bottom'] != undefined ? blockCssY.items[postDateSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[postDateSelector]['padding-left'] != undefined ? blockCssY.items[postDateSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControl(nextValues) {
      var responsive = archiveTitle.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...archiveTitle.styles,
        margin: responsive
      };
      setAttributes({
        archiveTitle: { ...archiveTitle,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[postDateSelector] = blockCssY.items[postDateSelector] != undefined ? blockCssY.items[postDateSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[postDateSelector]['margin-top'] != undefined ? blockCssY.items[postDateSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[postDateSelector]['margin-right'] !== undefined ? blockCssY.items[postDateSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[postDateSelector]['margin-bottom'] !== undefined ? blockCssY.items[postDateSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[postDateSelector]['margin-left'] !== undefined ? blockCssY.items[postDateSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
    }, [archiveTitle]);

    var linkAttrObj = () => {
      var sdsd = {};
      archiveTitle.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = archiveTitle.options.customUrl != undefined && archiveTitle.options.customUrl.length > 0 ? archiveTitle.options.customUrl : currentPostUrl;
    const CustomTag = `${wrapper.options.tag}`;
    const CustomTagPostTitle = `${archiveTitle.options.tag}`;

    function onChangeTypo(typoX) {
      setAttributes({
        archiveTitle: { ...archiveTitle,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[postDateSelector] != undefined ? blockCssY.items[postDateSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[postDateSelector]['line-height'] != undefined ? blockCssY.items[postDateSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[postDateSelector]['letter-spacing'] != undefined ? blockCssY.items[postDateSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: {
            options: wrapper.options,
            styles: styles
          }
        });
        blockCssY.items[postDateWrapperSelector] = { ...blockCssY.items[postDateWrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: {
            styles: wrapper.styles,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_19__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[postDateWrapperSelector] = { ...blockCssY.items[postDateWrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Archive Title",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Archive Type"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_17__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: archiveTypes,
      buttonTitle: "Choose",
      onChange: (option, index) => {
        var options = { ...archiveTitle.options,
          archiveType: option.value
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      },
      values: ''
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-500 text-white p-3 py-2"
    }, archiveTypes[archiveTitle.options.archiveType].label), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Label"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: archiveTitle.options.customLabel,
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          customLabel: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), (archiveTitle.options.archiveType == 'year' || archiveTitle.options.archiveType == 'month' || archiveTitle.options.archiveType == 'day') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Date Format"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_17__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: dateFormats,
      buttonTitle: "Choose",
      onChange: (option, index) => {
        var options = { ...archiveTitle.options,
          dateFormat: option.value
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      },
      values: ''
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Format"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: archiveTitle.options.dateFormat,
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          dateFormat: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), dateFormats[archiveTitle.options.dateFormat] != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2 my-3 bg-gray-500 text-white"
    }, dateFormats[archiveTitle.options.dateFormat].label)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: archiveTitle.options.linkTo,
      options: [{
        label: 'No Link',
        value: ''
      }, {
        label: 'Post URL',
        value: 'postUrl'
      }, {
        label: 'Custom Field',
        value: 'customField'
      }, {
        label: 'Author URL',
        value: 'authorUrl'
      }, {
        label: 'Author Link',
        value: 'authorLink'
      }, {
        label: 'Home URL',
        value: 'homeUrl'
      }, {
        label: 'Custom',
        value: 'custom'
      }],
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          linkTo: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), archiveTitle.options.linkTo == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: archiveTitle.options.linkToMetaKey,
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          linkToMetaKey: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), archiveTitle.options.customUrl.length > 0 && postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_10__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postpostDate&utm_campaign=pluginPostGrid&utm_medium=postpostDate-customUrl"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Custom URL"), " feature only avilable in pro version")), archiveTitle.options.linkTo == 'custom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerPosttitle ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"],
      onClick: ev => {
        setLinkPickerPosttitle(prev => !prev);
      }
    }), archiveTitle.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"],
      onClick: ev => {
        var options = { ...archiveTitle.options,
          customUrl: ''
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
        setLinkPickerPosttitle(false);
      }
    }), linkPickerPosttitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.__experimentalLinkControl, {
      settings: [],
      value: archiveTitle.options.customUrl,
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          customUrl: newVal.url
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", archiveTitle.options.customUrl.length != 0 ? archiveTitle.options.customUrl : 'No link', " ")))), archiveTitle.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: archiveTitle.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          tag: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), archiveTitle.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: archiveTitle.options.linkTarget,
      options: [{
        label: 'Choose...',
        value: ''
      }, {
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          linkTarget: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = archiveTitle.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...archiveTitle.options,
          linkAttr: sdsd
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), archiveTitle.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: archiveTitle.options.linkAttr[i].id,
        onChange: newVal => {
          archiveTitle.options.linkAttr[i].id = newVal;
          var ssdsd = archiveTitle.options.linkAttr.concat([]);
          var options = { ...archiveTitle.options,
            linkAttr: ssdsd
          };
          setAttributes({
            archiveTitle: { ...archiveTitle,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          archiveTitle.options.linkAttr[i].val = newVal;
          var ssdsd = archiveTitle.options.linkAttr.concat([]);
          var options = { ...archiveTitle.options,
            linkAttr: ssdsd
          };
          setAttributes({
            archiveTitle: { ...archiveTitle,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          archiveTitle.options.linkAttr.splice(i, 1);
          var ssdsd = archiveTitle.options.linkAttr.concat([]);
          var options = { ...archiveTitle.options,
            linkAttr: ssdsd
          };
          setAttributes({
            archiveTitle: { ...archiveTitle,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: archiveTitle.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(archiveTitle.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = archiveTitle.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...archiveTitle.styles,
          color: newValuesObj
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: archiveTitle.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(archiveTitle.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = archiveTitle.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...archiveTitle.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: archiveTitle.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: archiveTitle
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: archiveTitle.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }, {
        label: 'none',
        value: 'none'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(archiveTitle.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = archiveTitle.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...archiveTitle.styles,
          display: newValuesObj
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[postDateSelector] == undefined) {
          newValuesObjX[postDateSelector] = { ...blockCssY.items[postDateSelector],
            display: newValuesObj
          };
        } else {
          newValuesObjX[postDateSelector] = { ...blockCssY.items[postDateSelector],
            display: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: archiveTitle.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: archiveTitle.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_18__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Archive Title',
        value: 'beforeArchiveTitle'
      }, {
        label: 'After Archive Title',
        value: 'afterArchiveTitle'
      }, {
        label: 'Before Prefix',
        value: 'beforePrefix'
      }, {
        label: 'After Prefix',
        value: 'afterPrefix'
      }, {
        label: 'Before Postfix',
        value: 'beforePostfix'
      }, {
        label: 'After Postfix',
        value: 'afterPostfix'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Prefix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: prefix.options.text,
      onChange: newVal => {
        var options = { ...prefix.options,
          text: newVal
        };
        setAttributes({
          prefix: {
            styles: prefix.styles,
            options: options
          }
        }); // setAttributes({ prefix: { text: newVal, class: prefix.options.class, color: prefix.color, bgColor: prefix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Postfix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: postfix.options.text,
      onChange: newVal => {
        var options = { ...postfix.options,
          text: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            options: options
          }
        }); // setAttributes({ postfix: { text: newVal, class: prefix.options.class, color: postfix.color, bgColor: postfix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDateWrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title link"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDateSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDatePrefixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDatePostfixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_13__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_14__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId]
    }, icon.options.position == 'beforePrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'afterPrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitle.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "archiveTitle",
      onClick: handleLinkClick
    }, linkAttrItems, {
      target: archiveTitle.options.linkTarget,
      href: postUrl
    }), icon.options.position == 'beforeArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitleEdited, icon.options.position == 'afterArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), archiveTitle.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforeArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitleEdited, icon.options.position == 'afterArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text), icon.options.position == 'afterPostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), wrapper.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitle.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "archiveTitle",
      onClick: handleLinkClick
    }, linkAttrItems, {
      target: archiveTitle.options.linkTarget,
      href: postUrl
    }), "A", icon.options.position == 'beforeArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitleEdited, icon.options.position == 'afterArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), archiveTitle.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, icon.options.position == 'beforeArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitleEdited, icon.options.position == 'afterArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }))))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/archive-title/index.js":
/*!*******************************************!*\
  !*** ./src/blocks/archive-title/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");













const {
  RawHTML
} = wp.element;












var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/archive-title", {
  title: "Archive Title",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 95C25 92.2386 27.2386 90 30 90H470C472.761 90 475 92.2386 475 95V145C475 147.761 472.761 150 470 150H30C27.2386 150 25 147.761 25 145V95Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 234C25 231.239 27.2386 229 30 229H470C472.761 229 475 231.239 475 234V254C475 256.761 472.761 259 470 259H30C27.2386 259 25 256.761 25 254V234Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 298C25 295.239 27.2386 293 30 293H470C472.761 293 475 295.239 475 298V318C475 320.761 472.761 323 470 323H30C27.2386 323 25 320.761 25 318V298Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 362C25 359.239 27.2386 357 30 357H366C368.761 357 371 359.239 371 362V382C371 384.761 368.761 387 366 387H30C27.2386 387 25 384.761 25 382V362Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    archiveTitle: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          archiveType: 'auto',
          customLabel: 'Archive: %s',
          dateFormat: '',
          linkTo: '',
          // postUrl, customField, authorUrl, authorLink, homeUrl, custom
          linkToUrl: '',
          linkToMetaKey: '',
          linkTarget: '_blank',
          linkAttr: [],
          customUrl: '',
          class: ''
        },
        styles: {
          textAlign: {},
          display: {},
          width: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'far fa-calendar-alt',
          position: 'beforeArchiveTitle',

          /*before, after, prefix, postfix */
          class: 'postdate-icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    prefix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    postfix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    let archiveTitle = attributes.archiveTitle;
    var wrapper = attributes.wrapper;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var icon = attributes.icon;
    var prefix = attributes.prefix;
    var postfix = attributes.postfix;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [customTags, setCustomTags] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [linkPickerPosttitle, setLinkPickerPosttitle] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    var archiveTypes = {
      'auto': {
        label: 'Auto Detect',
        value: 'auto'
      } // 'author': { label: 'Author', value: 'author' },
      // 'category': { label: 'Category', value: 'category' },
      // 'tag': { label: 'Tag', value: 'tag' },
      // 'taxonomy': { label: 'Taxonomy', value: 'taxonomy' },
      // 'search': { label: 'Search', value: 'search' },
      // 'index': { label: 'Index', value: 'index' },
      // 'year': { label: 'Year', value: 'year' },
      // 'month': { label: 'Month', value: 'month' },
      // 'date': { label: 'Date', value: 'date' },
      // 'wcCatalog': { label: 'WooCommerce Catalog', value: 'wcCatalog' },
      // 'wcSearch': { label: 'WooCommerce Search', value: 'wcSearch' },

    };
    var dateFormats = {
      'Y-M-d': {
        label: '2022-May-25',
        value: 'Y-M-d'
      },
      'Y-m-d': {
        label: '2022-05-25',
        value: 'Y-m-d'
      },
      'd-m-y': {
        label: '25-05-2022',
        value: 'd-m-y'
      },
      'd/m/y': {
        label: '25/05/2022',
        value: 'd/m/y'
      },
      'y-m-d': {
        label: '2022-05-25',
        value: 'y-m-d'
      },
      'y/m/d': {
        label: '2022/05/25',
        value: 'y/m/d'
      },
      'D M y': {
        label: 'Sun May 2022',
        value: 'D M y'
      },
      'D M d, y': {
        label: 'Sun May 11, 2022',
        value: 'D M d, y'
      },
      'M D d, y': {
        label: 'May Sun 11, 2022',
        value: 'M D d, y'
      },
      'M d, y': {
        label: 'May 11, 2022',
        value: 'M d, y'
      },
      'd M y': {
        label: '25 May 2022',
        value: 'd M y'
      }
    };
    const [archiveTitleEdited, setarchiveTitleEdited] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Hello %s');

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      console.log(archiveTitle);
      var archiveType = archiveTitle.options.archiveType;

      if (archiveType == 'auto') {
        //archiveTitleEdited = archiveTitle.options.customLabel;
        setarchiveTitleEdited(archiveTitle.options.customLabel);
      }
    }, [archiveTitle]);

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    String.prototype.strtr = function (dic) {
      const str = this.toString(),
            makeToken = inx => `{{###~${inx}~###}}`,
            tokens = Object.keys(dic).map((key, inx) => ({
        key,
        val: dic[key],
        token: makeToken(inx)
      })),
            tokenizedStr = tokens.reduce((carry, entry) => carry.replace(new RegExp(entry.key, "g"), entry.token), str);

      return tokens.reduce((carry, entry) => carry.replace(new RegExp(entry.token, "g"), entry.val), tokenizedStr);
    };

    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      console.log(iconHtml);
      setIconHtml(iconHtml);
    }, [icon]);
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ archiveTitle: archiveTitle });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
      customTags['currentYear'] = '2022';
      customTags['currentMonth'] = '07';
      customTags['currentDay'] = '27';
      customTags['currentDate'] = '27';
      customTags['currentTime'] = '27';
      customTags['postPublishDate'] = '123';
      customTags['postModifiedDate'] = '123';
      customTags['termId'] = '';
      customTags['termTitle'] = '';
      customTags['termDescription'] = '';
      customTags['termPostCount'] = '';
      customTags['postTagTitle'] = 'First Tag Title';
      customTags['postTagsTitle'] = 'First Tag Title';
      customTags['postCategoryTitle'] = 'First Category Title';
      customTags['postCategoriesTitle'] = 'First Categories Title';
      customTags['postTermTitle'] = 'First Term Title';
      customTags['postTermsTitle'] = 'List of all terms title';
      customTags['postId'] = '123';
      customTags['postStatus'] = '123';
      customTags['authorId'] = '123';
      customTags['authorName'] = 'Nur Hasan';
      customTags['authorFirstName'] = 'Nur';
      customTags['authorLastName'] = 'Hasan';
      customTags['authorDescription'] = 'Hasan';
      customTags['excerpt'] = 'Here is the post excerpt';
      customTags['rankmathTitle'] = 'Hasan';
      customTags['rankmathPermalink'] = 'Hasan';
      customTags['rankmathExcerpt'] = 'Hasan';
      customTags['rankmathFocusKeyword'] = 'Hasan';
      customTags['rankmathFocusKeywords'] = 'Hasan';
      customTags['rankmathOrgname'] = 'Hasan';
      customTags['rankmathOrgurl'] = 'Hasan';
      customTags['rankmathOrglogo'] = 'Hasan';
      customTags['siteTitle'] = '';
      customTags['siteDescription'] = '';
      customTags['siteTagline'] = '';
      customTags['postMeta'] = '';
      customTags['separator'] = '';
      customTags['searchTerms'] = '';
      customTags['counter'] = '1';
    }, [clientId]); // Wrapper CSS Class Selectors

    const postDateWrapperSelector = blockClass;
    var postDateSelector = '';

    if (wrapper.options.tag.length != 0) {
      if (archiveTitle.options.linkTo.length > 0) {
        postDateSelector = blockClass + ' a';
      } else {
        postDateSelector = blockClass; //postDateSelector = blockClass + ' .archiveTitle';
      }
    } else {
      postDateSelector = blockClass;
    }

    const postDatePrefixSelector = blockClass + ' .prefix';
    const postDatePostfixSelector = blockClass + ' .postfix';
    const iconSelector = blockClass + ' .postdate-icon';
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function paddingControl(nextValues) {
      var responsive = archiveTitle.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...archiveTitle.styles,
        padding: responsive
      };
      setAttributes({
        archiveTitle: { ...archiveTitle,
          styles: styles
        }
      });
      blockCssY.items[postDateSelector] = blockCssY.items[postDateSelector] != undefined ? blockCssY.items[postDateSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[postDateSelector]['padding-top'] != undefined ? blockCssY.items[postDateSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[postDateSelector]['padding-right'] != undefined ? blockCssY.items[postDateSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[postDateSelector]['padding-bottom'] != undefined ? blockCssY.items[postDateSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[postDateSelector]['padding-left'] != undefined ? blockCssY.items[postDateSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControl(nextValues) {
      var responsive = archiveTitle.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...archiveTitle.styles,
        margin: responsive
      };
      setAttributes({
        archiveTitle: { ...archiveTitle,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[postDateSelector] = blockCssY.items[postDateSelector] != undefined ? blockCssY.items[postDateSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[postDateSelector]['margin-top'] != undefined ? blockCssY.items[postDateSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[postDateSelector]['margin-right'] !== undefined ? blockCssY.items[postDateSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[postDateSelector]['margin-bottom'] !== undefined ? blockCssY.items[postDateSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[postDateSelector]['margin-left'] !== undefined ? blockCssY.items[postDateSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
    }, [archiveTitle]);

    var linkAttrObj = () => {
      var sdsd = {};
      archiveTitle.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = archiveTitle.options.customUrl != undefined && archiveTitle.options.customUrl.length > 0 ? archiveTitle.options.customUrl : currentPostUrl;
    const CustomTag = `${wrapper.options.tag}`;
    const CustomTagPostTitle = `${archiveTitle.options.tag}`;

    function onChangeTypo(typoX) {
      setAttributes({
        archiveTitle: { ...archiveTitle,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[postDateSelector] != undefined ? blockCssY.items[postDateSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[postDateSelector]['line-height'] != undefined ? blockCssY.items[postDateSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[postDateSelector]['letter-spacing'] != undefined ? blockCssY.items[postDateSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: {
            options: wrapper.options,
            styles: styles
          }
        });
        blockCssY.items[postDateWrapperSelector] = { ...blockCssY.items[postDateWrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: {
            styles: wrapper.styles,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_19__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[postDateWrapperSelector] = { ...blockCssY.items[postDateWrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Archive Title",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Archive Type"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_17__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: archiveTypes,
      buttonTitle: "Choose",
      onChange: (option, index) => {
        var options = { ...archiveTitle.options,
          archiveType: option.value
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      },
      values: ''
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-500 text-white p-3 py-2"
    }, archiveTypes[archiveTitle.options.archiveType].label), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Label"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: archiveTitle.options.customLabel,
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          customLabel: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), (archiveTitle.options.archiveType == 'year' || archiveTitle.options.archiveType == 'month' || archiveTitle.options.archiveType == 'day') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Date Format"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_17__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: dateFormats,
      buttonTitle: "Choose",
      onChange: (option, index) => {
        var options = { ...archiveTitle.options,
          dateFormat: option.value
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      },
      values: ''
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Format"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: archiveTitle.options.dateFormat,
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          dateFormat: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), dateFormats[archiveTitle.options.dateFormat] != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2 my-3 bg-gray-500 text-white"
    }, dateFormats[archiveTitle.options.dateFormat].label)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: archiveTitle.options.linkTo,
      options: [{
        label: 'No Link',
        value: ''
      }, {
        label: 'Post URL',
        value: 'postUrl'
      }, {
        label: 'Custom Field',
        value: 'customField'
      }, {
        label: 'Author URL',
        value: 'authorUrl'
      }, {
        label: 'Author Link',
        value: 'authorLink'
      }, {
        label: 'Home URL',
        value: 'homeUrl'
      }, {
        label: 'Custom',
        value: 'custom'
      }],
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          linkTo: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), archiveTitle.options.linkTo == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: archiveTitle.options.linkToMetaKey,
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          linkToMetaKey: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), archiveTitle.options.customUrl.length > 0 && postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_10__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postpostDate&utm_campaign=pluginPostGrid&utm_medium=postpostDate-customUrl"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Custom URL"), " feature only avilable in pro version")), archiveTitle.options.linkTo == 'custom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerPosttitle ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"],
      onClick: ev => {
        setLinkPickerPosttitle(prev => !prev);
      }
    }), archiveTitle.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"],
      onClick: ev => {
        var options = { ...archiveTitle.options,
          customUrl: ''
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
        setLinkPickerPosttitle(false);
      }
    }), linkPickerPosttitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.__experimentalLinkControl, {
      settings: [],
      value: archiveTitle.options.customUrl,
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          customUrl: newVal.url
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", archiveTitle.options.customUrl.length != 0 ? archiveTitle.options.customUrl : 'No link', " ")))), archiveTitle.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: archiveTitle.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          tag: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), archiveTitle.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: archiveTitle.options.linkTarget,
      options: [{
        label: 'Choose...',
        value: ''
      }, {
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...archiveTitle.options,
          linkTarget: newVal
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = archiveTitle.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...archiveTitle.options,
          linkAttr: sdsd
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), archiveTitle.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: archiveTitle.options.linkAttr[i].id,
        onChange: newVal => {
          archiveTitle.options.linkAttr[i].id = newVal;
          var ssdsd = archiveTitle.options.linkAttr.concat([]);
          var options = { ...archiveTitle.options,
            linkAttr: ssdsd
          };
          setAttributes({
            archiveTitle: { ...archiveTitle,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          archiveTitle.options.linkAttr[i].val = newVal;
          var ssdsd = archiveTitle.options.linkAttr.concat([]);
          var options = { ...archiveTitle.options,
            linkAttr: ssdsd
          };
          setAttributes({
            archiveTitle: { ...archiveTitle,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          archiveTitle.options.linkAttr.splice(i, 1);
          var ssdsd = archiveTitle.options.linkAttr.concat([]);
          var options = { ...archiveTitle.options,
            linkAttr: ssdsd
          };
          setAttributes({
            archiveTitle: { ...archiveTitle,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: archiveTitle.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(archiveTitle.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = archiveTitle.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...archiveTitle.styles,
          color: newValuesObj
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: archiveTitle.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(archiveTitle.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = archiveTitle.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...archiveTitle.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: archiveTitle.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: archiveTitle
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: archiveTitle.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }, {
        label: 'none',
        value: 'none'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(archiveTitle.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = archiveTitle.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...archiveTitle.styles,
          display: newValuesObj
        };
        setAttributes({
          archiveTitle: { ...archiveTitle,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[postDateSelector] == undefined) {
          newValuesObjX[postDateSelector] = { ...blockCssY.items[postDateSelector],
            display: newValuesObj
          };
        } else {
          newValuesObjX[postDateSelector] = { ...blockCssY.items[postDateSelector],
            display: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: archiveTitle.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: archiveTitle.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_18__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Archive Title',
        value: 'beforeArchiveTitle'
      }, {
        label: 'After Archive Title',
        value: 'afterArchiveTitle'
      }, {
        label: 'Before Prefix',
        value: 'beforePrefix'
      }, {
        label: 'After Prefix',
        value: 'afterPrefix'
      }, {
        label: 'Before Postfix',
        value: 'beforePostfix'
      }, {
        label: 'After Postfix',
        value: 'afterPostfix'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Prefix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: prefix.options.text,
      onChange: newVal => {
        var options = { ...prefix.options,
          text: newVal
        };
        setAttributes({
          prefix: {
            styles: prefix.styles,
            options: options
          }
        }); // setAttributes({ prefix: { text: newVal, class: prefix.options.class, color: prefix.color, bgColor: prefix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Postfix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: postfix.options.text,
      onChange: newVal => {
        var options = { ...postfix.options,
          text: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            options: options
          }
        }); // setAttributes({ postfix: { text: newVal, class: prefix.options.class, color: postfix.color, bgColor: postfix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDateWrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title link"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDateSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDatePrefixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDatePostfixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_13__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_14__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId]
    }, icon.options.position == 'beforePrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'afterPrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitle.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "archiveTitle",
      onClick: handleLinkClick
    }, linkAttrItems, {
      target: archiveTitle.options.linkTarget,
      href: postUrl
    }), icon.options.position == 'beforeArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitleEdited, icon.options.position == 'afterArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), archiveTitle.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforeArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitleEdited, icon.options.position == 'afterArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text), icon.options.position == 'afterPostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), wrapper.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitle.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "archiveTitle",
      onClick: handleLinkClick
    }, linkAttrItems, {
      target: archiveTitle.options.linkTarget,
      href: postUrl
    }), "A", icon.options.position == 'beforeArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitleEdited, icon.options.position == 'afterArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), archiveTitle.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, icon.options.position == 'beforeArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), archiveTitleEdited, icon.options.position == 'afterArchiveTitle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }))))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/breadcrumb/index.js":
/*!****************************************!*\
  !*** ./src/blocks/breadcrumb/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-sortablejs */ "./node_modules/react-sortablejs/dist/index.js");
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_sortablejs__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/icon/index.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/close.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/menu.js");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");















const {
  RawHTML
} = wp.element;










var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__.registerBlockType)("post-grid/breadcrumb", {
  title: "Breadcrumb",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M25 249.5C25 246.739 27.2386 244.5 30 244.5H470C472.761 244.5 475 246.739 475 249.5V299.5C475 302.261 472.761 304.5 470 304.5H30C27.2386 304.5 25 302.261 25 299.5V249.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M25 355.5C25 352.739 27.2386 350.5 30 350.5H470C472.761 350.5 475 352.739 475 355.5V405.5C475 408.261 472.761 410.5 470 410.5H30C27.2386 410.5 25 408.261 25 405.5V355.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M241 147C241 144.239 243.239 142 246 142H470C472.761 142 475 144.239 475 147V197C475 199.761 472.761 202 470 202H246C243.239 202 241 199.761 241 197V147Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M100 132.5C119.569 132.5 135.429 116.72 135.429 97.25C135.429 77.7799 119.569 62 100 62C80.4312 62 64.5714 77.7799 64.5714 97.25C64.5714 116.72 80.4312 132.5 100 132.5ZM124.8 141.312H120.178C114.033 144.121 107.196 145.719 100 145.719C92.8036 145.719 85.9946 144.121 79.8223 141.312H75.2C54.6625 141.312 38 157.891 38 178.325V189.781C38 197.079 43.9509 203 51.2857 203H148.714C156.049 203 162 197.079 162 189.781V178.325C162 157.891 145.337 141.312 124.8 141.312Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          class: 'icon',
          position: 'beforeLabel'
          /*beforeLabel, afterLabel, beforeseparator, afterseparator*/

        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    label: {
      type: 'object',
      default: {
        options: {
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    separator: {
      type: 'object',
      default: {
        options: {
          class: '',
          text: '»'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    elements: {
      "type": "object",
      "default": {
        options: {
          linkTarget: '_blank',
          showLabel: true,
          showSeparator: true,
          showIcon: false,
          iconPositon: 'beforeLabel' // beforeLabel, afterLabel, beforeseparator, afterseparator

        },
        styles: {
          textAlign: {},
          color: {
            Desktop: '#18978F'
          },
          bgColor: {},
          padding: {},
          margin: {
            Desktop: {
              top: '5px',
              right: '5px',
              bottom: '5px',
              left: '5px'
            }
          },
          display: {},
          borderRadius: {},
          fontSize: {
            Desktop: {
              val: '35'
            }
          },
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        items: [{
          id: 'text',
          label: 'Text',
          customText: '',
          url: '',
          siteIcon: {
            library: 'fontAwesome',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: ''
          },
          options: {
            text: 'You are here: ',
            showSeparator: true
          },
          styles: {
            textAlign: {},
            color: {},
            bgColor: {},
            padding: {},
            margin: {},
            display: {}
          }
        }, {
          id: 'homePage',
          label: 'Home Page Link',
          customText: '',
          url: '',
          siteIcon: {
            library: 'fontAwesome',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: ''
          },
          options: {
            showSeparator: true
          },
          styles: {
            textAlign: {},
            color: {},
            bgColor: {},
            padding: {},
            margin: {},
            display: {}
          }
        }, {
          id: 'postTitle',
          label: 'Post Title',
          customText: '',
          url: '',
          siteIcon: {
            library: 'fontAwesome',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: ''
          },
          options: {
            showSeparator: true
          },
          styles: {
            textAlign: {},
            color: {},
            bgColor: {},
            padding: {},
            margin: {},
            display: {}
          }
        }]
      } // avatar, name, description, id

    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var elements = attributes.elements;
    var icon = attributes.icon;
    var label = attributes.label;
    var separator = attributes.separator;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    var wrapperSelector = blockClass; // Wrapper CSS Class Selectors

    var itemSelector = blockClass + ' .item';
    var itemLinkSelector = blockClass + ' .item a';
    var iconSelector = blockClass + ' .item .icon';
    var labelSelector = blockClass + ' .item .label';
    var separatorSelector = blockClass + ' .item .separator';
    var [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    var [loading, setLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    var [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
      blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
        'font-size': {
          "Desktop": "16px"
        }
      };
      blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
        'display': {
          "Desktop": "inline-block"
        }
      };
      blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
        'list-style': {
          "Desktop": "none"
        }
      };
      blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
        'margin-right': {
          "Desktop": "10px"
        }
      };
      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      elements.items.map((x, index) => {
        var styles = x.styles;
        Object.entries(styles).map(y => {
          var attrId = y[0];
          var attrVal = y[1];

          if (Object.keys(attrVal).length != 0) {
            var attrIdX = '';

            if (attrId == 'bgColor') {
              attrIdX = 'background-color';
            } else if (attrId == 'textAlign') {
              attrIdX = 'text-align';
            } else {
              attrIdX = attrId;
            }

            if (blockCssY.items[itemSelector + '.item-' + index] == undefined) {
              blockCssY.items[itemSelector + '.item-' + index] = {};
              blockCssY.items[itemSelector + '.item-' + index][attrIdX] = attrVal;
            } else {
              blockCssY.items[itemSelector + '.item-' + index][attrIdX] = attrVal;
            }

            setAttributes({
              blockCssY: {
                items: blockCssY.items
              }
            });
          }
        });
      });
      setTimeout(x => {//setAttributes({ blockCssY: { items: newValuesObjX } });
      }, 2000);
    }, [elements]);
    var linkElements = [{
      id: 'text',
      label: 'Text',
      customText: 'You are here: ',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        text: 'You are here: ',
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'homePage',
      label: 'Home Page Link',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'frontPage',
      label: 'Front Page Link',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postsPage',
      label: 'Posts Page Link',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postTitle',
      label: 'Post Title',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postAuthor',
      label: 'Post Author',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postDate',
      label: 'Post Date',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        format: 'Y-m-d',
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postDay',
      label: 'Post Day',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        format: '',
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postMonth',
      label: 'Post Month',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        format: '',
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postYear',
      label: 'Post Year',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        format: '',
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postAncestors',
      isPro: true,
      label: 'Post Ancestors',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true,
        count: ''
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postId',
      label: 'Post Id',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postCategory',
      label: 'Post Category',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postTag',
      label: 'Post Tag',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postCategories',
      isPro: true,
      label: 'Post Categories',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true,
        maxCount: 3
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postTags',
      isPro: true,
      label: 'Post Tags',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true,
        maxCount: 3
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postTerm',
      isPro: true,
      label: 'Post Term',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        taxonomy: '',
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'postTerms',
      isPro: true,
      label: 'Post Terms',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        taxonomy: '',
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'termTitle',
      label: 'Term Title',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'termParents',
      isPro: true,
      label: 'Term Parents',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true,
        count: 0
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'termAncestors',
      isPro: true,
      label: 'Term Ancestors',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        taxonomy: '',
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'wcShop',
      label: 'WooCommerce Shop',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'wcAccount',
      label: 'WooCommerce Account',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'wcCart',
      label: 'WooCommerce Cart',
      isPro: true,
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'wcCheckout',
      label: 'WooCommerce Checkout',
      isPro: true,
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'searchText',
      label: 'Search Text',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'archiveTitle',
      label: 'Archive Title',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: '404Text',
      label: '404 Text',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'dateText',
      label: 'Date Text',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true,
        format: 'Y-m-d'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'monthText',
      label: 'Month Text',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true,
        format: 'Y-m'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'yearText',
      label: 'Year Text',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true,
        format: 'Y'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'authorName',
      label: 'Author Name',
      customText: '%s',
      url: '',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: ''
      },
      options: {
        showSeparator: true
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }];

    function addMedia(option, index) {
      //var isExist = elements.items.find(x => x.label === option.label);
      //if (isExist == undefined) {
      //}
      var elementsX = elements.items.push(option);
      setAttributes({
        elements: { ...elements,
          items: elements.items
        }
      });
    }

    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function paddingControlItems(nextValues) {
      var responsive = elements.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...elements.styles,
        padding: responsive
      };
      setAttributes({
        elements: { ...elements,
          styles: styles
        }
      });
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[itemSelector]['padding-top'] != undefined ? blockCssY.items[itemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[itemSelector]['padding-right'] != undefined ? blockCssY.items[itemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[itemSelector]['padding-bottom'] != undefined ? blockCssY.items[itemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[itemSelector]['padding-left'] != undefined ? blockCssY.items[itemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlItems(nextValues) {
      var responsive = elements.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...elements.styles,
        margin: responsive
      };
      setAttributes({
        elements: { ...elements,
          styles: styles
        }
      });
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[itemSelector]['margin-top'] != undefined ? blockCssY.items[itemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[itemSelector]['margin-right'] !== undefined ? blockCssY.items[itemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[itemSelector]['margin-bottom'] !== undefined ? blockCssY.items[itemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[itemSelector]['margin-left'] !== undefined ? blockCssY.items[itemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypo(typoX) {
      setAttributes({
        elements: { ...elements,
          styles: typoX
        }
      });
      console.log(typoX);

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[itemSelector]['line-height'] != undefined ? blockCssY.items[itemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[itemSelector]['letter-spacing'] != undefined ? blockCssY.items[itemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-3",
      title: "General",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items",
      initialOpen: true
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Add Media"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_14__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: linkElements,
      buttonTitle: "Choose",
      onChange: addMedia,
      values: ""
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_sortablejs__WEBPACK_IMPORTED_MODULE_3__.ReactSortable, {
      list: elements.items,
      handle: '.handle',
      setList: item => {
        setAttributes({
          elements: { ...elements,
            items: item
          }
        });
      }
    }, elements.items.map((item, index) => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      key: item.id,
      className: ""
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "cursor-pointer hover:bg-red-500 hover:text-white px-1 py-1",
        onClick: ev => {
          var elementsX = elements.items.splice(index, 1);
          setAttributes({
            elements: { ...elements,
              items: elements.items
            }
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"]
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "handle cursor-pointer hover:bg-blue-500 hover:text-white px-1 py-1"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__["default"]
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "mx-2"
      }, item.label)),
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Custom Label"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: item.customText,
      placeholder: "You Text: %s",
      onChange: newVal => {
        elements.items[index].customText = newVal;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, "%s"), " for output")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Custom URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: item.url,
      onChange: newVal => {
        elements.items[index].url = newVal;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    })), (item.id == 'postTerms' || item.id == 'postTerm') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Taxonomy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: item.options.taxonomy,
      onChange: newVal => {
        elements.items[index].options.taxonomy = newVal;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    })), (item.id == 'termParents' || item.id == 'postAncestors') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Max Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: item.options.count,
      onChange: newVal => {
        elements.items[index].options.count = newVal;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Use ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, "-"), " (negetive sign) to count from end."))), (item.id == 'dateText' || item.id == 'monthText' || item.id == 'yearText' || item.id == 'postDate' || item.id == 'postDay' || item.id == 'postMonth' || item.id == 'postYear') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Date Format"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: item.options.format,
      onChange: newVal => {
        elements.items[index].options.format = newVal;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_19__["default"], {
      library: item.siteIcon.library,
      srcType: item.siteIcon.srcType,
      iconSrc: item.siteIcon.iconSrc,
      onChange: arg => {
        //var options = { ...icon.options, srcType: arg.srcType, library: arg.library, iconSrc: arg.iconSrc };
        //setAttributes({ icon: { ...icon, options: options } });
        elements.items[index].siteIcon = {
          srcType: arg.srcType,
          library: arg.library,
          iconSrc: arg.iconSrc
        };
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: elements.items[index].styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(elements.items[index].styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.items[index].styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.items[index].styles,
          color: newValuesObj
        };
        elements.items[index].styles = styles;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: elements.items[index].styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(elements.items[index].styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.items[index].styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.items[index].styles,
          bgColor: newValuesObj
        };
        elements.items[index].styles = styles;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        }); // var newValuesObjX = {};
        // if (blockCssY.items[itemSelector] == undefined) {
        //   newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector], 'background-color': newValuesObj };
        // } else {
        //   newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector], 'background-color': newValuesObj };
        // }
        //setAttributes({ blockCssY: { items: newValuesObjX } });
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      className: "my-3",
      label: "Display Label?",
      help: elements.options.showLabel ? 'Label is displaying' : 'Label is hidden',
      checked: elements.options.showLabel ? true : false,
      onChange: e => {
        var options = { ...elements.options,
          showLabel: elements.options.showLabel ? false : true
        };
        setAttributes({
          elements: { ...elements,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      className: "my-3",
      label: "Display Icon?",
      help: elements.options.showIcon ? 'Icon is displaying' : 'Icon is hidden',
      checked: elements.options.showIcon ? true : false,
      onChange: e => {
        var options = { ...elements.options,
          showIcon: elements.options.showIcon ? false : true
        };
        setAttributes({
          elements: { ...elements,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      className: "my-3",
      label: "Display Separator?",
      help: elements.options.showSeparator ? 'Separator is displaying' : 'Separator is hidden',
      checked: elements.options.showSeparator ? true : false,
      onChange: e => {
        var options = { ...elements.options,
          showSeparator: elements.options.showSeparator ? false : true
        };
        setAttributes({
          elements: { ...elements,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: elements.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(elements.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.styles,
          display: newValuesObj
        };
        setAttributes({
          elements: { ...elements,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[itemSelector] = { ...blockCssY.items[itemSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: elements.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        //sdsd
        var newValuesObj = {};

        if (Object.keys(elements.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.styles,
          color: newValuesObj
        };
        setAttributes({
          elements: { ...elements,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[itemSelector] = { ...blockCssY.items[itemSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: elements.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        //
        var newValuesObj = {};

        if (Object.keys(elements.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          elements: { ...elements,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[itemSelector] = { ...blockCssY.items[itemSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: elements.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: elements.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_15__["default"], {
      typo: elements.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: elements
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Icon position"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Label',
        value: 'beforeLabel'
      }, {
        label: 'After Label',
        value: 'afterLabel'
      } // { label: 'Before separator', value: 'beforeseparator' },
      // { label: 'After separator', value: 'afterseparator' },
      ],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Label",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: label.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(label.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = label.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...label.styles,
          color: newValuesObj
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[labelSelector] = { ...blockCssY.items[labelSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: label.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(label.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = label.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...label.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[labelSelector] = { ...blockCssY.items[labelSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: label.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(label.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = label.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...label.styles,
          display: newValuesObj
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[labelSelector] = { ...blockCssY.items[labelSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: label.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = label.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...label.styles,
          padding: responsive
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[labelSelector] = blockCssY.items[labelSelector] != undefined ? blockCssY.items[labelSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[labelSelector]['padding-top'] != undefined ? blockCssY.items[labelSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[labelSelector]['padding-right'] != undefined ? blockCssY.items[labelSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[labelSelector]['padding-bottom'] != undefined ? blockCssY.items[labelSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[labelSelector]['padding-left'] != undefined ? blockCssY.items[labelSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: label.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = label.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...label.styles,
          margin: responsive
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[labelSelector] = blockCssY.items[labelSelector] != undefined ? blockCssY.items[labelSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[labelSelector]['margin-top'] != undefined ? blockCssY.items[labelSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[labelSelector]['margin-right'] !== undefined ? blockCssY.items[labelSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[labelSelector]['margin-bottom'] !== undefined ? blockCssY.items[labelSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[labelSelector]['margin-left'] !== undefined ? blockCssY.items[labelSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Separator",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Separator Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: separator.options.text,
      onChange: newVal => {
        var options = { ...separator.options,
          text: newVal
        };
        setAttributes({
          separator: { ...separator,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: separator.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(separator.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = separator.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...separator.styles,
          color: newValuesObj
        };
        setAttributes({
          separator: { ...separator,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[separatorSelector] = { ...blockCssY.items[separatorSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: separator.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(separator.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = separator.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...separator.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          separator: { ...separator,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[separatorSelector] = { ...blockCssY.items[separatorSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: separator.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(separator.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = separator.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...separator.styles,
          display: newValuesObj
        };
        setAttributes({
          separator: { ...separator,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[separatorSelector] = { ...blockCssY.items[separatorSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: separator.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = separator.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...separator.styles,
          padding: responsive
        };
        setAttributes({
          separator: { ...separator,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[separatorSelector] = blockCssY.items[separatorSelector] != undefined ? blockCssY.items[separatorSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[separatorSelector]['padding-top'] != undefined ? blockCssY.items[separatorSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[separatorSelector] = { ...blockCssY.items[separatorSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[separatorSelector]['padding-right'] != undefined ? blockCssY.items[separatorSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[separatorSelector] = { ...blockCssY.items[separatorSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[separatorSelector]['padding-bottom'] != undefined ? blockCssY.items[separatorSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[separatorSelector] = { ...blockCssY.items[separatorSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[separatorSelector]['padding-left'] != undefined ? blockCssY.items[separatorSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[separatorSelector] = { ...blockCssY.items[separatorSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: separator.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = separator.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...separator.styles,
          margin: responsive
        };
        setAttributes({
          separator: { ...separator,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[separatorSelector] = blockCssY.items[separatorSelector] != undefined ? blockCssY.items[separatorSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[separatorSelector]['margin-top'] != undefined ? blockCssY.items[separatorSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[separatorSelector] = { ...blockCssY.items[separatorSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[separatorSelector]['margin-right'] !== undefined ? blockCssY.items[separatorSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[separatorSelector] = { ...blockCssY.items[separatorSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[separatorSelector]['margin-bottom'] !== undefined ? blockCssY.items[separatorSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[separatorSelector] = { ...blockCssY.items[separatorSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[separatorSelector]['margin-left'] !== undefined ? blockCssY.items[separatorSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[separatorSelector] = { ...blockCssY.items[separatorSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Wrapper Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, wrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Item Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, itemSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_17__["default"], {
      utm: {
        utm_source: 'BlockPostExcerpt',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: blockId
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("ol", null, elements.items.map((x, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("li", {
        className: 'item item-' + index
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        href: x.url
      }, elements.options.showIcon && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: `icon ${x.siteIcon.iconSrc}`
      }), elements.options.showLabel && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "label"
      }, x.customText.length > 0 ? x.customText : x.label)), elements.items.length > index && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "separator"
      }, separator.options.text));
    })))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/icon/index.js":
/*!**********************************!*\
  !*** ./src/blocks/icon/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");














const {
  RawHTML
} = wp.element;











var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/icon", {
  title: "Icon/Button/Link",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M10.4211 13.1053V21.5263H2V13.1053H10.4211ZM8.31579 15.2105H4.10526V19.4211H8.31579V15.2105ZM11.4737 1L17.2632 10.4737H5.68421L11.4737 1ZM11.4737 5.06316L9.45263 8.36842H13.4947L11.4737 5.06316ZM17.2632 12.5789C19.8947 12.5789 22 14.6842 22 17.3158C22 19.9474 19.8947 22.0526 17.2632 22.0526C14.6316 22.0526 12.5263 19.9474 12.5263 17.3158C12.5263 14.6842 14.6316 12.5789 17.2632 12.5789ZM17.2632 14.6842C16.5652 14.6842 15.8959 14.9615 15.4024 15.455C14.9088 15.9485 14.6316 16.6179 14.6316 17.3158C14.6316 18.0137 14.9088 18.6831 15.4024 19.1766C15.8959 19.6701 16.5652 19.9474 17.2632 19.9474C17.9611 19.9474 18.6304 19.6701 19.124 19.1766C19.6175 18.6831 19.8947 18.0137 19.8947 17.3158C19.8947 16.6179 19.6175 15.9485 19.124 15.455C18.6304 14.9615 17.9611 14.6842 17.2632 14.6842Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: '',
          attr: []
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {},
          borderRadius: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    text: {
      type: 'object',
      default: {
        options: {
          text: 'Custom Text',
          isLink: true,
          linkTo: 'postUrl',

          /*postUrl, homeUrl, authorUrl, authorLink, mailTo, custom, customField */
          linkToAuthorMeta: '',
          linkToCustomMeta: '',
          linkTarget: '_blank',
          customUrl: '',
          linkAttr: [],
          class: ''
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'fas fa-check-circle',
          position: 'beforeText',

          /*before, after, prefix, postfix */
          class: 'text-icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    prefix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    postfix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'postfix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    linkAttr: {
      "type": "array",
      "default": []
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var text = attributes.text;
    var icon = attributes.icon;
    var prefix = attributes.prefix;
    var postfix = attributes.postfix;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [isLoading, setisLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(window.PostGridPluginData);
    const [currentPostContent, setCurrentpostContent] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'content', postId);
    const [customFields, setCustomFields] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'link', postId);
    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(''); // Wrapper CSS Class Selectors

    const wrapperSelector = blockClass;
    const textSelector = blockClass + ' .text';
    const iconSelector = blockClass + ' .text-icon';
    const prefixSelector = blockClass + ' .prefix';
    const postfixSelector = blockClass + ' .postfix';

    function getMetaField(metaKey) {
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_7___default()({
        path: '/post-grid/v2/get_post_meta',
        method: 'POST',
        data: {
          postId: postId,
          meta_key: metaKey
        }
      }).then(res => {
        if (res['meta_value'] != undefined && res['meta_value'].length > 0) {
          customFields[metaKey] = res['meta_value'];
          setCustomFields({});
          setCustomFields(customFields);
        }
      });
    }

    var linkToArgs = {
      postUrl: {
        label: 'Post URL',
        value: 'postUrl'
      },
      homeUrl: {
        label: 'Home URL',
        value: 'homeUrl'
      },
      authorUrl: {
        label: 'Author URL',
        value: 'authorUrl'
      },
      authorLink: {
        label: 'Author Link',
        value: 'authorLink'
      },
      authorMail: {
        label: 'Author Mail',
        value: 'authorMail',
        isPro: true
      },
      authorMeta: {
        label: 'Author Meta',
        value: 'authorMeta',
        isPro: true
      },
      customField: {
        label: 'Custom Field',
        value: 'customField',
        isPro: true
      },
      customUrl: {
        label: 'Custom URL',
        value: 'customUrl',
        isPro: true
      }
    };
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    const [linkPickerExcerpt, setLinkPickerExcerpt] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [linkPickerText, setLinkPickerText] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function setFieldLinkTo(option, index) {
      var options = { ...text.options,
        linkTo: option.value
      };
      setAttributes({
        text: { ...text,
          options: options
        }
      });
    }

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function onChangeTextTypo(typoX) {
      setAttributes({
        text: { ...text,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontFamily[breakPointX] != undefined) {
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'font-family': typoX.fontFamily
        };
      } else {
        //typoX.fontFamily[breakPointX] = {};
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[textSelector]['font-size'] != undefined ? blockCssY.items[textSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[textSelector] = { ...blockCssY.items[textSelector], 'font-size': fontSizeX };

        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[textSelector]['line-height'] != undefined ? blockCssY.items[textSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[textSelector] = { ...blockCssY.items[textSelector], 'line-height': lineHeightX };

        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[textSelector]['letter-spacing'] != undefined ? blockCssY.items[textSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit; //blockCssY.items[textSelector] = { ...blockCssY.items[textSelector], 'letter-spacing': letterSpacingX };

        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'text-transform': typoX.textTransform
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function onChangeWrapTypo(typoX) {
      setAttributes({
        wrapper: { ...wrapper,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontFamily[breakPointX] != undefined) {
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'font-family': typoX.fontFamily
        };
      } else {
        //typoX.fontFamily[breakPointX] = {};
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[wrapperSelector]['font-size'] != undefined ? blockCssY.items[wrapperSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'font-size': fontSizeX };

        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[wrapperSelector]['line-height'] != undefined ? blockCssY.items[wrapperSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'line-height': lineHeightX };

        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[wrapperSelector]['letter-spacing'] != undefined ? blockCssY.items[wrapperSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit; //blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'letter-spacing': letterSpacingX };

        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-transform': typoX.textTransform
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControlWrapper(nextValues) {
      var responsive = wrapper.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...wrapper.styles,
        padding: responsive
      };
      setAttributes({
        wrapper: { ...wrapper,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[wrapperSelector] = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[wrapperSelector]['padding-top'] != undefined ? blockCssY.items[wrapperSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[wrapperSelector]['padding-right'] != undefined ? blockCssY.items[wrapperSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[wrapperSelector]['padding-bottom'] != undefined ? blockCssY.items[wrapperSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[wrapperSelector]['padding-left'] != undefined ? blockCssY.items[wrapperSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function paddingControlText(nextValues) {
      var responsive = text.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...text.styles,
        padding: responsive
      };
      setAttributes({
        text: { ...text,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[textSelector] = blockCssY.items[textSelector] != undefined ? blockCssY.items[textSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[textSelector]['padding-top'] != undefined ? blockCssY.items[textSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[textSelector]['padding-right'] != undefined ? blockCssY.items[textSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[textSelector]['padding-bottom'] != undefined ? blockCssY.items[textSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[textSelector]['padding-left'] != undefined ? blockCssY.items[textSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlWrapper(nextValues) {
      var responsive = wrapper.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...wrapper.styles,
        margin: responsive
      };
      setAttributes({
        wrapper: { ...wrapper,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[wrapperSelector] = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[wrapperSelector]['margin-top'] != undefined ? blockCssY.items[wrapperSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[wrapperSelector]['margin-right'] !== undefined ? blockCssY.items[wrapperSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[wrapperSelector]['margin-bottom'] !== undefined ? blockCssY.items[wrapperSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[wrapperSelector]['margin-left'] !== undefined ? blockCssY.items[wrapperSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlText(nextValues) {
      var responsive = text.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...text.styles,
        margin: responsive
      };
      setAttributes({
        text: { ...text,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[textSelector] = blockCssY.items[textSelector] != undefined ? blockCssY.items[textSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[textSelector]['margin-top'] != undefined ? blockCssY.items[textSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[textSelector]['margin-right'] !== undefined ? blockCssY.items[textSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[textSelector]['margin-bottom'] !== undefined ? blockCssY.items[textSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[textSelector]['margin-left'] !== undefined ? blockCssY.items[textSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItemsText, setlinkAttrItemsText] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    var [wrapAttrItems, setwrapAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var sdsd = {};
      text.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItemsText(sdsd);
    }, [text]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var sdsd = {};

      if (wrapper.options.attr != undefined) {
        wrapper.options.attr.map(x => {
          if (x.val) sdsd[x.id] = x.val;
        });
      }

      setwrapAttrItems(sdsd);
    }, [wrapper]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = text.options.customUrl != undefined && text.options.customUrl.length > 0 ? text.options.customUrl : currentPostUrl;
    const CustomTag = `${wrapper.options.tag}`;

    const MyDropdown = () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
          title: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].name : '',
          variant: "secondary",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, {
          className: "text-lg "
        }, _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon : '<span class="icon-responsive font-bold"></span>'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, breakPointList.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: ' text-lg font-bold border-b inline-block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            setPreviewDeviceType(x.value);
            var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
            asdsdsd.then(res => {
              setBreakPointX(res.breakpoint);
              generateBlockCssY();
            });
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          class: "icon-close"
        })), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, x.icon));
      }))
    }));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: nextAlign => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = nextAlign;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = nextAlign;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3",
      title: "General",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }, {
        label: 'BUTTON',
        value: 'button'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        if (wrapper.options.attr == undefined) {
          wrapper.options.attr = {};
        }

        var sdsd = wrapper.options.attr.concat({
          id: '',
          val: ''
        });
        var options = { ...wrapper.options,
          attr: sdsd
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    }, "Add")), wrapper.options.attr != undefined && wrapper.options.attr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: wrapper.options.attr[i].id,
        onChange: newVal => {
          wrapper.options.attr[i].id = newVal;
          var ssdsd = wrapper.options.attr.concat([]);
          var options = { ...wrapper.options,
            attr: ssdsd
          };
          setAttributes({
            wrapper: { ...wrapper,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          wrapper.options.attr[i].val = newVal;
          var ssdsd = wrapper.options.attr.concat([]);
          var options = { ...wrapper.options,
            attr: ssdsd
          };
          setAttributes({
            wrapper: { ...wrapper,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          wrapper.options.attr.splice(i, 1);
          var ssdsd = wrapper.options.attr.concat([]);
          var options = { ...wrapper.options,
            attr: ssdsd
          };
          setAttributes({
            wrapper: { ...wrapper,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: wrapper.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          color: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: wrapper.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlWrapper(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlWrapper(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Border Radius"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.borderRadius[breakPointX],
      onChange: nextValues => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.borderRadius).length == 0) {
          newValuesObj[breakPointX] = nextValues.top + ' ' + nextValues.right + ' ' + nextValues.bottom + ' ' + nextValues.left;
        } else {
          newValuesObj = wrapper.styles.borderRadius;
          newValuesObj[breakPointX] = nextValues.top + ' ' + nextValues.right + ' ' + nextValues.bottom + ' ' + nextValues.left;
          ;
        }

        var styles = { ...wrapper.styles,
          borderRadius: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'border-radius': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: wrapper.styles,
      breakPointX: breakPointX,
      onChange: onChangeWrapTypo,
      setAttributes: setAttributes,
      obj: wrapper
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Text",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: text.options.text,
      onChange: newVal => {
        var options = { ...text.options,
          text: newVal
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ToggleControl, {
      label: "Linked to URL?",
      help: text.options.isLink ? 'Linked to URL?' : 'Not Linked.',
      checked: text.options.isLink ? true : false,
      onChange: e => {
        var options = { ...text.options,
          isLink: text.options.isLink ? false : true
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    }), text.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_19__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: linkToArgs,
      buttonTitle: "Choose",
      onChange: setFieldLinkTo,
      values: []
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-500 p-2 my-3 text-white"
    }, linkToArgs[text.options.linkTo] != undefined ? linkToArgs[text.options.linkTo].label : ''), text.options.linkTo == 'authorMeta' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Author Meta Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: text.options.linkToAuthorMeta,
      onChange: newVal => {
        var options = { ...text.options,
          linkToAuthorMeta: newVal
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    })), text.options.linkTo == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Meta Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: text.options.linkToAuthorMeta,
      onChange: newVal => {
        var options = { ...text.options,
          linkToAuthorMeta: newVal
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: text.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...text.options,
          linkTarget: newVal
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    }))), text.options.linkTo == 'customUrl' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Url"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerText ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"],
      onClick: ev => {
        setLinkPickerText(prev => !prev);
      }
    }), text.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"],
      onClick: ev => {
        var options = { ...text.options,
          customUrl: ''
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    }), linkPickerText && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.__experimentalLinkControl, {
      settings: [],
      value: text.options.customUrl,
      onChange: newVal => {
        var options = { ...text.options,
          customUrl: newVal.url
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        }); //setLinkPickerText(false)
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", text.options.customUrl.length != 0 ? text.options.customUrl : 'No link', " ")))), text.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = text.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...text.options,
          linkAttr: sdsd
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    }, "Add")), text.options.linkAttr != undefined && text.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: text.options.linkAttr[i].id,
        onChange: newVal => {
          text.options.linkAttr[i].id = newVal;
          var ssdsd = text.options.linkAttr.concat([]);
          var options = { ...text.options,
            linkAttr: ssdsd
          };
          setAttributes({
            text: { ...text,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          text.options.linkAttr[i].val = newVal;
          var ssdsd = text.options.linkAttr.concat([]);
          var options = { ...text.options,
            linkAttr: ssdsd
          };
          setAttributes({
            text: { ...text,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          text.options.linkAttr.splice(i, 1);
          var ssdsd = text.options.linkAttr.concat([]);
          var options = { ...text.options,
            linkAttr: ssdsd
          };
          setAttributes({
            text: { ...text,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: text.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        // var responsive = text.styles.color;
        // responsive[breakPointX] = newVal;
        // var styles = { ...text.styles, color: responsive };
        // setAttributes({ text: { ...text, styles: styles } });
        var newValuesObj = {};

        if (Object.keys(text.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = text.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...text.styles,
          color: newValuesObj
        };
        setAttributes({
          text: { ...text,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: text.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(text.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = text.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...text.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          text: { ...text,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: text.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(text.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = text.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...text.styles,
          display: newValuesObj
        };
        setAttributes({
          text: { ...text,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: text.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlText(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: text.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlText(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: text.styles,
      breakPointX: breakPointX,
      onChange: onChangeTextTypo,
      setAttributes: setAttributes,
      obj: text
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_13__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Text',
        value: 'beforeText'
      }, {
        label: 'After Text',
        value: 'afterText'
      }, {
        label: 'Before Prefix',
        value: 'beforePrefix'
      }, {
        label: 'After Prefix',
        value: 'afterPrefix'
      }, {
        label: 'Before Postfix',
        value: 'beforePostfix'
      }, {
        label: 'After Postfix',
        value: 'afterPostfix'
      }, {
        label: 'Before Link',
        value: 'beforeLink'
      }, {
        label: 'After Link',
        value: 'afterLink'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Prefix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: prefix.options.text,
      onChange: newVal => {
        var options = { ...prefix.options,
          text: newVal
        };
        setAttributes({
          prefix: { ...prefix,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Postfix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: postfix.options.text,
      onChange: newVal => {
        var options = { ...postfix.options,
          text: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, wrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, textSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Prefix Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, prefixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Postfix Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postfixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_15__["default"], {
      utm: {
        utm_source: 'BlockReadMore',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: [blockId]
    }, wrapAttrItems), icon.options.position == 'beforePrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'afterPrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), text.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforeLink' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "text",
      onClick: handleLinkClick
    }, linkAttrItemsText, {
      target: text.options.linkTarget,
      href: postUrl
    }), icon.options.position == 'beforeText' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.RichText, {
      tagName: 'span',
      value: text.options.text,
      allowedFormats: ['core/bold', 'core/italic', 'core/link'],
      onChange: content => {
        var options = { ...text.options,
          text: content
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      },
      placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__.__)('Start Writing...')
    }), icon.options.position == 'afterText' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), icon.options.position == 'afterLink' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), !text.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforeText' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.RichText, {
      className: "text",
      tagName: 'span',
      value: text.options.text,
      allowedFormats: ['core/bold', 'core/italic', 'core/link'],
      onChange: content => {
        var options = { ...text.options,
          text: content
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      },
      placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__.__)('Start Writing...')
    }), icon.options.position == 'afterText' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text), icon.options.position == 'afterPostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), wrapper.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), text.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforeLink' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "text",
      onClick: handleLinkClick
    }, linkAttrItemsText, {
      target: text.options.linkTarget,
      href: postUrl
    }), icon.options.position == 'beforeText' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.RichText, {
      tagName: 'span',
      value: text.options.text,
      allowedFormats: ['core/bold', 'core/italic', 'core/link'],
      onChange: content => {
        var options = { ...text.options,
          text: content
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      },
      placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__.__)('Start Writing...')
    }), icon.options.position == 'afterText' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), icon.options.position == 'afterLink' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), !text.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforeText' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.RichText, {
      className: "text",
      tagName: 'span',
      value: text.options.text,
      allowedFormats: ['core/bold', 'core/italic', 'core/link'],
      onChange: content => {
        var options = { ...text.options,
          text: content
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      },
      placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__.__)('Start Writing...')
    }), icon.options.position == 'afterText' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text), icon.options.position == 'afterPostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/image/index.js":
/*!***********************************!*\
  !*** ./src/blocks/image/index.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/icon/index.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/close.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_toggle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/toggle */ "./src/components/toggle/index.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _placeholder_jpg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./placeholder.jpg */ "./src/blocks/image/placeholder.jpg");














const {
  RawHTML
} = wp.element;














var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/image", {
  title: "Image",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M20.125 5H3.875C2.83945 5 2 5.83945 2 6.875V18.125C2 19.1605 2.83945 20 3.875 20H20.125C21.1605 20 22 19.1605 22 18.125V6.875C22 5.83945 21.1605 5 20.125 5ZM19.8906 18.125H4.10938C4.04721 18.125 3.9876 18.1003 3.94365 18.0564C3.89969 18.0124 3.875 17.9528 3.875 17.8906V7.10938C3.875 7.04721 3.89969 6.9876 3.94365 6.94365C3.9876 6.89969 4.04721 6.875 4.10938 6.875H19.8906C19.9528 6.875 20.0124 6.89969 20.0564 6.94365C20.1003 6.9876 20.125 7.04721 20.125 7.10938V17.8906C20.125 17.9528 20.1003 18.0124 20.0564 18.0564C20.0124 18.1003 19.9528 18.125 19.8906 18.125V18.125ZM7 8.4375C6.13707 8.4375 5.4375 9.13707 5.4375 10C5.4375 10.8629 6.13707 11.5625 7 11.5625C7.86293 11.5625 8.5625 10.8629 8.5625 10C8.5625 9.13707 7.86293 8.4375 7 8.4375ZM5.75 16.25H18.25V13.125L14.8314 9.70645C14.6484 9.5234 14.3516 9.5234 14.1685 9.70645L9.5 14.375L7.95645 12.8314C7.7734 12.6484 7.4766 12.6484 7.29352 12.8314L5.75 14.375V16.25Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: '',
          useAsBackground: 'no'
        },
        styles: {
          textAlign: {},
          width: {},
          height: {},
          overflow: {},
          color: {},
          bgColor: {},
          bgImage: {},
          bgPosition: {},
          bgSize: {},
          display: {},
          borderRadius: {},
          padding: {},
          margin: {}
        }
      }
    },
    image: {
      type: 'object',
      default: {
        options: {
          imgSrcType: 'media',

          /*media, customField, customUrl, imgId */
          imgSrcMetaKey: '',
          imgSrcMetaKeyType: 'ID',
          //ID, URL,
          imgSrcImgId: '',
          srcUrl: '',
          srcId: '',
          tag: 'div',
          linkTo: '',
          // postUrl, customField, authorUrl, authorLink, homeUrl, custom
          linkToMetaKey: '',
          linkTocustomUrl: '',
          altTextSrc: 'imgAltText',
          // imgAltText, imgTitle, imgCaption, imgDescription imgName, imgSlug, postTitle, excerpt, postSlug, customField, custom
          altTextCustom: '',
          altTextMetaKey: '',
          linkTarget: '_blank',
          linkAttr: [],
          class: '',
          size: {
            "Desktop": "full",
            "Tablet": "full",
            "Mobile": "full"
          }
        },
        styles: {
          textAlign: {},
          display: {},
          width: {
            "Desktop": {
              "val": "100",
              "unit": "%"
            }
          },
          height: {
            "Desktop": {
              "val": "",
              "unit": "auto"
            }
          },
          filter: {},
          objectFit: {},
          padding: {},
          margin: {}
        },
        hoverStyles: {
          filter: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    let image = attributes.image;
    var wrapper = attributes.wrapper;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var demoImg = 'src/blocks/post-featured-image/placeholder.jpg';
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [loading, setLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [linkPickerPosttitle, setLinkPickerPosttitle] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [linkPickerSrcUrl, setlinkPickerSrcUrl] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(window.PostGridPluginData);
    const [postImage, setPostImage] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    const [imageObj, setImageObj] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); //{src:'', altText:'', sizes:{}}

    const [imageSizes, setImageSizes] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
    const [filterArgs, setfilterArgs] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([{
      label: 'Blur',
      value: 'blur',
      val: '',
      unit: 'px'
    }, {
      label: 'Brightness',
      value: 'brightness',
      val: '10',
      unit: '%'
    }, {
      label: 'Contrast',
      value: 'contrast',
      val: '10',
      unit: '%'
    }, {
      label: 'Grayscale',
      value: 'grayscale',
      val: '10',
      unit: '%'
    }, {
      label: 'Hue-rotate',
      value: 'hue-rotate',
      val: '10',
      unit: 'deg'
    }, {
      label: 'Invert',
      value: 'invert',
      val: '10',
      unit: '%'
    }, {
      label: 'Opacity',
      value: 'opacity',
      val: '10',
      unit: '%'
    }, {
      label: 'Saturate',
      value: 'saturate',
      val: '10',
      unit: '%'
    }, {
      label: 'Sepia',
      value: 'sepia',
      val: '10',
      unit: '%'
    }]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setPostGridData(window.PostGridPluginData);
    }, [window.PostGridPluginData]);
    const ALLOWED_MEDIA_TYPES = ['image'];
    const [currentPostImageId, setCurrentPostImageId] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(image.options.srcId);
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      if (currentPostImageId.length != 0) {
        setLoading(true);
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_10___default()({
          path: '/wp/v2/media/' + currentPostImageId,
          method: 'POST',
          data: {
            id: currentPostImageId
          }
        }).then(res => {
          setPostImage(res);
          var options = { ...image.options,
            srcUrl: res.source_url,
            srcId: res.id
          };
          setAttributes({
            image: { ...image,
              options: options
            }
          });
          setLoading(false);
          var imgSizes = [];
          Object.keys(res.media_details.sizes).map(x => {
            var height = res.media_details.sizes[x].height;
            var width = res.media_details.sizes[x].width; //var crop = res[x].crop

            imgSizes.push({
              label: x + "(" + width + "*" + height + ")",
              value: x,
              height: height,
              width: width
            });
          });
          setImageSizes(imgSizes);
        }); // apiFetch({
        //   path: '/post-grid/v2/get_image_sizes',
        //   method: 'POST',
        //   data: {},
        // }).then((res) => {
        //   var imgSizes = [];
        //   Object.keys(res).map(x => {
        //     var height = res[x].height
        //     var width = res[x].width
        //     var crop = res[x].crop
        //     imgSizes.push({ label: x + "(" + width + "*" + height + ")", value: x, height: height, width: width, crop: crop });
        //   })
        //   setImageSizes(imgSizes)
        // });
      }
    }, [currentPostImageId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      if (image.options.imgSrcMetaKey.length != 0) {
        setLoading(true);
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_10___default()({
          path: '/post-grid/v2/get_post_meta',
          method: 'POST',
          data: {
            postId: postId,
            meta_key: image.options.imgSrcMetaKey,
            type: 'string',
            template: ''
          }
        }).then(res => {
          var metaKeyType = image.options.imgSrcMetaKeyType != undefined ? image.options.imgSrcMetaKeyType : 'ID';

          if (metaKeyType == 'ID') {
            setCurrentPostImageId(res.meta_value);
          } else {//setPostImage(res)
          }

          setLoading(false);
        });
      }
    }, [image.options.imgSrcMetaKey, image.options.imgSrcMetaKeyType, image.options.imgSrcType]);

    function addfilterArgs(option, index) {
      var filterObj = {};

      if (image.styles.filter[breakPointX] != undefined) {
        image.styles.filter[breakPointX].push(option);
      } else {
        image.styles.filter[breakPointX] = [];
        image.styles.filter[breakPointX].push(option);
      }

      var styles = { ...image.styles,
        filter: image.styles.filter
      };
      setAttributes({
        image: { ...image,
          styles: styles
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var filterStr = {};
      filterStr[breakPointX] = '';
      image.styles.filter[breakPointX] != undefined && image.styles.filter[breakPointX].map(x => {
        filterStr[breakPointX] += x.value + '(' + x.val + x.unit + ') ';
      });
      blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
        'filter': filterStr
      };
      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }, [image]);

    function setFeaturedImageSize(option, index) {
      var newValuesObj = {};

      if (Object.keys(image.options.size).length == 0) {
        newValuesObj[breakPointX] = option.value;
      } else {
        newValuesObj = image.options.size;
        newValuesObj[breakPointX] = option.value;
      }

      var options = { ...image.options,
        size: newValuesObj
      };
      setAttributes({
        image: { ...image,
          options: options
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ image: image });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
      blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
        'width': {
          "Desktop": "100%"
        }
      };
      blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
        'height': {
          "Desktop": "auto"
        }
      };
      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }, [clientId]); // Wrapper CSS Class Selectors

    const wrapperSelector = blockClass;
    var linkSelector = '';

    if (wrapper.options.tag.length != 0) {
      if (image.options.linkTo.length > 0) {
        linkSelector = blockClass + ' a';
      } else {
        linkSelector = blockClass;
      }
    } else {
      linkSelector = blockClass;
    }

    var imgSelector = blockClass + ' img';
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    var BefroeTitle = function (_ref) {
      let {
        title,
        args
      } = _ref;
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "cursor-pointer hover:bg-red-500 hover:text-white px-1 py-1",
        onClick: ev => {
          image.styles.filter[breakPointX].splice(args.index, 1);
          var styles = image.styles;
          setAttributes({
            image: { ...image,
              styles: styles
            }
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__["default"]
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "mx-2"
      }, title));
    };

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function paddingControl(nextValues) {
      var responsive = image.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...image.styles,
        padding: responsive
      };
      setAttributes({
        image: { ...image,
          styles: styles
        }
      });
      blockCssY.items[linkSelector] = blockCssY.items[linkSelector] != undefined ? blockCssY.items[linkSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[linkSelector]['padding-top'] != undefined ? blockCssY.items[linkSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[linkSelector]['padding-right'] != undefined ? blockCssY.items[linkSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[linkSelector]['padding-bottom'] != undefined ? blockCssY.items[linkSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[linkSelector]['padding-left'] != undefined ? blockCssY.items[linkSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControl(nextValues) {
      var responsive = image.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...image.styles,
        margin: responsive
      };
      setAttributes({
        image: { ...image,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[linkSelector] = blockCssY.items[linkSelector] != undefined ? blockCssY.items[linkSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[linkSelector]['margin-top'] != undefined ? blockCssY.items[linkSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[linkSelector]['margin-right'] !== undefined ? blockCssY.items[linkSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[linkSelector]['margin-bottom'] !== undefined ? blockCssY.items[linkSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[linkSelector]['margin-left'] !== undefined ? blockCssY.items[linkSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
    }, [image]);

    var linkAttrObj = () => {
      var sdsd = {};
      image.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = image.options.linkTocustomUrl != undefined && image.options.linkTocustomUrl.length > 0 ? image.options.linkTocustomUrl : currentPostUrl;
    const CustomTag = `${wrapper.options.tag}`;
    const CustomTagPostTitle = `${image.options.tag}`;

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: {
            options: wrapper.options,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: {
            styles: wrapper.styles,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Image as Background"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.useAsBackground,
      options: [{
        label: 'No',
        value: 'no'
      }, {
        label: 'Yes',
        value: 'yes'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          useAsBackground: newVal
        };
        var styles = { ...wrapper.styles,
          bgImage: {}
        };

        if (newVal == 'no') {
          setAttributes({
            wrapper: { ...wrapper,
              options: options,
              styles: styles
            }
          });
          var itemsX = { ...blockCssY.items
          };
          itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
            'background-image': {}
          };
          setAttributes({
            blockCssY: {
              items: itemsX
            }
          });
        }

        if (newVal == 'yes') {
          var newValuesObj = {};

          if (Object.keys(wrapper.styles.bgImage).length == 0) {
            newValuesObj[breakPointX] = 'url("' + postImage.guid.rendered + '")';
          } else {
            newValuesObj = wrapper.styles.bgImage;
            newValuesObj[breakPointX] = 'url("' + postImage.guid.rendered + '")';
          }

          var styles = { ...wrapper.styles,
            bgImage: newValuesObj
          };
          setAttributes({
            wrapper: { ...wrapper,
              styles: styles,
              options: options
            }
          });
          var itemsX = { ...blockCssY.items
          };
          itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
            'background-image': newValuesObj
          };
          setAttributes({
            blockCssY: {
              items: itemsX
            }
          });
        }
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Width"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: wrapper.styles.width[breakPointX] != undefined ? wrapper.styles.width[breakPointX].val : 10,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'em'
          };
        } else {
          newValuesObj = wrapper.styles.width;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'em';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          width: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 10;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'em';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};
        heightX[breakPointX] = heightVal + heightUnit;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.width[breakPointX] != undefined ? wrapper.styles.width[breakPointX].unit : 'em',
      options: [{
        label: 'fr',
        value: 'fr'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: 10,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.width;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 10;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          width: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 10;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'em';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};
        heightX[breakPointX] = heightVal + heightUnit;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Height"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: wrapper.styles.height[breakPointX] != undefined ? wrapper.styles.height[breakPointX].val : 10,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'em'
          };
        } else {
          newValuesObj = wrapper.styles.height;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'em';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          height: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 10;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'em';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};
        heightX[breakPointX] = heightVal + heightUnit;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.height[breakPointX] != undefined ? wrapper.styles.height[breakPointX].unit : 'em',
      options: [{
        label: 'fr',
        value: 'fr'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: 10,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.height;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 10;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          height: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 10;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'em';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};
        heightX[breakPointX] = heightVal + heightUnit;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Overflow "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.overflow[breakPointX] != undefined ? wrapper.styles.overflow[breakPointX] : 'hidden',
      options: [{
        label: 'scroll',
        value: 'scroll'
      }, {
        label: 'hidden',
        value: 'hidden'
      }, {
        label: 'auto',
        value: 'auto'
      }, {
        label: 'clip',
        value: 'clip'
      }, {
        label: 'visible',
        value: 'visible'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.overflow).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.overflow;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          overflow: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'overflow': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), wrapper.options.useAsBackground == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Position "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.bgPosition[breakPointX] != undefined ? wrapper.styles.bgPosition[breakPointX] : 'hidden',
      options: [{
        label: 'left top',
        value: 'left top'
      }, {
        label: 'left center',
        value: 'left center'
      }, {
        label: 'left bottom',
        value: 'left bottom'
      }, {
        label: 'right top',
        value: 'right top'
      }, {
        label: 'right center',
        value: 'right center'
      }, {
        label: 'right bottom',
        value: 'right bottom'
      }, {
        label: 'center top',
        value: 'center top'
      }, {
        label: 'center center',
        value: 'center center'
      }, {
        label: 'center bottom',
        value: 'center bottom'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bgPosition).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.bgPosition;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          bgPosition: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'background-position': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Size "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.bgSize[breakPointX] != undefined ? wrapper.styles.bgSize[breakPointX] : 'hidden',
      options: [{
        label: 'auto',
        value: 'auto'
      }, {
        label: 'cover',
        value: 'cover'
      }, {
        label: 'contain',
        value: 'contain'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bgSize).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.bgSize;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          bgSize: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'background-size': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_19__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Border Radius"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.borderRadius[breakPointX],
      onChange: nextValues => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.borderRadius).length == 0) {
          newValuesObj[breakPointX] = nextValues.top + ' ' + nextValues.right + ' ' + nextValues.bottom + ' ' + nextValues.left;
        } else {
          newValuesObj = wrapper.styles.borderRadius;
          newValuesObj[breakPointX] = nextValues.top + ' ' + nextValues.right + ' ' + nextValues.bottom + ' ' + nextValues.left;
          ;
        }

        var styles = { ...wrapper.styles,
          borderRadius: nextValues
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'border-radius': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: wrapper.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_18__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Image",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Image Sources"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: image.options.imgSrcType,
      options: [{
        label: 'Media',
        value: 'media'
      }, {
        label: 'Custom Field',
        value: 'customField'
      }, {
        label: 'Image Source URL',
        value: 'customUrl'
      } // { label: 'Image ID', value: 'imgId' },
      ],
      onChange: newVal => {
        var options = { ...image.options,
          imgSrcType: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    })), image.options.srcUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: image.options.srcUrl,
      alt: ""
    }), image.options.srcUrl.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: _placeholder_jpg__WEBPACK_IMPORTED_MODULE_20__,
      alt: ""
    }), image.options.imgSrcType == 'media' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "mt-5",
      for: ""
    }, "Choose Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.MediaUpload, {
      class: "bg-blue-500",
      onSelect: media => {
        // media.id
        setCurrentPostImageId(media.id);
        var options = { ...image.options,
          srcUrl: media.url,
          srcId: media.id
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      },
      onClose: () => {},
      allowedTypes: ALLOWED_MEDIA_TYPES,
      value: image.options.srcId,
      render: _ref2 => {
        let {
          open
        } = _ref2;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
          className: "my-3 bg-blue-500 text-white border border-solid border-gray-300 text-center w-full",
          onClick: open
        }, "Open Media Library");
      }
    }))), image.options.imgSrcType == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: image.options.imgSrcMetaKey,
      onChange: newVal => {
        var options = { ...image.options,
          imgSrcMetaKey: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Metakey Type"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: image.options.imgSrcMetaKeyType,
      options: [{
        label: 'ID',
        value: 'ID'
      }, {
        label: 'URL',
        value: 'URL'
      }],
      onChange: newVal => {
        var options = { ...image.options,
          imgSrcMetaKeyType: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    }))), image.options.imgSrcType == 'customUrl' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Image URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerSrcUrl ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_23__["default"],
      onClick: ev => {
        setlinkPickerSrcUrl(prev => !prev);
      }
    }), image.options.srcUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_24__["default"],
      onClick: ev => {
        var options = { ...image.options,
          srcUrl: ''
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
        setlinkPickerSrcUrl(false);
      }
    }), linkPickerSrcUrl && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.__experimentalLinkControl, {
      settings: [],
      value: image.options.srcUrl,
      onChange: newVal => {
        var options = { ...image.options,
          srcUrl: newVal.url
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
        setImageObj({ ...imageObj,
          src: newVal.url
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Image Source URL:"), " ", image.options.srcUrl.length != 0 ? image.options.srcUrl : 'No link', " "))))), image.options.imgSrcType == 'imgId' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Image ID"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: image.options.imgSrcImgId,
      onChange: newVal => {
        var options = { ...image.options,
          imgSrcImgId: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    })), (image.options.imgSrcType == 'media' || image.options.imgSrcType == 'customField') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Thumbnail Size"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: imageSizes,
      buttonTitle: "Choose",
      onChange: setFeaturedImageSize,
      values: image.options.size[breakPointX]
    })), image.options.size[breakPointX] != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-400 text-white px-3 py-2 my-3"
    }, " ", image.options.size[breakPointX])), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: image.options.linkTo.length == 0 ? 'Choose' : image.options.linkTo,
      options: [{
        label: 'No Link',
        value: ''
      }, {
        label: 'Post URL',
        value: 'postUrl'
      }, {
        label: 'Custom Field',
        value: 'customField'
      }, {
        label: 'Author URL',
        value: 'authorUrl'
      }, {
        label: 'Author Link',
        value: 'authorLink'
      }, {
        label: 'Home URL',
        value: 'homeUrl'
      }, {
        label: 'Custom',
        value: 'custom'
      }],
      onChange: (option, index) => {
        var options = { ...image.options,
          linkTo: option.value
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      },
      values: ""
    })), image.options.linkTo == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: image.options.linkToMetaKey,
      onChange: newVal => {
        var options = { ...image.options,
          linkToMetaKey: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    })), image.options.linkTocustomUrl.length > 0 && postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_17__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postFeaturedImage&utm_campaign=pluginPostGrid&utm_medium=postFeaturedImage-linkTocustomUrl"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Custom URL"), " feature only avilable in pro version")), image.options.linkTo == 'custom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerPosttitle ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_23__["default"],
      onClick: ev => {
        setLinkPickerPosttitle(prev => !prev);
      }
    }), image.options.linkTocustomUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_24__["default"],
      onClick: ev => {
        var options = { ...image.options,
          linkTocustomUrl: ''
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
        setLinkPickerPosttitle(false);
      }
    }), linkPickerPosttitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.__experimentalLinkControl, {
      settings: [],
      value: image.options.linkTocustomUrl,
      onChange: newVal => {
        var options = { ...image.options,
          linkTocustomUrl: newVal.url
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", image.options.linkTocustomUrl.length != 0 ? image.options.linkTocustomUrl : 'No link', " ")))), image.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Custom Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: image.options.tag.length == 0 ? 'Choose' : image.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: (option, index) => {
        var options = { ...image.options,
          tag: option.value
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      },
      values: ""
    })), image.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: image.options.linkTarget,
      options: [{
        label: 'Choose...',
        value: ''
      }, {
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...image.options,
          linkTarget: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = image.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...image.options,
          linkAttr: sdsd
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), image.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: image.options.linkAttr[i].id,
        onChange: newVal => {
          image.options.linkAttr[i].id = newVal;
          var ssdsd = image.options.linkAttr.concat([]);
          var options = { ...image.options,
            linkAttr: ssdsd
          };
          setAttributes({
            image: { ...image,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          image.options.linkAttr[i].val = newVal;
          var ssdsd = image.options.linkAttr.concat([]);
          var options = { ...image.options,
            linkAttr: ssdsd
          };
          setAttributes({
            image: { ...image,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          image.options.linkAttr.splice(i, 1);
          var ssdsd = image.options.linkAttr.concat([]);
          var options = { ...image.options,
            linkAttr: ssdsd
          };
          setAttributes({
            image: { ...image,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Alt Text Source"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: image.options.altTextSrc.length == 0 ? 'Choose' : image.options.altTextSrc,
      options: [{
        label: 'No Alt Text',
        value: ''
      }, {
        label: 'Image Alt Text',
        value: 'imgAltText'
      }, {
        label: 'Image Title',
        value: 'imgTitle'
      }, {
        label: 'Image Caption',
        value: 'imgCaption'
      }, {
        label: 'Image Description',
        value: 'imgDescription'
      }, {
        label: 'Image Slug',
        value: 'imgSlug'
      }, {
        label: 'Post Title',
        value: 'postTitle'
      }, {
        label: 'Post Excerpt',
        value: 'excerpt'
      }, {
        label: 'Post Slug',
        value: 'postSlug'
      }, {
        label: 'Post Custom Field',
        value: 'customField'
      }, {
        label: 'Custom',
        value: 'custom'
      }],
      onChange: (option, index) => {
        var options = { ...image.options,
          altTextSrc: option.value
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      },
      values: ""
    })), image.options.altTextSrc == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Custom Field"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: 'Choose',
      options: [{
        label: 'Custom',
        value: ''
      }, {
        label: 'Yoast meta',
        value: '_yoast_wpseo_metadesc'
      }, {
        label: 'Rank Math meta',
        value: 'rank_math_description'
      }, {
        label: 'AIO SEO meta',
        value: '_aioseo_og_description'
      }, {
        label: 'SEOPress meta',
        value: '_seopress_titles_desc'
      }, {
        label: 'WP Meta SEO meta',
        value: '_metaseo_metadesc'
      }, {
        label: 'The SEO Framework meta',
        value: '_genesis_description'
      }, {
        label: 'SEO SIMPLE PACK meta',
        value: 'ssp_meta_description'
      }],
      onChange: (option, index) => {
        var options = { ...image.options,
          altTextMetaKey: option.value
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      },
      values: ""
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: image.options.altTextMetaKey,
      onChange: newVal => {
        var options = { ...image.options,
          altTextMetaKey: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    }))), image.options.altTextSrc == 'custom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Alt Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: image.options.altTextCustom,
      onChange: newVal => {
        var options = { ...image.options,
          altTextCustom: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    })), image.styles.filter[breakPointX] != undefined && postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_17__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postFeaturedImage&utm_campaign=pluginPostGrid&utm_medium=postFeaturedImage-filters"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Filters feature only avilable in pro version")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Filters "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: filterArgs,
      buttonTitle: "Add",
      onChange: addfilterArgs,
      values: ""
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-5"
    }, image.styles.filter[breakPointX] != undefined && image.styles.filter[breakPointX].map((arg, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
        title: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(BefroeTitle, {
          title: arg.label,
          args: {
            index: index,
            arg: arg
          }
        }),
        initialOpen: false
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.RangeControl, {
        value: arg.val,
        onChange: newVal => {
          arg.val = newVal;
          image.styles.filter[breakPointX][index] = arg;
          var styles = image.styles;
          setAttributes({
            image: { ...image,
              styles: styles
            }
          });
        },
        min: 0,
        max: 100
      }))));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Image Scale"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "my-3",
      value: image.styles.objectFit[breakPointX],
      options: [{
        label: 'Fill',
        value: 'fill'
      }, {
        label: 'Contain',
        value: 'contain'
      }, {
        label: 'Cover',
        value: 'cover'
      }, {
        label: 'None',
        value: 'none'
      }, {
        label: 'Scale-down',
        value: 'scale-down'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(image.styles.objectFit).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = image.styles.objectFit;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...image.styles,
          objectFit: newValuesObj
        };
        setAttributes({
          image: { ...image,
            styles: styles
          }
        });
        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'object-fit': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Width"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      disabled: image.styles.width[breakPointX] != undefined && image.styles.width[breakPointX].unit == 'auto' ? true : false,
      value: image.styles.width[breakPointX] != undefined ? image.styles.width[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(image.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = image.styles.width;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...image.styles,
          width: newValuesObj
        };
        setAttributes({
          image: { ...image,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[imgSelector] != undefined ? blockCssY.items[imgSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: image.styles.width[breakPointX] != undefined ? image.styles.width[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(image.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = image.styles.width;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...image.styles,
          width: newValuesObj
        };
        setAttributes({
          image: { ...image,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[imgSelector] != undefined ? blockCssY.items[imgSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Height"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      disabled: image.styles.height[breakPointX] != undefined && image.styles.height[breakPointX].unit == 'auto' ? true : false,
      value: image.styles.height[breakPointX] != undefined ? image.styles.height[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(image.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = image.styles.height;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...image.styles,
          height: newValuesObj
        };
        setAttributes({
          image: { ...image,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[imgSelector] != undefined ? blockCssY.items[imgSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: image.styles.height[breakPointX] != undefined ? image.styles.height[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(image.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = image.styles.height;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...image.styles,
          height: newValuesObj
        };
        setAttributes({
          image: { ...image,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[imgSelector] != undefined ? blockCssY.items[imgSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: image.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: image.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, wrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title link"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, linkSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_13__["default"], {
      utm: {
        utm_source: 'BlockImage',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, loading && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Spinner, null), wrapper.options.useAsBackground == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId]
    }), !loading && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, (image.options.imgSrcType == 'media' || image.options.imgSrcType == 'customField') && postImage == null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Image Sources"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: image.options.imgSrcType,
      options: [{
        label: 'Media',
        value: 'media'
      }, {
        label: 'Custom Field',
        value: 'customField'
      }, {
        label: 'Image Source URL',
        value: 'customUrl'
      } // { label: 'Image ID', value: 'imgId' },
      ],
      onChange: newVal => {
        var options = { ...image.options,
          imgSrcType: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    })), image.options.imgSrcType == 'media' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "mt-5",
      for: ""
    }, "Choose Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.MediaUpload, {
      class: "bg-blue-500",
      onSelect: media => {
        // media.id
        setCurrentPostImageId(media.id);
        var options = { ...image.options,
          srcUrl: media.url,
          srcId: media.id
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      },
      onClose: () => {},
      allowedTypes: ALLOWED_MEDIA_TYPES,
      value: image.options.srcId,
      render: _ref3 => {
        let {
          open
        } = _ref3;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
          className: "my-3 bg-blue-500 text-white border border-solid border-gray-300 text-center w-full",
          onClick: open
        }, "Open Media Library");
      }
    }))), image.options.imgSrcType == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: image.options.imgSrcMetaKey,
      onChange: newVal => {
        var options = { ...image.options,
          imgSrcMetaKey: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Metakey Type"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: image.options.imgSrcMetaKeyType,
      options: [{
        label: 'ID',
        value: 'ID'
      }, {
        label: 'URL',
        value: 'URL'
      }],
      onChange: newVal => {
        var options = { ...image.options,
          imgSrcMetaKeyType: newVal
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
      }
    })))), image.options.imgSrcType == 'customUrl' && image.options.srcUrl.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, image.options.imgSrcType == 'customUrl' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Image URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerSrcUrl ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_23__["default"],
      onClick: ev => {
        setlinkPickerSrcUrl(prev => !prev);
      }
    }), image.options.srcUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_24__["default"],
      onClick: ev => {
        var options = { ...image.options,
          srcUrl: ''
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
        setlinkPickerSrcUrl(false);
      }
    }), linkPickerSrcUrl && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.__experimentalLinkControl, {
      settings: [],
      value: image.options.srcUrl,
      onChange: newVal => {
        var options = { ...image.options,
          srcUrl: newVal.url
        };
        setAttributes({
          image: { ...image,
            options: options
          }
        });
        setImageObj({ ...imageObj,
          src: newVal.url
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Image Source URL:"), " ", image.options.srcUrl.length != 0 ? image.options.srcUrl : 'No link', " "))))))), wrapper.options.useAsBackground == 'no' && wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId]
    }, image.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      onClick: handleLinkClick
    }, linkAttrItems, {
      href: postUrl,
      target: image.options.linkTarget
    }), postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] != undefined ? postImage.media_details.sizes[image.options.size[breakPointX]].source_url : '',
      alt: postImage.alt_text
    }), postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] == undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.guid.rendered != undefined ? postImage.guid.rendered : '',
      alt: postImage.alt_text
    }))), image.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (image.options.imgSrcType == 'media' || image.options.imgSrcType == 'customField') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] != undefined ? postImage.media_details.sizes[image.options.size[breakPointX]].source_url : '',
      alt: postImage.alt_text
    }), postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] == undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.guid.rendered != undefined ? postImage.guid.rendered : '',
      alt: postImage.alt_text
    }))), image.options.imgSrcType == 'customUrl' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: image.options.srcUrl,
      alt: image.options.altTextCustom
    }))), wrapper.options.useAsBackground == 'no' && wrapper.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, image.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      onClick: handleLinkClick,
      className: [blockId]
    }, linkAttrItems, {
      href: postUrl,
      target: image.options.linkTarget
    }), postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] != undefined ? postImage.media_details.sizes[image.options.size[breakPointX]].source_url : '',
      alt: postImage.alt_text
    }), postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] == undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.guid.rendered != undefined ? postImage.guid.rendered : '',
      alt: postImage.alt_text
    })))), wrapper.options.useAsBackground == 'no' && wrapper.options.tag.length == 0 && image.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, image.options.tag.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTagPostTitle, {
      className: blockId
    }, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] != undefined ? postImage.media_details.sizes[image.options.size[breakPointX]].source_url : '',
      alt: postImage.alt_text
    }), postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] == undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.guid.rendered != undefined ? postImage.guid.rendered : '',
      alt: postImage.alt_text
    }))), image.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: blockId
    }, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] != undefined ? postImage.media_details.sizes[image.options.size[breakPointX]].source_url : '',
      alt: postImage.alt_text
    }), postImage != null && postImage.media_details.sizes[image.options.size[breakPointX]] == undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.guid.rendered != undefined ? postImage.guid.rendered : '',
      alt: postImage.alt_text
    })))))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/layer/index.js":
/*!***********************************!*\
  !*** ./src/blocks/layer/index.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");













const {
  RawHTML
} = wp.element;








var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__.registerBlockType)("post-grid/layer", {
  title: "Layer",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      "fill-rule": "evenodd",
      "clip-rule": "evenodd",
      d: "M12 19.798L20.4452 14.1678C20.9047 13.8615 21.5256 13.9856 21.8319 14.4452C22.1164 14.8719 22.0297 15.4377 21.6479 15.7616L21.5546 15.8319L12.5547 21.8318C12.2561 22.0309 11.8772 22.053 11.5608 21.8982L11.4453 21.8318L2.4454 15.8319C1.98588 15.5256 1.8617 14.9047 2.16805 14.4452C2.45252 14.0185 3.00818 13.8809 3.45402 14.1087L3.55479 14.1678L12 19.798L20.4452 14.1678L12 19.798ZM12.5547 2.16795L21.5546 8.16788C22.1483 8.5637 22.1483 9.43615 21.5546 9.83197L12.5547 15.8319C12.2188 16.0558 11.7812 16.0558 11.4453 15.8319L2.4454 9.83197C1.85167 9.43615 1.85167 8.5637 2.4454 8.16788L11.4453 2.16795C11.7812 1.94402 12.2188 1.94402 12.5547 2.16795ZM12 4.20183L4.80285 8.99993L12 13.798L19.1971 8.99993L12 4.20183Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          content: '',
          tag: 'div',
          class: 'pg-layers'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {},
          position: {},
          zIndex: {},
          width: {},
          height: {},
          top: {},
          right: {},
          bottom: {},
          left: {}
        }
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    const [isLoading, setisLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(window.PostGridPluginData); // Wrapper CSS Class Selectors

    var wrapperSelector = blockClass;
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function paddingControl(nextValues) {
      var responsive = wrapper.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...wrapper.styles,
        padding: responsive
      };
      setAttributes({
        wrapper: { ...wrapper,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[wrapperSelector] = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[wrapperSelector]['padding-top'] != undefined ? blockCssY.items[wrapperSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-top': paddingTop
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[wrapperSelector]['padding-right'] != undefined ? blockCssY.items[wrapperSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-right': paddingRight
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[wrapperSelector]['padding-bottom'] != undefined ? blockCssY.items[wrapperSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[wrapperSelector]['padding-left'] != undefined ? blockCssY.items[wrapperSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-left': paddingLeft
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControl(nextValues) {
      var responsive = wrapper.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...wrapper.styles,
        margin: responsive
      };
      setAttributes({
        wrapper: { ...wrapper,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[wrapperSelector] = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[wrapperSelector]['margin-top'] != undefined ? blockCssY.items[wrapperSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-top': marginTop
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[wrapperSelector]['margin-right'] !== undefined ? blockCssY.items[wrapperSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-right': marginRight
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[wrapperSelector]['margin-bottom'] !== undefined ? blockCssY.items[wrapperSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-bottom': marginBottom
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[wrapperSelector]['margin-left'] !== undefined ? blockCssY.items[wrapperSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-left': marginLeft
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-3",
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: wrapper.styles.position[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'static',
        value: 'static'
      }, {
        label: 'relative',
        value: 'relative'
      }, {
        label: 'fixed',
        value: 'fixed'
      }, {
        label: 'absolute',
        value: 'absolute'
      }, {
        label: 'sticky',
        value: 'sticky'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.position).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.position;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          position: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'position': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "z-Index"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      value: wrapper.styles.zIndex[breakPointX] != undefined ? wrapper.styles.zIndex[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.zIndex).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: ''
          };
        } else {
          newValuesObj = wrapper.styles.zIndex;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : '';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          zIndex: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : '';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'z-index': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.zIndex[breakPointX] != undefined ? wrapper.styles.zIndex[breakPointX].unit : '',
      options: [{
        label: 'Choose',
        value: ''
      }, {
        label: 'Auto',
        value: 'auto'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.zIndex).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.zIndex;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          zIndex: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : '';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'z-index': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Width"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      value: wrapper.styles.width[breakPointX] != undefined ? wrapper.styles.width[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = wrapper.styles.width;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          width: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.width[breakPointX] != undefined ? wrapper.styles.width[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.width;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          width: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Height"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      value: wrapper.styles.height[breakPointX] != undefined ? wrapper.styles.height[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = wrapper.styles.height;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          height: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.height[breakPointX] != undefined ? wrapper.styles.height[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.height;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          height: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Top"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      disabled: wrapper.styles.top[breakPointX] != undefined && wrapper.styles.top[breakPointX].unit == 'auto' ? true : false,
      value: wrapper.styles.top[breakPointX] != undefined ? wrapper.styles.top[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.top).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = wrapper.styles.top;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          top: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'top': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.top[breakPointX] != undefined ? wrapper.styles.top[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.top).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.top;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          top: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'top': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Right"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      disabled: wrapper.styles.right[breakPointX] != undefined && wrapper.styles.right[breakPointX].unit == 'auto' ? true : false,
      value: wrapper.styles.right[breakPointX] != undefined ? wrapper.styles.right[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.right).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = wrapper.styles.right;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          right: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'right': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.right[breakPointX] != undefined ? wrapper.styles.right[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.right).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.right;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          right: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'right': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Bottom"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      disabled: wrapper.styles.bottom[breakPointX] != undefined && wrapper.styles.bottom[breakPointX].unit == 'auto' ? true : false,
      value: wrapper.styles.bottom[breakPointX] != undefined ? wrapper.styles.bottom[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bottom).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = wrapper.styles.bottom;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          bottom: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'bottom': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.bottom[breakPointX] != undefined ? wrapper.styles.bottom[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bottom).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.bottom;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          bottom: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'bottom': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Left"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      disabled: wrapper.styles.left[breakPointX] != undefined && wrapper.styles.left[breakPointX].unit == 'auto' ? true : false,
      value: wrapper.styles.left[breakPointX] != undefined ? wrapper.styles.left[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.left).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = wrapper.styles.left;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          left: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'left': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.left[breakPointX] != undefined ? wrapper.styles.left[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.left).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.left;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          left: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'left': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: wrapper.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          color: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: wrapper.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: wrapper.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Text "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, wrapperSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_13__["default"], {
      utm: {
        utm_source: 'BlockText',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: [blockId]
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InnerBlocks, null)))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    var attributes = props.attributes;
    var wrapper = attributes.wrapper;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    const redBackground = {
      backgroundColor: '#d99',
      position: 'absolute'
    };
    const blockProps = _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.useBlockProps.save({
      style: redBackground
    });
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InnerBlocks.Content, null); //return null;
  }
});

/***/ }),

/***/ "./src/blocks/layers/index.js":
/*!************************************!*\
  !*** ./src/blocks/layers/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");













const {
  RawHTML
} = wp.element;









var myStore = wp.data.select('postgrid-shop');

function SaveComponent() {
  return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InnerBlocks.Content, null);
}

function EditComponent() {
  return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    style: {
      backgroundColor: "#333",
      padding: "35px"
    }
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InnerBlocks, null));
}

(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__.registerBlockType)("post-grid/layers", {
  title: "Layers",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M3 2V11.5H12.5V2H3ZM14.875 6.75V13.875H7.75V16.25H17.25V6.75H14.875ZM19.625 11.5V18.625H12.5V21H22V11.5H19.625Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          content: '',
          tag: 'div',
          class: 'pg-layers'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {},
          position: {},
          overflow: {},
          width: {},
          height: {}
        }
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    const [isLoading, setisLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(window.PostGridPluginData); // Wrapper CSS Class Selectors

    var wrapperSelector = blockClass;
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function onChangeTextTypo(typoX) {
      setAttributes({
        wrapper: { ...wrapper,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontFamily[breakPointX] != undefined) {
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'font-family': typoX.fontFamily
        };
      } else {
        //typoX.fontFamily[breakPointX] = {};
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[wrapperSelector]['font-size'] != undefined ? blockCssY.items[wrapperSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'font-size': fontSizeX };

        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[wrapperSelector]['line-height'] != undefined ? blockCssY.items[wrapperSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'line-height': lineHeightX };

        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[wrapperSelector]['letter-spacing'] != undefined ? blockCssY.items[wrapperSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit; //blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'letter-spacing': letterSpacingX };

        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-transform': typoX.textTransform
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControl(nextValues) {
      var responsive = wrapper.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...wrapper.styles,
        padding: responsive
      };
      setAttributes({
        wrapper: { ...wrapper,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[wrapperSelector] = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[wrapperSelector]['padding-top'] != undefined ? blockCssY.items[wrapperSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-top': paddingTop
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[wrapperSelector]['padding-right'] != undefined ? blockCssY.items[wrapperSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-right': paddingRight
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[wrapperSelector]['padding-bottom'] != undefined ? blockCssY.items[wrapperSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[wrapperSelector]['padding-left'] != undefined ? blockCssY.items[wrapperSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'padding-left': paddingLeft
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControl(nextValues) {
      var responsive = wrapper.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...wrapper.styles,
        margin: responsive
      };
      setAttributes({
        wrapper: { ...wrapper,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[wrapperSelector] = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[wrapperSelector]['margin-top'] != undefined ? blockCssY.items[wrapperSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-top': marginTop
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[wrapperSelector]['margin-right'] !== undefined ? blockCssY.items[wrapperSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-right': marginRight
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[wrapperSelector]['margin-bottom'] !== undefined ? blockCssY.items[wrapperSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-bottom': marginBottom
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[wrapperSelector]['margin-left'] !== undefined ? blockCssY.items[wrapperSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'margin-left': marginLeft
        }; //itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-3",
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: wrapper.styles.position[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'static',
        value: 'static'
      }, {
        label: 'relative',
        value: 'relative'
      }, {
        label: 'fixed',
        value: 'fixed'
      }, {
        label: 'absolute',
        value: 'absolute'
      }, {
        label: 'sticky',
        value: 'sticky'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.position).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.position;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          position: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'position': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Overflow"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: wrapper.styles.overflow[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'visible',
        value: 'visible'
      }, {
        label: 'hidden',
        value: 'hidden'
      }, {
        label: 'scroll',
        value: 'scroll'
      }, {
        label: 'auto',
        value: 'auto'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.overflow).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.overflow;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          overflow: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'overflow': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Width"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      value: wrapper.styles.width[breakPointX] != undefined ? wrapper.styles.width[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = wrapper.styles.width;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          width: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.width[breakPointX] != undefined ? wrapper.styles.width[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.width;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          width: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Height"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      value: wrapper.styles.height[breakPointX] != undefined ? wrapper.styles.height[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = wrapper.styles.height;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          height: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 10;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.height[breakPointX] != undefined ? wrapper.styles.height[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.height;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          height: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: wrapper.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          color: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: wrapper.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: wrapper.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }, {
        label: 'flex',
        value: 'flex'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_11__["default"], {
      typo: wrapper.styles,
      breakPointX: breakPointX,
      onChange: onChangeTextTypo,
      setAttributes: setAttributes,
      obj: wrapper
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Text "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, wrapperSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_13__["default"], {
      utm: {
        utm_source: 'BlockText',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: [blockId]
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InnerBlocks, null)))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    var attributes = props.attributes;
    var wrapper = attributes.wrapper;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    const redBackground = {
      backgroundColor: '#ddd',
      position: 'relative'
    };
    const blockProps = _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.useBlockProps.save({
      style: redBackground
    });
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InnerBlocks.Content, null); //return null;
  }
});

/***/ }),

/***/ "./src/blocks/list/index.js":
/*!**********************************!*\
  !*** ./src/blocks/list/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");













const {
  RawHTML
} = wp.element;










var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__.registerBlockType)("post-grid/list", {
  title: "list",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M4.71554 16.5689H7.43108C8.12739 16.5689 8.70128 17.0931 8.77972 17.7683L8.78885 17.9267V20.6422C8.78885 21.3386 8.26469 21.9124 7.58942 21.9909L7.43108 22H4.71554C4.01923 22 3.44534 21.4759 3.36691 20.8006L3.35777 20.6422V17.9267C3.35777 17.2304 3.88193 16.6565 4.5572 16.5781L4.71554 16.5689H7.43108H4.71554ZM21.0088 17.9267C21.7587 17.9267 22.3666 18.5346 22.3666 19.2845C22.3666 20.0344 21.7587 20.6422 21.0088 20.6422H12.8622C12.1123 20.6422 11.5044 20.0344 11.5044 19.2845C11.5044 18.5346 12.1123 17.9267 12.8622 17.9267H21.0088ZM7.43108 17.9267H4.71554V20.6422H7.43108V17.9267ZM7.43108 9.78007C8.18095 9.78007 8.78885 10.388 8.78885 11.1378V13.8534C8.78885 14.6032 8.18095 15.2111 7.43108 15.2111H4.71554C3.96567 15.2111 3.35777 14.6032 3.35777 13.8534V11.1378C3.35777 10.388 3.96567 9.78007 4.71554 9.78007H7.43108ZM21.0088 11.1378C21.7587 11.1378 22.3666 11.7457 22.3666 12.4956C22.3666 13.1919 21.8424 13.7658 21.1671 13.8442L21.0088 13.8534H12.8622C12.1123 13.8534 11.5044 13.2455 11.5044 12.4956C11.5044 11.7993 12.0286 11.2254 12.7038 11.147L12.8622 11.1378H21.0088ZM7.43108 11.1378H4.71554V13.8534H7.43108V11.1378ZM8.48289 3.29826C8.84442 3.65979 8.87728 4.22553 8.58149 4.62418L8.48289 4.73839L5.09616 8.12512C4.90519 8.31611 4.64617 8.42338 4.3761 8.42338C4.16004 8.42338 3.95105 8.35473 3.77832 8.22948L3.65603 8.12512L2.29826 6.76735C1.90058 6.36967 1.90058 5.72491 2.29826 5.32722C2.65979 4.96569 3.22552 4.93283 3.62418 5.22862L3.73839 5.32722L4.3761 5.96492L7.04276 3.29826C7.44044 2.90058 8.0852 2.90058 8.48289 3.29826V3.29826ZM21.0088 4.34899C21.7587 4.34899 22.3666 4.95689 22.3666 5.70676C22.3666 6.40306 21.8424 6.97696 21.1671 7.05539L21.0088 7.06453H12.8622C12.1123 7.06453 11.5044 6.45663 11.5044 5.70676C11.5044 5.01045 12.0286 4.43655 12.7038 4.35812L12.8622 4.34899H21.0088Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'ul',
          class: 'pg-accordion'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    items: {
      type: 'array',
      default: [{
        text: '',
        icon: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'fas fa-chevron-right'
        },
        styles: {}
      }]
    },
    item: {
      type: 'object',
      default: {
        options: {
          text: '',
          tag: 'li',
          counter: false,
          reversed: false,
          start: 1,
          type: '1',
          class: 'item'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {},
          listStyle: {},
          listStylePosition: {},
          listStyleType: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'fas fa-chevron-right',
          class: 'icon',
          positon: 'before'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var items = attributes.items;
    var wrapper = attributes.wrapper;
    var item = attributes.item;
    var icon = attributes.icon;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    const [isLoading, setisLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(window.PostGridPluginData);
    const [isOpen, setisOpen] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false); // Wrapper CSS Class Selectors

    var wrapperSelector = blockClass;
    var itemSelector = blockClass + ' .item';
    const iconSelector = blockClass + ' .icon';
    const CustomTag = `${wrapper.options.tag}`;
    const CustomTagItem = `${item.options.tag}`;
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var itemX = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: itemX.name,
        icon: itemX.icon,
        value: itemX.id
      });
    }

    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControlHeader(nextValues) {
      var responsive = item.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...item.styles,
        padding: responsive
      };
      setAttributes({
        item: { ...item,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[itemSelector]['padding-top'] != undefined ? blockCssY.items[itemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-top': paddingTop
        }; //itemsX[itemSelector] = { ...blockCssY.items[itemSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[itemSelector]['padding-right'] != undefined ? blockCssY.items[itemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-right': paddingRight
        }; //itemsX[itemSelector] = { ...blockCssY.items[itemSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[itemSelector]['padding-bottom'] != undefined ? blockCssY.items[itemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[itemSelector] = { ...blockCssY.items[itemSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[itemSelector]['padding-left'] != undefined ? blockCssY.items[itemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-left': paddingLeft
        }; //itemsX[itemSelector] = { ...blockCssY.items[itemSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControlHeader(nextValues) {
      var responsive = item.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...item.styles,
        margin: responsive
      };
      setAttributes({
        item: { ...item,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[itemSelector]['margin-top'] != undefined ? blockCssY.items[itemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-top': marginTop
        }; //itemsX[itemSelector] = { ...blockCssY.items[itemSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[itemSelector]['margin-right'] !== undefined ? blockCssY.items[itemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-right': marginRight
        }; //itemsX[itemSelector] = { ...blockCssY.items[itemSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[itemSelector]['margin-bottom'] !== undefined ? blockCssY.items[itemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-bottom': marginBottom
        }; //itemsX[itemSelector] = { ...blockCssY.items[itemSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[itemSelector]['margin-left'] !== undefined ? blockCssY.items[itemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-left': marginLeft
        }; //itemsX[itemSelector] = { ...blockCssY.items[itemSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2",
      title: "Items",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'Ul',
        value: 'ul'
      }, {
        label: 'Ol',
        value: 'ol'
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'Span',
        value: 'SPAN'
      }, {
        label: 'Div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_17__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[authorWrapperSelector] = { ...blockCssY.items[authorWrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Items",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: item.options.tag,
      options: [{
        label: 'Choose',
        value: ''
      }, {
        label: 'li',
        value: 'li'
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...item.options,
          tag: newVal
        };
        setAttributes({
          item: { ...item,
            options: options
          }
        });
      }
    })), wrapper.options.tag == 'ol' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ToggleControl, {
      label: "Reversed?",
      help: item.options.reversed ? 'Counter reversed?' : 'No reversed',
      checked: item.options.reversed ? true : false,
      onChange: e => {
        var options = { ...item.options,
          reversed: item.options.reversed ? false : true
        };
        setAttributes({
          item: { ...item,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Counter start with"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      value: item.options.start,
      onChange: newVal => {
        var options = { ...item.options,
          start: newVal
        };
        setAttributes({
          item: { ...item,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Ordered list type?"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: item.options.type,
      options: [{
        label: 'Choose',
        value: ''
      }, {
        label: 'Decimal numbers (1, 2, 3, 4)',
        value: '1'
      }, {
        label: 'Alphabetically ordered list',
        value: 'a'
      }, {
        label: 'Alphabetically ordered list, uppercase',
        value: 'A'
      }, {
        label: 'Roman numbers, lowercase (i, ii, iii, iv)',
        value: 'i'
      }, {
        label: 'Roman numbers, uppercase (I, II, III, IV)',
        value: 'I'
      }],
      onChange: newVal => {
        var options = { ...item.options,
          type: newVal
        };
        setAttributes({
          item: { ...item,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "List style type?"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: item.styles.listStyleType[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'disc',
        value: 'disc'
      }, {
        label: 'armenian',
        value: 'armenian'
      }, {
        label: 'circle',
        value: 'circle'
      }, {
        label: 'cjk-ideographic',
        value: 'cjk-ideographic'
      }, {
        label: 'decimal',
        value: 'decimal'
      }, {
        label: 'decimal-leading-zero',
        value: 'decimal-leading-zero'
      }, {
        label: 'georgian',
        value: 'georgian'
      }, {
        label: 'hebrew',
        value: 'hebrew'
      }, {
        label: 'hiragana',
        value: 'hiragana'
      }, {
        label: 'hiragana-iroha',
        value: 'hiragana-iroha'
      }, {
        label: 'katakana',
        value: 'katakana'
      }, {
        label: 'katakana-iroha',
        value: 'katakana-iroha'
      }, {
        label: 'lower-alpha',
        value: 'lower-alpha'
      }, {
        label: 'lower-greek',
        value: 'lower-greek'
      }, {
        label: 'lower-latin',
        value: 'lower-latin'
      }, {
        label: 'lower-roman',
        value: 'lower-roman'
      }, {
        label: 'square',
        value: 'square'
      }, {
        label: 'upper-alpha',
        value: 'upper-alpha'
      }, {
        label: 'upper-greek',
        value: 'upper-greek'
      }, {
        label: 'upper-latin',
        value: 'upper-latin'
      }, {
        label: 'upper-roman',
        value: 'upper-roman'
      }, {
        label: 'none',
        value: 'none'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(item.styles.listStyleType).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = item.styles.listStyleType;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...item.styles,
          listStyleType: newValuesObj
        };
        setAttributes({
          item: { ...item,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'list-style-type': newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'list-style-type': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "List style position?"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: item.styles.listStylePosition[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inside',
        value: 'inside'
      }, {
        label: 'outside',
        value: 'outside'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(item.styles.listStylePosition).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = item.styles.listStylePosition;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...item.styles,
          listStylePosition: newValuesObj
        };
        setAttributes({
          item: { ...item,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'list-style-position': newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'list-style-position': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: item.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(item.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = item.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...item.styles,
          color: newValuesObj
        };
        setAttributes({
          item: { ...item,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[itemSelector] = { ...blockCssY.items[itemSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: item.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(item.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = item.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...item.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          item: { ...item,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[itemSelector] = { ...blockCssY.items[itemSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: item.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlHeader(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: item.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlHeader(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_16__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose...',
        value: ''
      }, {
        label: 'Left',
        value: 'left'
      }, {
        label: 'Before Text',
        value: 'before'
      }, {
        label: 'After Text',
        value: 'after'
      }, {
        label: 'Right',
        value: 'right'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_11__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Text "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, wrapperSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_13__["default"], {
      utm: {
        utm_source: 'BlockText',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CustomTag, {
      className: [blockId],
      reversed: item.options.reversed ? 'reversed' : '',
      start: item.options.start
    }, items.map((itemX, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CustomTagItem, {
        className: ` cursor-pointer ${item.options.class}`,
        onClick: ev => {
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
        }
      }, icon.options.position == 'left' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), icon.options.position == 'before' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.RichText, {
        tagName: "span",
        value: itemX.text,
        allowedFormats: ['core/bold', 'core/italic', 'core/link'],
        onChange: content => {
          items[i].text = content;
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
        },
        placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Start Writing...')
      }), icon.options.position == 'after' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), icon.options.position == 'right' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon float-right",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "text-lg cursor-pointer px-2 text-red-500  py-1 float-right icon-close",
        onClick: ev => {
          items.splice(i, 1);
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
          ev.preventDefault();
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: [blockId]
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "bg-blue-500 p-2 px-5 text-white my-4 text-center cursor-pointer",
      onClick: ev => {
        var itemx = items.concat({
          text: '',
          icon: {
            library: 'fontAwesome',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: 'fas fa-chevron-right'
          },
          styles: {}
        });
        setAttributes({
          items: itemx
        });
      }
    }, "Add")))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-author-fields/index.js":
/*!************************************************!*\
  !*** ./src/blocks/post-author-fields/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_styles__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/styles */ "./src/components/styles/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");













const {
  RawHTML
} = wp.element;











var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_3__.registerBlockType)("post-grid/post-author-fields", {
  title: "Author Fields",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M25 249.5C25 246.739 27.2386 244.5 30 244.5H470C472.761 244.5 475 246.739 475 249.5V299.5C475 302.261 472.761 304.5 470 304.5H30C27.2386 304.5 25 302.261 25 299.5V249.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M241 147C241 144.239 243.239 142 246 142H470C472.761 142 475 144.239 475 147V197C475 199.761 472.761 202 470 202H246C243.239 202 241 199.761 241 197V147Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M100 132.5C119.569 132.5 135.429 116.72 135.429 97.25C135.429 77.7799 119.569 62 100 62C80.4312 62 64.5714 77.7799 64.5714 97.25C64.5714 116.72 80.4312 132.5 100 132.5ZM124.8 141.312H120.178C114.033 144.121 107.196 145.719 100 145.719C92.8036 145.719 85.9946 144.121 79.8223 141.312H75.2C54.6625 141.312 38 157.891 38 178.325V189.781C38 197.079 43.9509 203 51.2857 203H148.714C156.049 203 162 197.079 162 189.781V178.325C162 157.891 145.337 141.312 124.8 141.312Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    field: {
      type: 'object',
      default: {
        options: {
          isLink: false,
          linkTo: 'postUrl',

          /*postUrl, homeUrl, authorUrl, authorLink, mailTo, custom */
          linkToMeta: '',
          linkTarget: '',
          avatarSize: '',
          dateFormat: '',
          customUrl: '',
          prefix: '',
          postfix: '',
          linkAttr: []
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        after: {},
        before: {}
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: '',
          position: 'beforePostDate',

          /*before, after, prefix, postfix */
          class: 'icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    metaKey: {
      "type": "string",
      "default": ''
    },
    frontText: {
      type: 'object',
      default: {
        options: {
          text: 'Author: ',
          class: 'inline-block'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var frontText = attributes.frontText;
    var blockCssY = attributes.blockCssY;
    var customCss = attributes.customCss;
    var metaKey = attributes.metaKey;
    var field = attributes.field;
    var icon = attributes.icon;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    var userFields = [{
      label: "ID",
      key: 'id'
    }, {
      label: "login",
      key: 'login'
    }, {
      label: "Nick name",
      key: 'nickname'
    }, {
      label: "Email",
      key: 'email'
    }, {
      label: "URL",
      key: 'url'
    }, {
      label: "Registered",
      key: 'registered'
    }, {
      label: "Display name",
      key: 'display_name'
    }, {
      label: "First name",
      key: 'first_name'
    }, {
      label: "Last name",
      key: 'last_name'
    }, {
      label: "Description",
      key: 'description'
    }, // { label: "Avatar URL", key: 'avatar_url' },
    {
      label: "Avatar",
      key: 'avatar'
    } // { label: "Profile Link", key: 'link' },
    ];
    var linkToArgs = {
      postUrl: {
        label: 'Post URL',
        value: 'postUrl'
      },
      homeUrl: {
        label: 'Home URL',
        value: 'homeUrl'
      },
      authorUrl: {
        label: 'Author URL',
        value: 'authorUrl'
      },
      authorLink: {
        label: 'Author Link',
        value: 'authorLink'
      },
      authorMail: {
        label: 'Author Mail',
        value: 'authorMail'
      },
      authorMeta: {
        label: 'Author Meta',
        value: 'authorMeta'
      },
      customUrl: {
        label: 'Custom URL',
        value: 'customUrl'
      }
    }; // Wrapper CSS Class Selectors

    const wrapSelector = blockClass;
    const fieldSelector = blockClass + ' .fieldVal';
    const frontTextSelector = blockClass + ' .frontText';
    const iconSelector = blockClass + ' .icon';
    var breakPointList = [];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    const [postAuthorData, setpostAuthorData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)([]); // Using the hook.

    const [loading, setLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false); // Using the hook.

    const [postAuthorX, setpostAuthorX] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_2__.useEntityProp)('postType', postType, 'author', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      if (metaKey.length == 0) return;
      setpostAuthorData([]);
      setLoading(true);
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default()({
        path: '/post-grid/v2/get_user_data',
        method: 'POST',
        data: {
          id: postAuthorX,
          fields: []
        }
      }).then(res => {
        setpostAuthorData(res);
        setLoading(false);
      });
    }, [metaKey]);
    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);

    function onChangeStyleField(sudoScource, newVal, attr) {
      var sudoScourceX = { ...field[sudoScource]
      };
      sudoScourceX[attr][breakPointX] = newVal;
      setAttributes({
        field: { ...field
        }
      });
    }

    function onRemoveStyleField(sudoScource, key) {
      var sudoScourceX = { ...field[sudoScource]
      };
      delete sudoScourceX[key];
      field[sudoScource] = sudoScourceX; //sudoScourceX[attr][breakPointX] = newVal;

      setAttributes({
        field: { ...field
        }
      });
    }

    function onAddStyleField(sudoScource, key) {
      var sudoScourceX = { ...field[sudoScource]
      };
      sudoScourceX[key] = {};
      field[sudoScource] = sudoScourceX; //sudoScourceX[attr][breakPointX] = newVal;

      setAttributes({
        field: { ...field
        }
      });
    }

    function setFieldLinkTo(option, index) {
      var options = { ...field.options,
        linkTo: option.value
      };
      setAttributes({
        field: { ...field,
          options: options
        }
      });
    }

    function setUserField(option, index) {
      setAttributes({
        metaKey: option.key
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControlItems(nextValues) {
      var responsive = field.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...field.styles,
        padding: responsive
      };
      setAttributes({
        field: { ...field,
          styles: styles
        }
      });
      blockCssY.items[fieldSelector] = blockCssY.items[fieldSelector] != undefined ? blockCssY.items[fieldSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[fieldSelector]['padding-top'] != undefined ? blockCssY.items[fieldSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[fieldSelector]['padding-right'] != undefined ? blockCssY.items[fieldSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[fieldSelector]['padding-bottom'] != undefined ? blockCssY.items[fieldSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[fieldSelector]['padding-left'] != undefined ? blockCssY.items[fieldSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlItems(nextValues) {
      var responsive = field.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...field.styles,
        margin: responsive
      };
      setAttributes({
        field: { ...field,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[fieldSelector] = blockCssY.items[fieldSelector] != undefined ? blockCssY.items[fieldSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[fieldSelector]['margin-top'] != undefined ? blockCssY.items[fieldSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[fieldSelector]['margin-right'] !== undefined ? blockCssY.items[fieldSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[fieldSelector]['margin-bottom'] !== undefined ? blockCssY.items[fieldSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[fieldSelector]['margin-left'] !== undefined ? blockCssY.items[fieldSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypo(typoX) {
      setAttributes({
        field: { ...field,
          styles: typoX
        }
      });

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[fieldSelector] != undefined ? blockCssY.items[fieldSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[fieldSelector]['line-height'] != undefined ? blockCssY.items[fieldSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[fieldSelector]['letter-spacing'] != undefined ? blockCssY.items[fieldSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypoFrontText(typoX) {
      setAttributes({
        frontText: { ...frontText,
          styles: typoX
        }
      });

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[frontTextSelector]['font-size'] != undefined ? blockCssY.items[frontTextSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[frontTextSelector]['line-height'] != undefined ? blockCssY.items[frontTextSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[frontTextSelector]['letter-spacing'] != undefined ? blockCssY.items[frontTextSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      linkAttrObj();
      generateBlockCssY();
    }, [field]);

    var linkAttrObj = () => {
      var sdsd = {};
      field.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    const post = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_5__.useSelect)(select => select('core').getEntityRecord('postType', context['postType'], context['postId']));
    const termstaxonomy = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_5__.useSelect)(select => select('core').getEntityRecords('taxonomy', 'category', [4, 5]));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var styles = { ...postfix.styles,
          textAlign: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            styles: styles
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Select User Field"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_14__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: userFields,
      buttonTitle: "Choose",
      onChange: setUserField,
      values: metaKey
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Custom Field"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: metaKey,
      onChange: newVal => {
        setAttributes({
          metaKey: newVal
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Field Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: wrapper.options.class,
      onChange: newVal => {
        var options = { ...wrapper.options,
          class: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_15__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapSelector] = { ...blockCssY.items[wrapSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Field Settings",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ToggleControl, {
      label: "Is linked?",
      help: field.options != undefined && field.options.isLink ? 'User field is linked' : 'User field is not linked',
      checked: field.options != undefined && field.options.isLink ? true : false,
      onChange: e => {
        var options = { ...field.options,
          isLink: field.options.isLink ? false : true
        };
        setAttributes({
          field: { ...field,
            options: options
          }
        });
      }
    }), field.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_14__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: linkToArgs,
      buttonTitle: "Choose",
      onChange: setFieldLinkTo,
      values: metaKey
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "bg-gray-500 p-2 my-3 text-white"
    }, linkToArgs[field.options.linkTo] != undefined ? linkToArgs[field.options.linkTo].label : ''), field.options.linkTo == 'authorMeta' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Link Meta Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: field.options.linkToMeta,
      onChange: newVal => {
        var options = { ...field.options,
          linkToMeta: newVal
        };
        setAttributes({
          field: { ...field,
            options: options
          }
        });
      }
    })), field.options.linkTo == 'customUrl' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Custom Url"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: field.options.customUrl,
      onChange: newVal => {
        var options = { ...field.options,
          customUrl: newVal
        };
        setAttributes({
          field: { ...field,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: field.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...field.options,
          linkTarget: newVal
        };
        setAttributes({
          field: { ...field,
            options: options
          }
        });
      }
    }))), field.options.linkTo == 'custom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Custom URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: field.options.customUrl,
      onChange: newVal => {
        var options = { ...field.options,
          customUrl: newVal
        };
        setAttributes({
          field: { ...field,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: field.options.prefix,
      onChange: newVal => {
        var options = { ...field.options,
          prefix: newVal
        };
        setAttributes({
          field: { ...field,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: field.options.postfix,
      onChange: newVal => {
        var options = { ...field.options,
          postfix: newVal
        };
        setAttributes({
          field: { ...field,
            options: options
          }
        });
      }
    })), field.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Link Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = field.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...field.options,
          linkAttr: sdsd
        };
        setAttributes({
          field: { ...field,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), field.options.linkAttr.length > 0 && field.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: field.options.linkAttr[i].id,
        onChange: newVal => {
          field.options.linkAttr[i].id = newVal;
          var ssdsd = field.options.linkAttr.concat([]);
          var options = { ...field.options,
            linkAttr: ssdsd
          };
          setAttributes({
            field: { ...field,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          field.options.linkAttr[i].val = newVal;
          var ssdsd = field.options.linkAttr.concat([]);
          var options = { ...field.options,
            linkAttr: ssdsd
          };
          setAttributes({
            field: { ...field,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          field.options.linkAttr.splice(i, 1);
          var ssdsd = field.options.linkAttr.concat([]);
          var options = { ...field.options,
            linkAttr: ssdsd
          };
          setAttributes({
            field: { ...field,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: field.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_12__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(field.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = field.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...field.styles,
          color: newValuesObj
        };
        setAttributes({
          field: { ...field,
            styles: styles
          }
        });
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          color: newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: field.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_12__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(field.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = field.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...field.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          field: { ...field,
            styles: styles
          }
        });
        blockCssY.items[fieldSelector] = { ...blockCssY.items[fieldSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: field.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: field.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_13__["default"], {
      typo: field.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: field
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_17__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Front text',
        value: 'beforeFronttext'
      }, {
        label: 'After Front text',
        value: 'afterFronttext'
      }, {
        label: 'Before Field',
        value: 'beforeField'
      }, {
        label: 'After Field',
        value: 'afterField'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_12__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_12__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_13__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Front Text",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: frontText.options.text,
      onChange: newVal => {
        var options = { ...frontText.options,
          text: newVal
        };
        setAttributes({
          frontText: { ...frontText,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: frontText.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_12__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          color: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          color: newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: frontText.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_12__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_13__["default"], {
      typo: frontText.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypoFrontText,
      setAttributes: setAttributes,
      obj: frontText
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: ""
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, wrapSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Field Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, fieldSelector, '{}', " ")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, ".pg-postAuthor a", '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, frontTextSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_18__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_19__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, metaKey.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Select User Field"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_14__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: userFields,
      buttonTitle: "Choose",
      onChange: setUserField,
      values: metaKey
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Custom Field"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: metaKey,
      onChange: newVal => {
        setAttributes({
          metaKey: newVal
        });
      }
    }))), loading && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Spinner, null), metaKey.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: [blockId]
    }, icon.options.position == 'beforeFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), frontText.options.text.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "frontText"
    }, frontText.options.text), icon.options.position == 'afterFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), icon.options.position == 'beforeField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), !field.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, field.options.prefix.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "prefix"
    }, field.options.prefix), metaKey == 'avatar' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
      className: "fieldVal",
      src: postAuthorData['avatar_url'],
      alt: postAuthorData['display_name']
    }), metaKey != 'avatar' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "fieldVal"
    }, postAuthorData[metaKey]), field.options.postfix.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "postfix"
    }, field.options.postfix)), field.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
      href: "#",
      target: field.options.linkTarget
    }, field.options.prefix.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "prefix"
    }, field.options.prefix), metaKey == 'avatar' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("img", {
      className: "fieldVal",
      src: postAuthorData['avatar_url'],
      alt: postAuthorData['display_name']
    }), metaKey != 'avatar' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "fieldVal"
    }, postAuthorData[metaKey]), field.options.postfix.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "postfix"
    }, field.options.postfix)), icon.options.position == 'afterField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-author/index.js":
/*!*****************************************!*\
  !*** ./src/blocks/post-author/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-sortablejs */ "./node_modules/react-sortablejs/dist/index.js");
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_sortablejs__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/icon/index.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/close.js");
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/hooks */ "@wordpress/hooks");
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_hooks__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");

















const {
  RawHTML
} = wp.element;









var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__.registerBlockType)("post-grid/post-author", {
  title: "Post Author",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M25 249.5C25 246.739 27.2386 244.5 30 244.5H470C472.761 244.5 475 246.739 475 249.5V299.5C475 302.261 472.761 304.5 470 304.5H30C27.2386 304.5 25 302.261 25 299.5V249.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M25 355.5C25 352.739 27.2386 350.5 30 350.5H470C472.761 350.5 475 352.739 475 355.5V405.5C475 408.261 472.761 410.5 470 410.5H30C27.2386 410.5 25 408.261 25 405.5V355.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M241 147C241 144.239 243.239 142 246 142H470C472.761 142 475 144.239 475 147V197C475 199.761 472.761 202 470 202H246C243.239 202 241 199.761 241 197V147Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M100 132.5C119.569 132.5 135.429 116.72 135.429 97.25C135.429 77.7799 119.569 62 100 62C80.4312 62 64.5714 77.7799 64.5714 97.25C64.5714 116.72 80.4312 132.5 100 132.5ZM124.8 141.312H120.178C114.033 144.121 107.196 145.719 100 145.719C92.8036 145.719 85.9946 144.121 79.8223 141.312H75.2C54.6625 141.312 38 157.891 38 178.325V189.781C38 197.079 43.9509 203 51.2857 203H148.714C156.049 203 162 197.079 162 189.781V178.325C162 157.891 145.337 141.312 124.8 141.312Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    elements: {
      "type": "object",
      "default": {
        items: [{
          id: 'avatar',
          label: "Avatar"
        }, {
          id: 'name',
          label: "Name"
        }, {
          id: 'description',
          label: "Description"
        }]
      } // avatar, name, description, id

    },
    avatar: {
      "type": "object",
      "default": {
        options: {
          class: 'avatar',
          size: '48',
          default: ''
        },
        styles: {
          display: {},
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {},
          verticalAlign: {},
          borderRadius: {}
        }
      }
    },
    name: {
      "type": "object",
      "default": {
        options: {
          class: 'name',
          prefix: '',
          postfix: '',
          linkTo: '',
          linkToMeta: '',
          customUrl: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {},
          verticalAlign: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    description: {
      "type": "object",
      "default": {
        options: {
          class: 'description',
          prefix: '',
          postfix: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {},
          verticalAlign: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    linkAttr: {
      "type": "array",
      "default": []
    },
    blockCss: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var elements = attributes.elements;
    var avatar = attributes.avatar;
    var description = attributes.description;
    var name = attributes.name;
    var linkAttr = attributes.linkAttr;
    var blockCss = attributes.blockCss;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    var authorWrapperSelector = blockClass; // Wrapper CSS Class Selectors

    var authorNameSelector = blockClass + ' .name';
    var authorDescriptionSelector = blockClass + ' .description';
    var authorAvatarSelector = blockClass + ' .avatar';
    var authorAvatarImgSelector = blockClass + ' .avatar img';
    var [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    var [postAuthor, setPostAuthor] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    var [html, setHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    var [loading, setLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [linkPickerPosttitle, setLinkPickerPosttitle] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    var [postAuthorId, setPostAuthorId] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__.useEntityProp)('postType', postType, 'author', postId);
    var [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
        path: '/wp/v2/users/' + postAuthorId,
        method: 'GET'
      }).then(res => {
        setPostAuthor(res);
      });
    }, [postAuthorId]);
    var linkToArgsBasic = {
      postUrl: {
        label: 'Post URL',
        value: 'postUrl'
      },
      homeUrl: {
        label: 'Home URL',
        value: 'homeUrl'
      },
      authorUrl: {
        label: 'Author URL',
        value: 'authorUrl'
      },
      authorLink: {
        label: 'Author Link',
        value: 'authorLink'
      },
      authorMail: {
        label: 'Author Mail',
        value: 'authorMail',
        isPro: true
      },
      authorMeta: {
        label: 'Author Meta',
        value: 'authorMeta',
        isPro: true
      },
      customField: {
        label: 'Custom Field',
        value: 'customField',
        isPro: true
      },
      customUrl: {
        label: 'Custom URL',
        value: 'customUrl',
        isPro: true
      }
    };
    let linkToArgs = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_8__.applyFilters)('linkToArgs', linkToArgsBasic);
    var userFields = [{
      id: 'avatar',
      label: "Avatar"
    }, {
      id: 'name',
      label: "Name"
    }, {
      id: 'description',
      label: "Description"
    }];

    function setUserField(option, index) {
      //var isExist = elements.items.find(x => x.label === option.label);
      //if (isExist == undefined) {
      //}
      var elementsX = elements.items.push(option);
      setAttributes({
        elements: {
          items: elements.items
        }
      });
    }

    function generatehtml() {
      var nameHtml = postAuthor.name != undefined ? `<span className='prefix'>${name.options.prefix}</span>${postAuthor.name}<span className='postfix'>${name.options.postfix}</span>` : 'Author Name 1';

      if (name.options.linkTo == 'postUrl') {
        nameHtml = `<span className='prefix'>${name.options.prefix}</span><a href="${currentPostUrl}">${postAuthor.name != undefined ? postAuthor.name : 'Author Name'}</a><span className='postfix'>${name.options.postfix}</span>`;
      }

      if (name.options.linkTo == 'authorUrl') {
        nameHtml = `<span className='prefix'>${name.options.prefix}</span><a href="${postAuthor.url}">${postAuthor.name != undefined ? postAuthor.name : 'Author Name'}</a><span className='postfix'>${name.options.postfix}</span>`;
      }

      if (name.options.linkTo == 'authorLink') {
        nameHtml = `<span className='prefix'>${name.options.prefix}</span><a href="${postAuthor.link}">${postAuthor.name != undefined ? postAuthor.name : 'Author Name'}</a><span className='postfix'>${name.options.postfix}</span>`;
      }

      if (name.options.linkTo == 'authorMeta') {
        nameHtml = `<span className='prefix'>${name.options.prefix}</span><a href="${postAuthor.link}">${postAuthor.name != undefined ? postAuthor.name : 'Author Name'}</a><span className='postfix'>${name.options.postfix}</span>`;
      }

      if (name.options.linkTo == 'customUrl') {
        nameHtml = `<span className='prefix'>${name.options.prefix}</span><a href="${name.options.customUrl}">${postAuthor.name != undefined ? postAuthor.name : 'Author Name'}</a><span className='postfix'>${name.options.postfix}</span>`;
      }

      html.name = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, {
        class: name.options.class
      }, nameHtml);
      html.description = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, {
        class: description.options.class
      }, postAuthor.description != undefined ? postAuthor.description : 'Author description');

      if (postAuthor.avatar_urls != undefined) {
        var avatarHtml = `<img alt='' src=${postAuthor.avatar_urls != undefined ? postAuthor.avatar_urls[avatar.options.size] : ''} />`;
        html.avatar = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, {
          class: avatar.options.class
        }, avatarHtml, " ");
      }

      setTimeout(x => {
        setHtml(html);
      }, 100);
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setTimeout(() => {
        generatehtml();
      }, 1000);
    }, [postAuthor]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generatehtml();
    }, [name]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generatehtml();
    }, [description]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generatehtml();
    }, [avatar]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function paddingControl(nextValues) {
      var responsive = name.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...name.styles,
        padding: responsive
      };
      setAttributes({
        name: { ...name,
          styles: styles
        }
      });
      blockCssY.items[authorNameSelector] = blockCssY.items[authorNameSelector] != undefined ? blockCssY.items[authorNameSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[authorNameSelector]['padding-top'] != undefined ? blockCssY.items[authorNameSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[authorNameSelector]['padding-right'] != undefined ? blockCssY.items[authorNameSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[authorNameSelector]['padding-bottom'] != undefined ? blockCssY.items[authorNameSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[authorNameSelector]['padding-left'] != undefined ? blockCssY.items[authorNameSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function borderRadiusControlAvatar(nextValues) {
      var responsive = avatar.styles.borderRadius;
      responsive[breakPointX] = nextValues;
      var styles = { ...avatar.styles,
        borderRadius: responsive
      };
      setAttributes({
        avatar: { ...avatar,
          styles: styles
        }
      });
      blockCssY.items[authorAvatarImgSelector] = blockCssY.items[authorAvatarImgSelector] != undefined ? blockCssY.items[authorAvatarImgSelector] : {};

      if (nextValues.top != undefined) {
        var borderRadiusX = blockCssY.items[authorAvatarImgSelector]['border-radius'] != undefined ? blockCssY.items[authorAvatarImgSelector]['border-radius'] : {};
        borderRadiusX[breakPointX] = nextValues.top + ' ' + nextValues.right + ' ' + nextValues.bottom + ' ' + nextValues.left;
        blockCssY.items[authorAvatarImgSelector] = { ...blockCssY.items[authorAvatarImgSelector],
          'border-radius': borderRadiusX
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function paddingControlAvatar(nextValues) {
      var responsive = avatar.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...avatar.styles,
        padding: responsive
      };
      setAttributes({
        avatar: { ...avatar,
          styles: styles
        }
      });
      blockCssY.items[authorAvatarSelector] = blockCssY.items[authorAvatarSelector] != undefined ? blockCssY.items[authorAvatarSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[authorAvatarSelector]['padding-top'] != undefined ? blockCssY.items[authorAvatarSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[authorAvatarSelector]['padding-right'] != undefined ? blockCssY.items[authorAvatarSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[authorAvatarSelector]['padding-bottom'] != undefined ? blockCssY.items[authorAvatarSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[authorAvatarSelector]['padding-left'] != undefined ? blockCssY.items[authorAvatarSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function paddingControlDescription(nextValues) {
      var responsive = description.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...description.styles,
        padding: responsive
      };
      setAttributes({
        description: { ...description,
          styles: styles
        }
      });
      blockCssY.items[authorDescriptionSelector] = blockCssY.items[authorDescriptionSelector] != undefined ? blockCssY.items[authorDescriptionSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[authorDescriptionSelector]['padding-top'] != undefined ? blockCssY.items[authorDescriptionSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[authorDescriptionSelector]['padding-right'] != undefined ? blockCssY.items[authorDescriptionSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[authorDescriptionSelector]['padding-bottom'] != undefined ? blockCssY.items[authorDescriptionSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[authorDescriptionSelector]['padding-left'] != undefined ? blockCssY.items[authorDescriptionSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlAvatar(nextValues) {
      var responsive = avatar.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...avatar.styles,
        padding: responsive
      };
      setAttributes({
        avatar: { ...avatar,
          styles: styles
        }
      });
      blockCssY.items[authorAvatarSelector] = blockCssY.items[authorAvatarSelector] != undefined ? blockCssY.items[authorAvatarSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[authorAvatarSelector]['margin-top'] != undefined ? blockCssY.items[authorAvatarSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[authorAvatarSelector]['margin-right'] !== undefined ? blockCssY.items[authorAvatarSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[authorAvatarSelector]['margin-bottom'] !== undefined ? blockCssY.items[authorAvatarSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[authorAvatarSelector]['margin-left'] !== undefined ? blockCssY.items[authorAvatarSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControl(nextValues) {
      var responsive = name.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...name.styles,
        margin: responsive
      };
      setAttributes({
        name: { ...name,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[authorNameSelector] = blockCssY.items[authorNameSelector] != undefined ? blockCssY.items[authorNameSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[authorNameSelector]['margin-top'] != undefined ? blockCssY.items[authorNameSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[authorNameSelector]['margin-right'] !== undefined ? blockCssY.items[authorNameSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[authorNameSelector]['margin-bottom'] !== undefined ? blockCssY.items[authorNameSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[authorNameSelector]['margin-left'] !== undefined ? blockCssY.items[authorNameSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlDescription(nextValues) {
      var responsive = description.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...description.styles,
        padding: responsive
      };
      setAttributes({
        description: { ...description,
          styles: styles
        }
      });
      blockCssY.items[authorDescriptionSelector] = blockCssY.items[authorDescriptionSelector] != undefined ? blockCssY.items[authorDescriptionSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[authorDescriptionSelector]['margin-top'] != undefined ? blockCssY.items[authorDescriptionSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[authorDescriptionSelector]['margin-right'] !== undefined ? blockCssY.items[authorDescriptionSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[authorDescriptionSelector]['margin-bottom'] !== undefined ? blockCssY.items[authorDescriptionSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[authorDescriptionSelector]['margin-left'] !== undefined ? blockCssY.items[authorDescriptionSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypoName(typoX) {
      setAttributes({
        name: { ...name,
          styles: typoX
        }
      });

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[authorNameSelector] != undefined ? blockCssY.items[authorNameSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[authorNameSelector]['line-height'] != undefined ? blockCssY.items[authorNameSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[authorNameSelector]['letter-spacing'] != undefined ? blockCssY.items[authorNameSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypoDescription(typoX) {
      setAttributes({
        description: { ...description,
          styles: typoX
        }
      });

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[authorDescriptionSelector] != undefined ? blockCssY.items[authorDescriptionSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[authorDescriptionSelector]['line-height'] != undefined ? blockCssY.items[authorDescriptionSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[authorDescriptionSelector]['letter-spacing'] != undefined ? blockCssY.items[authorDescriptionSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      linkAttrObj();
    }, [linkAttr]);

    var linkAttrObj = () => {
      var sdsd = {};
      linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd); //return sdsd;
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }]; //const [blockCss, setBlockCss] = useState({ items: {} });

    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    const CustomTag = `${wrapper.tag}`;

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__.BlockControls, null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-3",
      title: "General",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_19__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[authorWrapperSelector] = { ...blockCssY.items[authorWrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Elements",
      initialOpen: true
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Add User Field"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: userFields,
      buttonTitle: "Choose",
      onChange: setUserField,
      values: ""
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_sortablejs__WEBPACK_IMPORTED_MODULE_3__.ReactSortable, {
      list: elements.items,
      setList: item => {
        setAttributes({
          elements: {
            items: item
          }
        });
      }
    }, elements.items.map((item, index) => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      key: item.id,
      className: "flex items-center"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      onClick: ev => {
        var elementsX = elements.items.splice(index, 1);
        setAttributes({
          elements: {
            items: elements.items
          }
        });
      }
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"], {
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"]
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "cursor-move"
    }, item.label))))), elements.items.find(x => x.label === 'Avatar') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Avatar",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Avatar Size"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: avatar.options.size,
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: '24',
        value: '24'
      }, {
        label: '48',
        value: '48'
      }, {
        label: '96',
        value: '96'
      }],
      onChange: newVal => {
        var options = { ...avatar.options,
          size: newVal
        };
        setAttributes({
          avatar: { ...avatar,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Avatar Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: avatar.options.class,
      onChange: newVal => {
        var options = { ...avatar.options,
          class: newVal
        };
        setAttributes({
          avatar: { ...avatar,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: avatar.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(avatar.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = avatar.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...avatar.styles,
          display: newValuesObj
        };
        setAttributes({
          avatar: { ...avatar,
            styles: styles
          }
        });
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Vertical Align"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: avatar.styles.verticalAlign[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'Baseline',
        value: 'baseline'
      }, {
        label: 'Text-top',
        value: 'text-top'
      }, {
        label: 'Text-bottom',
        value: 'text-bottom'
      }, {
        label: 'Middle',
        value: 'middle'
      }, {
        label: 'Bottom',
        value: 'bottom'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(avatar.styles.verticalAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = avatar.styles.verticalAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...avatar.styles,
          verticalAlign: newValuesObj
        };
        setAttributes({
          avatar: { ...avatar,
            styles: styles
          }
        });
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'vertical-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Border Radius"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: avatar.styles.borderRadius[breakPointX],
      onChange: nextValues => {
        borderRadiusControlAvatar(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: avatar.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlAvatar(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: avatar.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlAvatar(nextValues);
      }
    })), elements.items.find(x => x.label === 'Name') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Name",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Name Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: name.options.class,
      onChange: newVal => {
        var options = { ...name.options,
          class: newVal
        };
        setAttributes({
          name: { ...name,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: name.options.linkTo.length == 0 ? 'Choose' : linkToArgs[name.options.linkTo].label,
      options: linkToArgs,
      onChange: (option, index) => {
        var options = { ...name.options,
          linkTo: option.value
        };
        setAttributes({
          name: { ...name,
            options: options
          }
        });
      },
      values: ""
    })), (name.options.linkTo == 'authorMeta' || name.options.linkTo == 'customField') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, name.options.linkTo == 'authorMeta' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, "Author Meta Key"), name.options.linkTo == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, "Post Meta Key")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: name.options.linkToMeta,
      onChange: newVal => {
        var options = { ...name.options,
          linkToMeta: newVal
        };
        setAttributes({
          name: { ...name,
            options: options
          }
        });
      }
    })), name.options.linkTo == 'customUrl' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Custom Url"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      className: linkPickerPosttitle ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__["default"],
      onClick: ev => {
        setLinkPickerPosttitle(prev => !prev);
      }
    }), name.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_23__["default"],
      onClick: ev => {
        var options = { ...name.options,
          customUrl: ''
        };
        setAttributes({
          name: { ...name,
            options: options
          }
        });
        setLinkPickerPosttitle(false);
      }
    }), linkPickerPosttitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__.__experimentalLinkControl, {
      settings: [],
      value: name.options.customUrl,
      onChange: newVal => {
        var options = { ...name.options,
          customUrl: newVal.url
        };
        setAttributes({
          name: { ...name,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", name.options.customUrl.length != 0 ? name.options.customUrl : 'No link', " "))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: name.options.prefix,
      onChange: newVal => {
        var options = { ...name.options,
          prefix: newVal
        };
        setAttributes({
          name: { ...name,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: name.options.postfix,
      onChange: newVal => {
        var options = { ...name.options,
          postfix: newVal
        };
        setAttributes({
          name: { ...name,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: name.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(name.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = name.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...name.styles,
          display: newValuesObj
        };
        setAttributes({
          name: { ...name,
            styles: styles
          }
        });
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Vertical Align"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: name.styles.verticalAlign[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'Baseline',
        value: 'baseline'
      }, {
        label: 'Text-top',
        value: 'text-top'
      }, {
        label: 'Text-bottom',
        value: 'text-bottom'
      }, {
        label: 'Middle',
        value: 'middle'
      }, {
        label: 'Bottom',
        value: 'bottom'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(name.styles.verticalAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = name.styles.verticalAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...name.styles,
          verticalAlign: newValuesObj
        };
        setAttributes({
          name: { ...name,
            styles: styles
          }
        });
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'vertical-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: name.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_14__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(name.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = name.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...name.styles,
          color: newValuesObj
        };
        setAttributes({
          name: { ...name,
            styles: styles
          }
        });
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: name.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_14__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(name.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = name.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...name.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          name: { ...name,
            styles: styles
          }
        });
        blockCssY.items[authorNameSelector] = { ...blockCssY.items[authorNameSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: name.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: name.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_16__["default"], {
      typo: name.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypoName,
      setAttributes: setAttributes,
      obj: name
    })), elements.items.find(x => x.label === 'Description') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Description",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Description Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: description.options.class,
      onChange: newVal => {
        var options = { ...description.options,
          class: newVal
        };
        setAttributes({
          description: { ...description,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "VerticalA lign"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: description.styles.verticalAlign[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'Baseline',
        value: 'baseline'
      }, {
        label: 'Text-top',
        value: 'text-top'
      }, {
        label: 'Text-bottom',
        value: 'text-bottom'
      }, {
        label: 'Middle',
        value: 'middle'
      }, {
        label: 'Bottom',
        value: 'bottom'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(description.styles.verticalAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = description.styles.verticalAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...description.styles,
          verticalAlign: newValuesObj
        };
        setAttributes({
          description: { ...description,
            styles: styles
          }
        });
        blockCssY.items[authorAvatarSelector] = { ...blockCssY.items[authorAvatarSelector],
          'vertical-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: description.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_14__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(description.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = description.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...description.styles,
          color: newValuesObj
        };
        setAttributes({
          description: { ...description,
            styles: styles
          }
        });
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: description.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_14__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(description.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = description.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...description.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          description: { ...description,
            styles: styles
          }
        });
        blockCssY.items[authorDescriptionSelector] = { ...blockCssY.items[authorDescriptionSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: description.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlDescription(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: description.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlDescription(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_16__["default"], {
      typo: description.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypoDescription,
      setAttributes: setAttributes,
      obj: description
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Wrapper Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, authorWrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Name Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, authorNameSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Description Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, authorDescriptionSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Avatar Selector "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, authorAvatarSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_17__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_18__["default"], {
      utm: {
        utm_source: 'BlockPostExcerpt',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: blockId
    }, elements.items.map(x => {
      return html[x.id];
    }))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-categories/index.js":
/*!*********************************************!*\
  !*** ./src/blocks/post-categories/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");














const {
  RawHTML
} = wp.element;









var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__.registerBlockType)("post-grid/post-categories", {
  title: "Post Categories",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M38 209.5C38 206.739 40.2386 204.5 43 204.5H483C485.761 204.5 488 206.739 488 209.5V259.5C488 262.261 485.761 264.5 483 264.5H43C40.2386 264.5 38 262.261 38 259.5V209.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M38 315.5C38 312.739 40.2386 310.5 43 310.5H365C367.761 310.5 370 312.739 370 315.5V365.5C370 368.261 367.761 370.5 365 370.5H43C40.2386 370.5 38 368.261 38 365.5V315.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M129.861 115.454C128.257 117.058 127.356 119.233 127.356 121.501C127.356 123.769 128.257 125.944 129.861 127.548C131.465 129.151 133.64 130.052 135.908 130.052C138.176 130.052 140.351 129.151 141.955 127.548C143.558 125.944 144.459 123.769 144.459 121.501C144.459 119.233 143.558 117.058 141.955 115.454C140.351 113.85 138.176 112.949 135.908 112.949C133.64 112.949 131.465 113.85 129.861 115.454ZM71.4472 153.066C68.5447 153.066 65.6018 151.977 63.3443 149.72C61.1271 147.503 59.9983 144.6 60.0386 141.657V101.344C60.0386 98.4418 61.1271 95.4989 63.3443 93.2817C65.5615 91.0645 68.4641 89.9357 71.4472 89.9357L127.805 89.9357C130.788 89.9357 133.69 91.0645 135.908 93.2817L156.064 113.438C160.539 117.913 160.539 125.089 156.064 129.563L135.908 149.72C133.69 151.937 130.788 153.066 127.885 153.066H71.4472ZM110.712 161.128V169.191H55.322C52.3792 169.231 49.4363 168.062 47.2191 165.845C45.0019 163.628 43.8731 160.725 43.8731 157.823L43.8731 114.446L51.9357 114.446L52.2582 160.806L110.712 161.128Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          class: ''
        },
        styles: {
          display: {},
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    items: {
      type: 'object',
      default: {
        options: {
          prefix: '',
          postfix: '',
          maxCount: 99,
          postCount: false,
          class: ' item ',
          linkTarget: '',
          linkAttr: []
        },
        styles: {
          textAlign: {},
          display: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: '',
          position: 'beforeFronttext',

          /*before, after, prefix, postfix */
          class: 'icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    termTitle: {
      type: 'object',
      default: {
        options: {
          class: 'inline-block',
          text: ', '
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    separator: {
      type: 'object',
      default: {
        options: {
          class: 'inline-block',
          text: ', '
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    frontText: {
      type: 'object',
      default: {
        options: {
          text: 'Categories: ',
          class: 'inline-block'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var items = attributes.items;
    var separator = attributes.separator;
    var frontText = attributes.frontText;
    var icon = attributes.icon;
    var blockCssY = attributes.blockCssY;
    var customCss = attributes.customCss;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint()); // Wrapper CSS Class Selectors

    const itemWrapSelector = blockClass;
    const itemSelector = blockClass + ' .item';
    const itemTitleSelector = blockClass + ' .termTitle';
    const itemSeparatorSelector = blockClass + ' .separator';
    const frontTextSelector = blockClass + ' .frontText';
    const postCountSelector = blockClass + ' .postCount';
    const iconSelector = blockClass + ' .icon';
    var breakPointList = [];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    var dummyCats = [{
      "id": 1,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 1",
      "slug": "category-1",
      "taxonomy": "category_tax"
    }, {
      "id": 2,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 2",
      "slug": "category-2",
      "taxonomy": "category_tax"
    }, {
      "id": 3,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 3",
      "slug": "category-3",
      "taxonomy": "category_tax"
    }, {
      "id": 4,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 4",
      "slug": "category-4",
      "taxonomy": "category_tax"
    }, {
      "id": 5,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 5",
      "slug": "category-5",
      "taxonomy": "category_tax"
    }, {
      "id": 6,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 6",
      "slug": "category-6",
      "taxonomy": "category_tax"
    }];
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ postTitle: postTitle });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
    }, [clientId]);
    const [categoryCount, setcategoryCount] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(0); // Using the hook.

    const [postCategoriesData, setPostCategoriesData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [categories, setCategories] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [postCategoriesX, setPostCategoriesX] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__.useEntityProp)('postType', postType, 'categories', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setPostCategoriesData([]);
      setCategories([]);
      setcategoryCount(categories.length - 1);

      if (postCategoriesX != undefined) {
        for (x in postCategoriesX) {
          var catId = postCategoriesX[x];
          var assd = x;

          if (x) {
            _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
              path: '/wp/v2/categories/' + catId,
              method: 'GET'
            }).then(res => {
              setPostCategoriesData(current => [...current, res]);
              setCategories(current => [...current, res]);
            });
          }
        }
      } else {
        setPostCategoriesData(dummyCats);
        setCategories(dummyCats);
      }
    }, [postCategoriesX]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var asdasd = postCategoriesData.slice(0, items.options.maxCount);
      setCategories(asdasd);
    }, [postCategoriesData]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      if (postCategoriesX != undefined && postCategoriesX.length > 0) {
        var maxCount = items.options.maxCount.length > 0 ? items.options.maxCount : 99;
        setcategoryCount(categories.length - 1);
        var asdasd = postCategoriesData.slice(0, maxCount);
        setCategories(asdasd);
      } else {
        var asdasd = dummyCats.slice(0, maxCount);
        setCategories(asdasd);
      }
    }, [items]);
    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);

    function paddingControlItems(nextValues) {
      var responsive = items.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...items.styles,
        padding: responsive
      };
      setAttributes({
        items: { ...items,
          styles: styles
        }
      });
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[itemSelector]['padding-top'] != undefined ? blockCssY.items[itemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[itemSelector]['padding-right'] != undefined ? blockCssY.items[itemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[itemSelector]['padding-bottom'] != undefined ? blockCssY.items[itemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[itemSelector]['padding-left'] != undefined ? blockCssY.items[itemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlItems(nextValues) {
      var responsive = items.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...items.styles,
        margin: responsive
      };
      setAttributes({
        items: { ...items,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[itemSelector]['margin-top'] != undefined ? blockCssY.items[itemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[itemSelector]['margin-right'] !== undefined ? blockCssY.items[itemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[itemSelector]['margin-bottom'] !== undefined ? blockCssY.items[itemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[itemSelector]['margin-left'] !== undefined ? blockCssY.items[itemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypo(typoX) {
      setAttributes({
        items: { ...items,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[itemSelector]['line-height'] != undefined ? blockCssY.items[itemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[itemSelector]['letter-spacing'] != undefined ? blockCssY.items[itemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};

        if (fontSizeX[breakPointX] == undefined) {
          fontSizeX[breakPointX] = '';
        }

        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function onChangeTypoFrontText(typoX) {
      setAttributes({
        frontText: { ...frontText,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[frontTextSelector]['font-size'] != undefined ? blockCssY.items[frontTextSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[frontTextSelector]['line-height'] != undefined ? blockCssY.items[frontTextSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[frontTextSelector]['letter-spacing'] != undefined ? blockCssY.items[frontTextSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
      generateBlockCssY();
    }, [items]);

    var linkAttrObj = () => {
      var sdsd = {};
      items.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    const post = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_6__.useSelect)(select => select('core').getEntityRecord('postType', context['postType'], context['postId']));
    const termstaxonomy = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_6__.useSelect)(select => select('core').getEntityRecords('taxonomy', 'category', [4, 5]));

    const MyDropdown = () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
          title: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].name : '',
          variant: "secondary",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, {
          className: "text-lg "
        }, _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon : '<span class="icon-responsive font-bold"></span>'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, breakPointList.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: ' text-lg font-bold border-b inline-block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            setPreviewDeviceType(x.value);
            var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
            asdsdsd.then(res => {
              setBreakPointX(res.breakpoint);
              generateBlockCssY();
            });
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          class: "icon-close"
        })), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, x.icon));
      }))
    }));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var styles = { ...postfix.styles,
          textAlign: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            styles: styles
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: wrapper.options.class,
      onChange: newVal => {
        var options = { ...wrapper.options,
          class: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_15__["default"], {
      val: items.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          display: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        blockCssY.items[itemWrapSelector] = { ...blockCssY.items[itemWrapSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      label: "Display Post Count",
      help: items.options.postCount ? 'Post Count Enabled' : 'Post Count Disabled',
      checked: items.options.postCount ? true : false,
      onChange: e => {
        var options = { ...items.options,
          postCount: items.options.postCount ? false : true
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Item Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.class,
      onChange: newVal => {
        var options = { ...items.options,
          class: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Max Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.maxCount,
      onChange: newVal => {
        var options = { ...items.options,
          maxCount: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...items.options,
          linkTarget: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.prefix,
      onChange: newVal => {
        var options = { ...items.options,
          prefix: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.postfix,
      onChange: newVal => {
        var options = { ...items.options,
          postfix: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = items.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...items.options,
          linkAttr: sdsd
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), items.options.linkAttr.length > 0 && items.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: items.options.linkAttr[i].id,
        onChange: newVal => {
          items.options.linkAttr[i].id = newVal;
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          items.options.linkAttr[i].val = newVal;
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          items.options.linkAttr.splice(i, 1);
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      })));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_15__["default"], {
      val: items.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          display: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: items.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          color: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            color: newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            color: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: items.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'background-color': newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'background-color': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: items.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: items.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: items.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: items
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_18__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon position"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Front text',
        value: 'beforeFronttext'
      }, {
        label: 'After Front text',
        value: 'afterFronttext'
      }, {
        label: 'Before Items',
        value: 'beforeItems'
      }, {
        label: 'After Items',
        value: 'afterItems'
      }, {
        label: 'Before Each Items',
        value: 'beforeItem'
      }, {
        label: 'After Each Items',
        value: 'afterItem'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Front Text",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: frontText.options.text,
      onChange: newVal => {
        var options = { ...frontText.options,
          text: newVal
        };
        setAttributes({
          frontText: { ...frontText,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: frontText.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          color: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: frontText.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        blockCssY.items[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: frontText.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypoFrontText,
      setAttributes: setAttributes,
      obj: frontText
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Separator",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Separator"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: separator.options.text,
      onChange: newVal => {
        var options = { ...separator.options,
          text: newVal
        };
        setAttributes({
          separator: { ...separator,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: ""
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Items Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemWrapSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Caetgory Items"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemSelector, '{}', " ")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, ".pg-postCategories a", '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Separator"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemSeparatorSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, frontTextSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Post Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postCountSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_17__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, categories.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, "No Categories Found"), categories.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, icon.options.position == 'beforeFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "frontText inline-block"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, frontText.options.text)), icon.options.position == 'afterFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), icon.options.position == 'beforeItems' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), categories.map((x, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        onClick: ev => ev.preventDefault(),
        target: items.options.linkTarget,
        title: x.name
      }, linkAttrItems, {
        className: items.options.class,
        href: x.link
      }), icon.options.position == 'beforeItem' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: icon.options.class,
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "termTitle"
      }, items.options.prefix, x.name, items.options.postfix), items.options.postCount == true && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "postCount"
      }, "(", x.count, ")"), icon.options.position == 'afterItem' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: icon.options.class,
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), categories.length > index + 1 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "separator",
        dangerouslySetInnerHTML: {
          __html: separator.options.text
        }
      }));
    }), icon.options.position == 'afterItems' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-comment-count/index.js":
/*!************************************************!*\
  !*** ./src/blocks/post-comment-count/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");














const {
  RawHTML
} = wp.element;












var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/post-comment-count", {
  title: "Post Comment Count",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 95C25 92.2386 27.2386 90 30 90H470C472.761 90 475 92.2386 475 95V145C475 147.761 472.761 150 470 150H30C27.2386 150 25 147.761 25 145V95Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 234C25 231.239 27.2386 229 30 229H470C472.761 229 475 231.239 475 234V254C475 256.761 472.761 259 470 259H30C27.2386 259 25 256.761 25 254V234Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 298C25 295.239 27.2386 293 30 293H470C472.761 293 475 295.239 475 298V318C475 320.761 472.761 323 470 323H30C27.2386 323 25 320.761 25 318V298Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 362C25 359.239 27.2386 357 30 357H366C368.761 357 371 359.239 371 362V382C371 384.761 368.761 387 366 387H30C27.2386 387 25 384.761 25 382V362Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    commentCount: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          status: 'approved',
          customLabel: 'Count: %s',
          linkTo: '',
          // postUrl, customField, authorUrl, authorLink, homeUrl, custom
          linkToUrl: '',
          linkToMetaKey: '',
          linkTarget: '_blank',
          linkAttr: [],
          customUrl: '',
          class: ''
        },
        styles: {
          textAlign: {},
          display: {},
          width: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'far fa-calendar-alt',
          position: 'beforeCommentCount',

          /*before, after, prefix, postfix */
          class: 'commentCount-icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    prefix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    postfix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    let commentCount = attributes.commentCount;
    var wrapper = attributes.wrapper;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var icon = attributes.icon;
    var prefix = attributes.prefix;
    var postfix = attributes.postfix;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [linkPickerPosttitle, setLinkPickerPosttitle] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    var [currentCommentCount, setcurrentCommentCount] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
      approved: 0,
      moderated: 0,
      spam: 0,
      total_comments: 0,
      trash: 0,
      'post-trashed': 0,
      all: 0
    });
    var [commentCountEdited, setcommentCountEdited] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(commentCount.options.customLabel);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_3___default()({
        path: '/post-grid/v2/get_comment_count',
        method: 'POST',
        data: {
          id: postId
        }
      }).then(res => {
        setcurrentCommentCount(res);
        setcommentCountEdited(commentCount.options.customLabel.replace('%s', res[commentCount.options.status]));
      });
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setcommentCountEdited(commentCount.options.customLabel.replace('%s', currentCommentCount[commentCount.options.status]));
    }, [commentCount]);

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    String.prototype.strtr = function (dic) {
      const str = this.toString(),
            makeToken = inx => `{{###~${inx}~###}}`,
            tokens = Object.keys(dic).map((key, inx) => ({
        key,
        val: dic[key],
        token: makeToken(inx)
      })),
            tokenizedStr = tokens.reduce((carry, entry) => carry.replace(new RegExp(entry.key, "g"), entry.token), str);

      return tokens.reduce((carry, entry) => carry.replace(new RegExp(entry.token, "g"), entry.val), tokenizedStr);
    };

    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ commentCount: commentCount });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
    }, [clientId]); // Wrapper CSS Class Selectors

    const wrapperSelector = blockClass;
    var commentCountSelector = '';

    if (wrapper.options.tag.length != 0) {
      if (commentCount.options.linkTo.length > 0) {
        commentCountSelector = blockClass + ' a';
      } else {
        commentCountSelector = blockClass; //commentCountSelector = blockClass + ' .commentCount';
      }
    } else {
      commentCountSelector = blockClass;
    }

    const prefixSelector = blockClass + ' .prefix';
    const postfixSelector = blockClass + ' .postfix';
    const iconSelector = blockClass + ' .commentCount-icon';
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function paddingControl(nextValues) {
      var responsive = commentCount.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...commentCount.styles,
        padding: responsive
      };
      setAttributes({
        commentCount: { ...commentCount,
          styles: styles
        }
      });
      blockCssY.items[commentCountSelector] = blockCssY.items[commentCountSelector] != undefined ? blockCssY.items[commentCountSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[commentCountSelector]['padding-top'] != undefined ? blockCssY.items[commentCountSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[commentCountSelector]['padding-right'] != undefined ? blockCssY.items[commentCountSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[commentCountSelector]['padding-bottom'] != undefined ? blockCssY.items[commentCountSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[commentCountSelector]['padding-left'] != undefined ? blockCssY.items[commentCountSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControl(nextValues) {
      var responsive = commentCount.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...commentCount.styles,
        margin: responsive
      };
      setAttributes({
        commentCount: { ...commentCount,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[commentCountSelector] = blockCssY.items[commentCountSelector] != undefined ? blockCssY.items[commentCountSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[commentCountSelector]['margin-top'] != undefined ? blockCssY.items[commentCountSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[commentCountSelector]['margin-right'] !== undefined ? blockCssY.items[commentCountSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[commentCountSelector]['margin-bottom'] !== undefined ? blockCssY.items[commentCountSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[commentCountSelector]['margin-left'] !== undefined ? blockCssY.items[commentCountSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
    }, [commentCount]);

    var linkAttrObj = () => {
      var sdsd = {};
      commentCount.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = commentCount.options.customUrl != undefined && commentCount.options.customUrl.length > 0 ? commentCount.options.customUrl : currentPostUrl;
    const CustomTag = `${wrapper.options.tag}`;
    const CustomTagPostTitle = `${commentCount.options.tag}`;

    function onChangeTypo(typoX) {
      setAttributes({
        commentCount: { ...commentCount,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[commentCountSelector] != undefined ? blockCssY.items[commentCountSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[commentCountSelector]['line-height'] != undefined ? blockCssY.items[commentCountSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[commentCountSelector]['letter-spacing'] != undefined ? blockCssY.items[commentCountSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.AlignmentToolbar, {
      value: wrapper.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: {
            options: wrapper.options,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_20__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Comment Count",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Comment Status"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: commentCount.options.status,
      options: [{
        label: 'Approved',
        value: 'approved'
      }, {
        label: 'Moderated',
        value: 'moderated'
      }, {
        label: 'Spam',
        value: 'spam'
      }, {
        label: 'Trash',
        value: 'trash'
      }, {
        label: 'Post trashed',
        value: 'post-trashed'
      }, {
        label: 'Total Comments',
        value: 'total_comments'
      }, {
        label: 'All',
        value: 'all'
      }],
      onChange: newVal => {
        var options = { ...commentCount.options,
          status: newVal
        };
        setAttributes({
          commentCount: { ...commentCount,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Label"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      className: "mr-2",
      value: commentCount.options.customLabel,
      onChange: newVal => {
        var options = { ...commentCount.options,
          customLabel: newVal
        };
        setAttributes({
          commentCount: { ...commentCount,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: commentCount.options.linkTo,
      options: [{
        label: 'No Link',
        value: ''
      }, {
        label: 'Post URL',
        value: 'postUrl'
      }, {
        label: 'Custom Field',
        value: 'customField'
      }, {
        label: 'Author URL',
        value: 'authorUrl'
      }, {
        label: 'Author Link',
        value: 'authorLink'
      }, {
        label: 'Home URL',
        value: 'homeUrl'
      }, {
        label: 'Custom',
        value: 'custom'
      }],
      onChange: newVal => {
        var options = { ...commentCount.options,
          linkTo: newVal
        };
        setAttributes({
          commentCount: { ...commentCount,
            options: options
          }
        });
      }
    })), commentCount.options.linkTo == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      className: "mr-2",
      value: commentCount.options.linkToMetaKey,
      onChange: newVal => {
        var options = { ...commentCount.options,
          linkToMetaKey: newVal
        };
        setAttributes({
          commentCount: { ...commentCount,
            options: options
          }
        });
      }
    })), commentCount.options.customUrl.length > 0 && postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_11__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postCommentCount&utm_campaign=pluginPostGrid&utm_medium=postCommentCount-customUrl"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Custom URL"), " feature only avilable in pro version")), commentCount.options.linkTo == 'custom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      className: linkPickerPosttitle ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"],
      onClick: ev => {
        setLinkPickerPosttitle(prev => !prev);
      }
    }), commentCount.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__["default"],
      onClick: ev => {
        var options = { ...commentCount.options,
          customUrl: ''
        };
        setAttributes({
          commentCount: { ...commentCount,
            options: options
          }
        });
        setLinkPickerPosttitle(false);
      }
    }), linkPickerPosttitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.__experimentalLinkControl, {
      settings: [],
      value: commentCount.options.customUrl,
      onChange: newVal => {
        var options = { ...commentCount.options,
          customUrl: newVal.url
        };
        setAttributes({
          commentCount: { ...commentCount,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", commentCount.options.customUrl.length != 0 ? commentCount.options.customUrl : 'No link', " ")))), commentCount.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: commentCount.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...commentCount.options,
          tag: newVal
        };
        setAttributes({
          commentCount: { ...commentCount,
            options: options
          }
        });
      }
    })), commentCount.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: commentCount.options.linkTarget,
      options: [{
        label: 'Choose...',
        value: ''
      }, {
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...commentCount.options,
          linkTarget: newVal
        };
        setAttributes({
          commentCount: { ...commentCount,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = commentCount.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...commentCount.options,
          linkAttr: sdsd
        };
        setAttributes({
          commentCount: { ...commentCount,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), commentCount.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: commentCount.options.linkAttr[i].id,
        onChange: newVal => {
          commentCount.options.linkAttr[i].id = newVal;
          var ssdsd = commentCount.options.linkAttr.concat([]);
          var options = { ...commentCount.options,
            linkAttr: ssdsd
          };
          setAttributes({
            commentCount: { ...commentCount,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          commentCount.options.linkAttr[i].val = newVal;
          var ssdsd = commentCount.options.linkAttr.concat([]);
          var options = { ...commentCount.options,
            linkAttr: ssdsd
          };
          setAttributes({
            commentCount: { ...commentCount,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          commentCount.options.linkAttr.splice(i, 1);
          var ssdsd = commentCount.options.linkAttr.concat([]);
          var options = { ...commentCount.options,
            linkAttr: ssdsd
          };
          setAttributes({
            commentCount: { ...commentCount,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: commentCount.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(commentCount.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = commentCount.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...commentCount.styles,
          color: newValuesObj
        };
        setAttributes({
          commentCount: { ...commentCount,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: commentCount.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(commentCount.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = commentCount.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...commentCount.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          commentCount: { ...commentCount,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_13__["default"], {
      typo: commentCount.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: commentCount
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: commentCount.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }, {
        label: 'none',
        value: 'none'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(commentCount.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = commentCount.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...commentCount.styles,
          display: newValuesObj
        };
        setAttributes({
          commentCount: { ...commentCount,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[commentCountSelector] == undefined) {
          newValuesObjX[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
            display: newValuesObj
          };
        } else {
          newValuesObjX[commentCountSelector] = { ...blockCssY.items[commentCountSelector],
            display: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: commentCount.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: commentCount.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_19__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Comment Count',
        value: 'beforeCommentCount'
      }, {
        label: 'After Comment Count',
        value: 'afterCommentCount'
      }, {
        label: 'Before Prefix',
        value: 'beforePrefix'
      }, {
        label: 'After Prefix',
        value: 'afterPrefix'
      }, {
        label: 'Before Postfix',
        value: 'beforePostfix'
      }, {
        label: 'After Postfix',
        value: 'afterPostfix'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_13__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Prefix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: prefix.options.text,
      onChange: newVal => {
        var options = { ...prefix.options,
          text: newVal
        };
        setAttributes({
          prefix: {
            styles: prefix.styles,
            options: options
          }
        }); // setAttributes({ prefix: { text: newVal, class: prefix.options.class, color: prefix.color, bgColor: prefix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Postfix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: postfix.options.text,
      onChange: newVal => {
        var options = { ...postfix.options,
          text: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            options: options
          }
        }); // setAttributes({ postfix: { text: newVal, class: prefix.options.class, color: postfix.color, bgColor: postfix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, wrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title link"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, commentCountSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, prefixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postfixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_15__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId]
    }, icon.options.position == 'beforePrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'afterPrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), commentCount.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "commentCount",
      onClick: handleLinkClick
    }, linkAttrItems, {
      target: commentCount.options.linkTarget,
      href: postUrl
    }), icon.options.position == 'beforeCommentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), commentCountEdited, icon.options.position == 'afterCommentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), commentCount.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforeCommentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), commentCountEdited, icon.options.position == 'afterCommentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text), icon.options.position == 'afterPostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), wrapper.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), commentCount.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "commentCount",
      onClick: handleLinkClick
    }, linkAttrItems, {
      target: commentCount.options.linkTarget,
      href: postUrl
    }), "A", icon.options.position == 'beforeCommentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), commentCountEdited, icon.options.position == 'afterCommentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), commentCount.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, icon.options.position == 'beforeCommentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), commentCountEdited, icon.options.position == 'afterCommentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }))))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-date/index.js":
/*!***************************************!*\
  !*** ./src/blocks/post-date/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");













const {
  RawHTML
} = wp.element;












var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/post-date", {
  title: "Post Date",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 95C25 92.2386 27.2386 90 30 90H470C472.761 90 475 92.2386 475 95V145C475 147.761 472.761 150 470 150H30C27.2386 150 25 147.761 25 145V95Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 234C25 231.239 27.2386 229 30 229H470C472.761 229 475 231.239 475 234V254C475 256.761 472.761 259 470 259H30C27.2386 259 25 256.761 25 254V234Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 298C25 295.239 27.2386 293 30 293H470C472.761 293 475 295.239 475 298V318C475 320.761 472.761 323 470 323H30C27.2386 323 25 320.761 25 318V298Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 362C25 359.239 27.2386 357 30 357H366C368.761 357 371 359.239 371 362V382C371 384.761 368.761 387 366 387H30C27.2386 387 25 384.761 25 382V362Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    postDate: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          dateFormat: 'Y-m-d',
          linkTo: '',
          // postUrl, customField, authorUrl, authorLink, homeUrl, custom
          linkToUrl: '',
          linkToMetaKey: '',
          linkTarget: '_blank',
          linkAttr: [],
          customUrl: '',
          class: ''
        },
        styles: {
          textAlign: {},
          display: {},
          width: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'far fa-calendar-alt',
          position: 'beforePostDate',

          /*before, after, prefix, postfix */
          class: 'postdate-icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    prefix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    postfix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    let postDate = attributes.postDate;
    var wrapper = attributes.wrapper;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var icon = attributes.icon;
    var prefix = attributes.prefix;
    var postfix = attributes.postfix;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [customTags, setCustomTags] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [linkPickerPosttitle, setLinkPickerPosttitle] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [dateObj, setdateObj] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [formatedPostDate, setformatedPostDate] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)("");
    var dateFormats = {
      'Y-M-d': {
        label: '2022-May-25',
        value: 'Y-M-d'
      },
      'Y-m-d': {
        label: '2022-05-25',
        value: 'Y-m-d'
      },
      'd-m-y': {
        label: '25-05-2022',
        value: 'd-m-y'
      },
      'd/m/y': {
        label: '25/05/2022',
        value: 'd/m/y'
      },
      'y-m-d': {
        label: '2022-05-25',
        value: 'y-m-d'
      },
      'y/m/d': {
        label: '2022/05/25',
        value: 'y/m/d'
      },
      'D M y': {
        label: 'Sun May 2022',
        value: 'D M y'
      },
      'D M d, y': {
        label: 'Sun May 11, 2022',
        value: 'D M d, y'
      },
      'M D d, y': {
        label: 'May Sun 11, 2022',
        value: 'M D d, y'
      },
      'M d, y': {
        label: 'May 11, 2022',
        value: 'M d, y'
      },
      'd M y': {
        label: '25 May 2022',
        value: 'd M y'
      }
    };
    var dateNames = ["Satureday", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
    var dateNamesShort = ["Sat", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri"];
    var MonthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    var MonthNamesShort = ["Jan", "Feb", "Mar", "Apr", "May", "June", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    const [currentPostDate, setcurrentPostDate] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'date', postId);
    const [postDateEdited, setpostDateEdited] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(currentPostDate);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var dateFormat = postDate.options.dateFormat;
      var dateFormat = dateFormat.replace("d", "{d}");
      var dateFormat = dateFormat.replace("D", "{D}");
      var dateFormat = dateFormat.replace("M", "{M}");
      var dateFormat = dateFormat.replace("m", "{m}");
      var dateFormat = dateFormat.replace("y", "{y}");
      var dateFormat = dateFormat.replace("Y", "{Y}");
      var dateFormat = dateFormat.replace("h", "{h}");
      var dateFormat = dateFormat.replace("H", "{H}");
      var dateFormat = dateFormat.replace("i", "{i}");
      var dateFormat = dateFormat.replace("s", "{s}");
      var dateFormat = dateFormat.replace("A", "{A}");
      var dateFormat = dateFormat.replace("a", "{a}");
      const date = new Date(currentPostDate);
      var amOrPm = date.getHours() < 12 ? "AM" : "PM";
      dateObj["{d}"] = date.getDate();
      dateObj["{D}"] = dateNamesShort[date.getDay()];
      dateObj["{M}"] = MonthNamesShort[date.getMonth()];
      dateObj["{m}"] = date.getMonth() + 1;
      dateObj["{y}"] = date.getFullYear();
      dateObj['{Y}'] = date.getFullYear();
      dateObj["{h}"] = date.getHours();
      dateObj["{H}"] = date.getHours();
      dateObj["{i}"] = date.getMinutes();
      dateObj["{s}"] = date.getSeconds();
      dateObj["{A}"] = amOrPm;
      dateObj["{a}"] = amOrPm.toLowerCase();
      setpostDateEdited(dateFormat.strtr(dateObj));
    }, [currentPostDate, postDate.options.dateFormat]);

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    String.prototype.strtr = function (dic) {
      const str = this.toString(),
            makeToken = inx => `{{###~${inx}~###}}`,
            tokens = Object.keys(dic).map((key, inx) => ({
        key,
        val: dic[key],
        token: makeToken(inx)
      })),
            tokenizedStr = tokens.reduce((carry, entry) => carry.replace(new RegExp(entry.key, "g"), entry.token), str);

      return tokens.reduce((carry, entry) => carry.replace(new RegExp(entry.token, "g"), entry.val), tokenizedStr);
    };

    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ postDate: postDate });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
      customTags['currentYear'] = '2022';
      customTags['currentMonth'] = '07';
      customTags['currentDay'] = '27';
      customTags['currentDate'] = '27';
      customTags['currentTime'] = '27';
      customTags['postPublishDate'] = '123';
      customTags['postModifiedDate'] = '123';
      customTags['termId'] = '';
      customTags['termTitle'] = '';
      customTags['termDescription'] = '';
      customTags['termPostCount'] = '';
      customTags['postTagTitle'] = 'First Tag Title';
      customTags['postTagsTitle'] = 'First Tag Title';
      customTags['postCategoryTitle'] = 'First Category Title';
      customTags['postCategoriesTitle'] = 'First Categories Title';
      customTags['postTermTitle'] = 'First Term Title';
      customTags['postTermsTitle'] = 'List of all terms title';
      customTags['postId'] = '123';
      customTags['postStatus'] = '123';
      customTags['authorId'] = '123';
      customTags['authorName'] = 'Nur Hasan';
      customTags['authorFirstName'] = 'Nur';
      customTags['authorLastName'] = 'Hasan';
      customTags['authorDescription'] = 'Hasan';
      customTags['excerpt'] = 'Here is the post excerpt';
      customTags['rankmathTitle'] = 'Hasan';
      customTags['rankmathPermalink'] = 'Hasan';
      customTags['rankmathExcerpt'] = 'Hasan';
      customTags['rankmathFocusKeyword'] = 'Hasan';
      customTags['rankmathFocusKeywords'] = 'Hasan';
      customTags['rankmathOrgname'] = 'Hasan';
      customTags['rankmathOrgurl'] = 'Hasan';
      customTags['rankmathOrglogo'] = 'Hasan';
      customTags['siteTitle'] = '';
      customTags['siteDescription'] = '';
      customTags['siteTagline'] = '';
      customTags['postMeta'] = '';
      customTags['separator'] = '';
      customTags['searchTerms'] = '';
      customTags['counter'] = '1';
    }, [clientId]); // Wrapper CSS Class Selectors

    const postDateWrapperSelector = blockClass;
    var postDateSelector = '';

    if (wrapper.options.tag.length != 0) {
      if (postDate.options.linkTo.length > 0) {
        postDateSelector = blockClass + ' a';
      } else {
        postDateSelector = blockClass; //postDateSelector = blockClass + ' .postDate';
      }
    } else {
      postDateSelector = blockClass;
    }

    const postDatePrefixSelector = blockClass + ' .prefix';
    const postDatePostfixSelector = blockClass + ' .postfix';
    const iconSelector = blockClass + ' .postdate-icon';
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function paddingControl(nextValues) {
      var responsive = postDate.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...postDate.styles,
        padding: responsive
      };
      setAttributes({
        postDate: { ...postDate,
          styles: styles
        }
      });
      blockCssY.items[postDateSelector] = blockCssY.items[postDateSelector] != undefined ? blockCssY.items[postDateSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[postDateSelector]['padding-top'] != undefined ? blockCssY.items[postDateSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[postDateSelector]['padding-right'] != undefined ? blockCssY.items[postDateSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[postDateSelector]['padding-bottom'] != undefined ? blockCssY.items[postDateSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[postDateSelector]['padding-left'] != undefined ? blockCssY.items[postDateSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControl(nextValues) {
      var responsive = postDate.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...postDate.styles,
        margin: responsive
      };
      setAttributes({
        postDate: { ...postDate,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[postDateSelector] = blockCssY.items[postDateSelector] != undefined ? blockCssY.items[postDateSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[postDateSelector]['margin-top'] != undefined ? blockCssY.items[postDateSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[postDateSelector]['margin-right'] !== undefined ? blockCssY.items[postDateSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[postDateSelector]['margin-bottom'] !== undefined ? blockCssY.items[postDateSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[postDateSelector]['margin-left'] !== undefined ? blockCssY.items[postDateSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
    }, [postDate]);

    var linkAttrObj = () => {
      var sdsd = {};
      postDate.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = postDate.options.customUrl != undefined && postDate.options.customUrl.length > 0 ? postDate.options.customUrl : currentPostUrl;
    const CustomTag = `${wrapper.options.tag}`;
    const CustomTagPostTitle = `${postDate.options.tag}`;

    function onChangeTypo(typoX) {
      setAttributes({
        postDate: { ...postDate,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[postDateSelector] != undefined ? blockCssY.items[postDateSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[postDateSelector]['line-height'] != undefined ? blockCssY.items[postDateSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[postDateSelector]['letter-spacing'] != undefined ? blockCssY.items[postDateSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: {
            options: wrapper.options,
            styles: styles
          }
        });
        blockCssY.items[postDateWrapperSelector] = { ...blockCssY.items[postDateWrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: {
            styles: wrapper.styles,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_19__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[postDateWrapperSelector] = { ...blockCssY.items[postDateWrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Post Date",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Date Format"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_17__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: dateFormats,
      buttonTitle: "Choose",
      onChange: (option, index) => {
        var options = { ...postDate.options,
          dateFormat: option.value
        };
        setAttributes({
          postDate: { ...postDate,
            options: options
          }
        });
      },
      values: ''
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Format"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: postDate.options.dateFormat,
      onChange: newVal => {
        var options = { ...postDate.options,
          dateFormat: newVal
        };
        setAttributes({
          postDate: { ...postDate,
            options: options
          }
        });
      }
    })), dateFormats[postDate.options.dateFormat] != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2 my-3 bg-gray-500 text-white"
    }, dateFormats[postDate.options.dateFormat].label), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: postDate.options.linkTo,
      options: [{
        label: 'No Link',
        value: ''
      }, {
        label: 'Post URL',
        value: 'postUrl'
      }, {
        label: 'Custom Field',
        value: 'customField'
      }, {
        label: 'Author URL',
        value: 'authorUrl'
      }, {
        label: 'Author Link',
        value: 'authorLink'
      }, {
        label: 'Home URL',
        value: 'homeUrl'
      }, {
        label: 'Custom',
        value: 'custom'
      }],
      onChange: newVal => {
        var options = { ...postDate.options,
          linkTo: newVal
        };
        setAttributes({
          postDate: { ...postDate,
            options: options
          }
        });
      }
    })), postDate.options.linkTo == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: postDate.options.linkToMetaKey,
      onChange: newVal => {
        var options = { ...postDate.options,
          linkToMetaKey: newVal
        };
        setAttributes({
          postDate: { ...postDate,
            options: options
          }
        });
      }
    })), postDate.options.customUrl.length > 0 && postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_10__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postpostDate&utm_campaign=pluginPostGrid&utm_medium=postpostDate-customUrl"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Custom URL"), " feature only avilable in pro version")), postDate.options.linkTo == 'custom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerPosttitle ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"],
      onClick: ev => {
        setLinkPickerPosttitle(prev => !prev);
      }
    }), postDate.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"],
      onClick: ev => {
        var options = { ...postDate.options,
          customUrl: ''
        };
        setAttributes({
          postDate: { ...postDate,
            options: options
          }
        });
        setLinkPickerPosttitle(false);
      }
    }), linkPickerPosttitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.__experimentalLinkControl, {
      settings: [],
      value: postDate.options.customUrl,
      onChange: newVal => {
        var options = { ...postDate.options,
          customUrl: newVal.url
        };
        setAttributes({
          postDate: { ...postDate,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", postDate.options.customUrl.length != 0 ? postDate.options.customUrl : 'No link', " ")))), postDate.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: postDate.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...postDate.options,
          tag: newVal
        };
        setAttributes({
          postDate: { ...postDate,
            options: options
          }
        });
      }
    })), postDate.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: postDate.options.linkTarget,
      options: [{
        label: 'Choose...',
        value: ''
      }, {
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...postDate.options,
          linkTarget: newVal
        };
        setAttributes({
          postDate: { ...postDate,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = postDate.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...postDate.options,
          linkAttr: sdsd
        };
        setAttributes({
          postDate: { ...postDate,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), postDate.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: postDate.options.linkAttr[i].id,
        onChange: newVal => {
          postDate.options.linkAttr[i].id = newVal;
          var ssdsd = postDate.options.linkAttr.concat([]);
          var options = { ...postDate.options,
            linkAttr: ssdsd
          };
          setAttributes({
            postDate: { ...postDate,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          postDate.options.linkAttr[i].val = newVal;
          var ssdsd = postDate.options.linkAttr.concat([]);
          var options = { ...postDate.options,
            linkAttr: ssdsd
          };
          setAttributes({
            postDate: { ...postDate,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          postDate.options.linkAttr.splice(i, 1);
          var ssdsd = postDate.options.linkAttr.concat([]);
          var options = { ...postDate.options,
            linkAttr: ssdsd
          };
          setAttributes({
            postDate: { ...postDate,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: postDate.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postDate.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postDate.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postDate.styles,
          color: newValuesObj
        };
        setAttributes({
          postDate: { ...postDate,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: postDate.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postDate.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postDate.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postDate.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          postDate: { ...postDate,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[postDateSelector] = { ...blockCssY.items[postDateSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: postDate.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: postDate
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: postDate.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }, {
        label: 'none',
        value: 'none'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postDate.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postDate.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postDate.styles,
          display: newValuesObj
        };
        setAttributes({
          postDate: { ...postDate,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[postDateSelector] == undefined) {
          newValuesObjX[postDateSelector] = { ...blockCssY.items[postDateSelector],
            display: newValuesObj
          };
        } else {
          newValuesObjX[postDateSelector] = { ...blockCssY.items[postDateSelector],
            display: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: postDate.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: postDate.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_18__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Post Date',
        value: 'beforePostDate'
      }, {
        label: 'After Post Date',
        value: 'afterPostDate'
      }, {
        label: 'Before Prefix',
        value: 'beforePrefix'
      }, {
        label: 'After Prefix',
        value: 'afterPrefix'
      }, {
        label: 'Before Postfix',
        value: 'beforePostfix'
      }, {
        label: 'After Postfix',
        value: 'afterPostfix'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_16__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Prefix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: prefix.options.text,
      onChange: newVal => {
        var options = { ...prefix.options,
          text: newVal
        };
        setAttributes({
          prefix: {
            styles: prefix.styles,
            options: options
          }
        }); // setAttributes({ prefix: { text: newVal, class: prefix.options.class, color: prefix.color, bgColor: prefix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Postfix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: postfix.options.text,
      onChange: newVal => {
        var options = { ...postfix.options,
          text: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            options: options
          }
        }); // setAttributes({ postfix: { text: newVal, class: prefix.options.class, color: postfix.color, bgColor: postfix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDateWrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title link"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDateSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDatePrefixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postDatePostfixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_13__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_14__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId]
    }, icon.options.position == 'beforePrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'afterPrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postDate.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "postDate",
      onClick: handleLinkClick
    }, linkAttrItems, {
      target: postDate.options.linkTarget,
      href: postUrl
    }), icon.options.position == 'beforePostDate' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postDateEdited, icon.options.position == 'afterPostDate' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), postDate.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforePostDate' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postDateEdited, icon.options.position == 'afterPostDate' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text), icon.options.position == 'afterPostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), wrapper.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postDate.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "postDate",
      onClick: handleLinkClick
    }, linkAttrItems, {
      target: postDate.options.linkTarget,
      href: postUrl
    }), "A", icon.options.position == 'beforePostDate' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postDateEdited, icon.options.position == 'afterPostDate' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), postDate.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, icon.options.position == 'beforePostDate' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postDateEdited, icon.options.position == 'afterPostDate' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }))))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-excerpt/index.js":
/*!******************************************!*\
  !*** ./src/blocks/post-excerpt/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/hooks */ "@wordpress/hooks");
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_hooks__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");















const {
  RawHTML
} = wp.element;











var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/post-excerpt", {
  title: "Post Excerpt",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M29 218C29 215.239 31.2386 213 34 213H474C476.761 213 479 215.239 479 218V268C479 270.761 476.761 273 474 273H34C31.2386 273 29 270.761 29 268V218Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M29 109C29 106.239 31.2386 104 34 104H474C476.761 104 479 106.239 479 109V159C479 161.761 476.761 164 474 164H34C31.2386 164 29 161.761 29 159V109Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M29 327C29 324.239 31.2386 322 34 322H378C380.761 322 383 324.239 383 327V377C383 379.761 380.761 382 378 382H34C31.2386 382 29 379.761 29 377V327Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {
            "Desktop": "block"
          }
        }
      }
    },
    postExcerpt: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          text: '',
          limitBy: 'word',

          /*word, character*/
          limitCount: 99,
          excerptSource: 'auto',

          /*excerpt, content, auto, meta*/
          excerptSourceMeta: '',
          removeBlocks: true,
          removeShortcodes: true,
          keepHtml: false,
          removeEmbeds: true,
          autoP: false,
          isLink: false,
          linkTarget: '_blank',
          customUrl: '',
          linkAttr: [],
          class: 'excerpt-text'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {
            "Desktop": "inline-block"
          },
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {
            "Desktop": "25"
          },
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    readMore: {
      type: 'object',
      default: {
        options: {
          text: 'Read More',
          isLink: true,
          linkTarget: '_blank',
          customUrl: '',
          linkAttr: [],
          class: ''
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {
            "Desktop": "inline-block"
          },
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {
            "Desktop": "25"
          },
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    prefix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    postfix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'postfix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    linkAttr: {
      "type": "array",
      "default": []
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var postExcerpt = attributes.postExcerpt;
    var wrapper = attributes.wrapper;
    var readMore = attributes.readMore;
    var linkAttr = attributes.linkAttr;
    var prefix = attributes.prefix;
    var postfix = attributes.postfix;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [isLoading, setisLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(window.PostGridPluginData);
    const [currentPostExcerpt, setCurrentpostExcerpt] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'excerpt', postId);
    const [currentPostContent, setCurrentpostContent] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'content', postId);
    const [customFields, setCustomFields] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'link', postId);
    var linkToArgsBasic = {
      postUrl: {
        label: 'Post URL',
        value: 'postUrl'
      },
      homeUrl: {
        label: 'Home URL',
        value: 'homeUrl'
      },
      authorUrl: {
        label: 'Author URL',
        value: 'authorUrl'
      },
      authorLink: {
        label: 'Author Link',
        value: 'authorLink'
      },
      authorMail: {
        label: 'Author Mail',
        value: 'authorMail',
        isPro: true
      },
      authorMeta: {
        label: 'Author Meta',
        value: 'authorMeta',
        isPro: true
      },
      customField: {
        label: 'Custom Field',
        value: 'customField',
        isPro: true
      },
      customUrl: {
        label: 'Custom URL',
        value: 'customUrl',
        isPro: true
      }
    };
    let linkToArgs = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_6__.applyFilters)('linkToArgs', linkToArgsBasic);
    var limitByArgsBasic = {
      none: {
        label: 'Choose..',
        value: ''
      },
      word: {
        label: 'Word',
        value: 'word'
      },
      character: {
        label: 'Character',
        value: 'character',
        isPro: true
      }
    };
    let limitByArgs = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_6__.applyFilters)('limitByArgs', limitByArgsBasic);
    var excerptSourceArgsBasic = {
      auto: {
        label: 'Auto',
        value: 'auto'
      },
      excerpt: {
        label: 'Excerpt',
        value: 'excerpt'
      },
      content: {
        label: 'Content',
        value: 'content'
      },
      meta: {
        label: 'Custom Fields',
        value: 'meta',
        isPro: true
      }
    };
    let excerptSourceArgs = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_6__.applyFilters)('excerptSourceArgs', excerptSourceArgsBasic);

    function setFieldLinkTo(option, index) {
      var options = { ...postExcerpt.options,
        linkTo: option.value
      };
      setAttributes({
        postExcerpt: { ...postExcerpt,
          options: options
        }
      });
    }

    function setLimitBy(option, index) {
      var options = { ...postExcerpt.options,
        limitBy: option.value
      };
      setAttributes({
        postExcerpt: { ...postExcerpt,
          options: options
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setPostGridData(window.PostGridPluginData);
    }, [window.PostGridPluginData]); // Wrapper CSS Class Selectors

    const excerptWrapperSelector = blockClass;
    var excerptSelector = '';
    const redmoreSelector = blockClass + ' .readmore';
    const prefixSelector = blockClass + ' .prefix';
    const postfixSelector = blockClass + ' .postfix';

    if (wrapper.options.tag.length != 0) {
      if (postExcerpt.options.isLink) {
        excerptSelector = blockClass + ' .excerpt-text';
      } else {
        if (postExcerpt.options.tag.length > 0) {
          excerptSelector = blockClass + ' .excerpt-text';
        } else {
          excerptSelector = blockClass;
        }
      }
    } else {
      excerptSelector = blockClass;
    }

    function getMetaField(metaKey) {
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_8___default()({
        path: '/post-grid/v2/get_post_meta',
        method: 'POST',
        data: {
          postId: postId,
          meta_key: metaKey
        }
      }).then(res => {
        if (res['meta_value'] != undefined && res['meta_value'].length > 0) {
          customFields[metaKey] = res['meta_value'];
          setCustomFields({});
          setCustomFields(customFields);
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var excerptSource = postExcerpt.options.excerptSource;
      var excerptSourceMeta = postExcerpt.options.excerptSourceMeta;

      if (excerptSource == 'meta' && excerptSourceMeta.length > 0) {
        var response = getMetaField(excerptSourceMeta);
      }
    }, [postExcerpt]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    const [postExcerptEdited, setPostExcerptEdited] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(currentPostExcerpt); //const [postContentEdited, setPostContentEdited] = useState(currentPostContent);

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      //setisLoading(true);
      var excerptSource = postExcerpt.options.excerptSource;
      var excerptText = '';

      if (excerptSource == 'auto') {
        excerptText = currentPostExcerpt != undefined && currentPostExcerpt.length > 0 ? currentPostExcerpt : '';
      } else if (excerptSource == 'excerpt') {
        excerptText = currentPostExcerpt;
      } else if (excerptSource == 'content') {
        excerptText = '';
      } else if (excerptSource == 'meta') {
        var excerptSourceMeta = postExcerpt.options.excerptSourceMeta;
        setTimeout(() => {
          excerptText = customFields[excerptSourceMeta] ? customFields[excerptSourceMeta] : '';
        }, 100);
      }

      excerptText = excerptText.length > 0 ? excerptText : 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book';

      if (!postExcerpt.options.keepHtml) {
        excerptText = excerptText.replace(/<[^>]*>?/gm, '');
      }

      setTimeout(() => {
        var count = postExcerpt.options.limitCount > 0 ? postExcerpt.options.limitCount : 999;

        if (postExcerpt.options.limitBy == 'character') {
          setPostExcerptEdited(excerptText.substring(0, count));
        } else {
          setPostExcerptEdited(excerptText.split(" ").splice(0, count).join(" "));
        } //setisLoading(false);

      }, 100);
    }, [postExcerpt, currentPostExcerpt]);
    const [linkPickerExcerpt, setLinkPickerExcerpt] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [linkPickerReadmore, setLinkPickerReadmore] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // var itemsX = { ...blockCssY.items }
      // itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector], 'font-weight': readMore.typo.fontWeight };
      // setAttributes({ blockCssY: { items: itemsX } });

      generateBlockCssY();
    }, [clientId]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function onChangeExcerptTypo(typoX) {
      setAttributes({
        postExcerpt: { ...postExcerpt,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontFamily[breakPointX] != undefined) {
        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'font-family': typoX.fontFamily
        };
      } else {
        //typoX.fontFamily[breakPointX] = {};
        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[excerptSelector]['font-size'] != undefined ? blockCssY.items[excerptSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector], 'font-size': fontSizeX };

        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[excerptSelector]['line-height'] != undefined ? blockCssY.items[excerptSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector], 'line-height': lineHeightX };

        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[excerptSelector]['letter-spacing'] != undefined ? blockCssY.items[excerptSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit; //blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector], 'letter-spacing': letterSpacingX };

        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'text-transform': typoX.textTransform
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function onChangeReadmoreTypo(typoX) {
      setAttributes({
        readMore: { ...readMore,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontFamily[breakPointX] != undefined) {
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'font-family': typoX.fontFamily
        };
      } else {
        //typoX.fontFamily[breakPointX] = {};
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[redmoreSelector]['font-size'] != undefined ? blockCssY.items[redmoreSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector], 'font-size': fontSizeX };

        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[redmoreSelector]['line-height'] != undefined ? blockCssY.items[redmoreSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector], 'line-height': lineHeightX };

        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[redmoreSelector]['letter-spacing'] != undefined ? blockCssY.items[redmoreSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit; //blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector], 'letter-spacing': letterSpacingX };

        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'text-transform': typoX.textTransform
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControl(nextValues) {
      var responsive = postExcerpt.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...postExcerpt.styles,
        padding: responsive
      };
      setAttributes({
        postExcerpt: { ...postExcerpt,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[excerptSelector] = blockCssY.items[excerptSelector] != undefined ? blockCssY.items[excerptSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[excerptSelector]['padding-top'] != undefined ? blockCssY.items[excerptSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'padding-top': paddingTop
        }; //itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[excerptSelector]['padding-right'] != undefined ? blockCssY.items[excerptSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'padding-right': paddingRight
        }; //itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[excerptSelector]['padding-bottom'] != undefined ? blockCssY.items[excerptSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[excerptSelector]['padding-left'] != undefined ? blockCssY.items[excerptSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'padding-left': paddingLeft
        }; //itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function paddingControlReadmore(nextValues) {
      var responsive = readMore.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...readMore.styles,
        padding: responsive
      };
      setAttributes({
        readMore: { ...readMore,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[redmoreSelector] = blockCssY.items[redmoreSelector] != undefined ? blockCssY.items[redmoreSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[redmoreSelector]['padding-top'] != undefined ? blockCssY.items[redmoreSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[redmoreSelector]['padding-right'] != undefined ? blockCssY.items[redmoreSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[redmoreSelector]['padding-bottom'] != undefined ? blockCssY.items[redmoreSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[redmoreSelector]['padding-left'] != undefined ? blockCssY.items[redmoreSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControl(nextValues) {
      var responsive = postExcerpt.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...postExcerpt.styles,
        margin: responsive
      };
      setAttributes({
        postExcerpt: { ...postExcerpt,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[excerptSelector] = blockCssY.items[excerptSelector] != undefined ? blockCssY.items[excerptSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[excerptSelector]['margin-top'] != undefined ? blockCssY.items[excerptSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'margin-top': marginTop
        }; //itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[excerptSelector]['margin-right'] !== undefined ? blockCssY.items[excerptSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'margin-right': marginRight
        }; //itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[excerptSelector]['margin-bottom'] !== undefined ? blockCssY.items[excerptSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'margin-bottom': marginBottom
        }; //itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[excerptSelector]['margin-left'] !== undefined ? blockCssY.items[excerptSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'margin-left': marginLeft
        }; //itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControlReadmore(nextValues) {
      var responsive = readMore.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...readMore.styles,
        margin: responsive
      };
      setAttributes({
        readMore: { ...readMore,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[redmoreSelector] = blockCssY.items[redmoreSelector] != undefined ? blockCssY.items[redmoreSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[redmoreSelector]['margin-top'] != undefined ? blockCssY.items[redmoreSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[redmoreSelector]['margin-right'] !== undefined ? blockCssY.items[redmoreSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[redmoreSelector]['margin-bottom'] !== undefined ? blockCssY.items[redmoreSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[redmoreSelector]['margin-left'] !== undefined ? blockCssY.items[redmoreSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    var [linkAttrItemsReadmore, setlinkAttrItemsReadmore] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var sdsd = {};
      postExcerpt.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    }, [postExcerpt]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var sdsd = {};
      readMore.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItemsReadmore(sdsd);
    }, [readMore]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = postExcerpt.options.customUrl != undefined && postExcerpt.options.customUrl.length > 0 ? postExcerpt.options.customUrl : currentPostUrl;
    const CustomTagX = `${wrapper.options.tag}`;
    const CustomTagExcerpt = `${postExcerpt.options.tag}`;

    const MyDropdown = () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
          title: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].name : '',
          variant: "secondary",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, {
          className: "text-lg "
        }, _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon : '<span class="icon-responsive font-bold"></span>'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, breakPointList.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: ' text-lg font-bold border-b inline-block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            setPreviewDeviceType(x.value);
            var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
            asdsdsd.then(res => {
              setBreakPointX(res.breakpoint);
              generateBlockCssY();
            });
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          class: "icon-close"
        })), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, x.icon));
      }))
    }));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__.AlignmentToolbar, {
      value: wrapper.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: {
            options: wrapper.options,
            styles: styles
          }
        });
        blockCssY.items[excerptWrapperSelector] = { ...blockCssY.items[excerptWrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_20__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[excerptWrapperSelector] = { ...blockCssY.items[excerptWrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Post Excerpt",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      label: "Linked with post?",
      help: postExcerpt.options.isLink ? 'Linked with post URL' : 'Not linked to post URL.',
      checked: postExcerpt.options.isLink ? true : false,
      onChange: e => {
        var options = { ...postExcerpt.options,
          isLink: postExcerpt.options.isLink ? false : true
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    }), !postExcerpt.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: postExcerpt.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...postExcerpt.options,
          tag: newVal
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    })), postExcerpt.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: postExcerpt.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...postExcerpt.options,
          linkTarget: newVal
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Url"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      className: linkPickerExcerpt ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"],
      onClick: ev => {
        setLinkPickerExcerpt(prev => !prev);
      }
    }), postExcerpt.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__["default"],
      onClick: ev => {
        var options = { ...postExcerpt.options,
          customUrl: ''
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    }), linkPickerExcerpt && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__.__experimentalLinkControl, {
      settings: [],
      value: postExcerpt.options.customUrl,
      onChange: newVal => {
        var options = { ...postExcerpt.options,
          customUrl: newVal.url
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        }); //setLinkPickerpostExcerpt(false)
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", postExcerpt.options.customUrl.length != 0 ? postExcerpt.options.customUrl : 'No link', " ")))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = postExcerpt.options.linkAttr != undefined ? postExcerpt.options.linkAttr.concat({
          id: '',
          val: ''
        }) : [];
        var options = { ...postExcerpt.options,
          linkAttr: sdsd
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    }, "Add")), postExcerpt.options.linkAttr != undefined && postExcerpt.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: postExcerpt.options.linkAttr[i].id,
        onChange: newVal => {
          postExcerpt.options.linkAttr[i].id = newVal;
          var ssdsd = postExcerpt.options.linkAttr.concat([]);
          var options = { ...postExcerpt.options,
            linkAttr: ssdsd
          };
          setAttributes({
            postExcerpt: { ...postExcerpt,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          postExcerpt.options.linkAttr[i].val = newVal;
          var ssdsd = postExcerpt.options.linkAttr.concat([]);
          var options = { ...postExcerpt.options,
            linkAttr: ssdsd
          };
          setAttributes({
            postExcerpt: { ...postExcerpt,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          postExcerpt.options.linkAttr.splice(i, 1);
          var ssdsd = postExcerpt.options.linkAttr.concat([]);
          var options = { ...postExcerpt.options,
            linkAttr: ssdsd
          };
          setAttributes({
            postExcerpt: { ...postExcerpt,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Limit By"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_18__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: limitByArgs,
      buttonTitle: "Choose",
      onChange: setLimitBy,
      values: []
    })), postExcerpt.options.limitBy.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-500 my-3 text-white p-2"
    }, limitByArgs[postExcerpt.options.limitBy].label), (postExcerpt.options.limitBy == 'word' || postExcerpt.options.limitBy == 'character') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Limit Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: postExcerpt.options.limitCount,
      onChange: newVal => {
        var options = { ...postExcerpt.options,
          limitCount: newVal
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Excerpt Source"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_18__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: postExcerpt.options.excerptSource.length == 0 ? 'Choose' : postExcerpt.options.excerptSource,
      options: excerptSourceArgs,
      onChange: (option, index) => {
        var options = { ...postExcerpt.options,
          excerptSource: option.value
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      },
      values: ""
    })), postExcerpt.options.excerptSource == 'excerpt' && currentPostExcerpt.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "text-red-500"
    }, "Post Excerpt is empty."), postExcerpt.options.excerptSource == 'meta' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Meta Field"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: postExcerpt.options.excerptSourceMeta,
      options: [{
        label: 'Custom',
        value: ''
      }, {
        label: 'Yoast meta',
        value: '_yoast_wpseo_metadesc'
      }, {
        label: 'Rank Math meta',
        value: 'rank_math_description'
      }, {
        label: 'AIO SEO meta',
        value: '_aioseo_og_description'
      }, {
        label: 'SEOPress meta',
        value: '_seopress_titles_desc'
      }, {
        label: 'WP Meta SEO meta',
        value: '_metaseo_metadesc'
      }, {
        label: 'The SEO Framework meta',
        value: '_genesis_description'
      }, {
        label: 'SEO SIMPLE PACK meta',
        value: 'ssp_meta_description'
      }],
      onChange: newVal => {
        var options = { ...postExcerpt.options,
          excerptSourceMeta: newVal
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Meta Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: postExcerpt.options.excerptSourceMeta,
      onChange: newVal => {
        var options = { ...postExcerpt.options,
          excerptSourceMeta: newVal
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      className: "my-4",
      label: "Remove Blocks?",
      help: postExcerpt.options.removeBlocks ? 'Blocks will be removed' : 'Blocks may output with excerpt.',
      checked: postExcerpt.options.removeBlocks ? true : false,
      onChange: e => {
        var options = { ...postExcerpt.options,
          removeBlocks: postExcerpt.options.removeBlocks ? false : true
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      className: "my-4",
      label: "Remove Shortcodes?",
      help: postExcerpt.options.removeShortcodes ? 'Shortcodes will be removed' : 'Shortcodes may output with excerpt.',
      checked: postExcerpt.options.removeShortcodes ? true : false,
      onChange: e => {
        var options = { ...postExcerpt.options,
          removeShortcodes: postExcerpt.options.removeShortcodes ? false : true
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      className: "my-4",
      label: "Keep HTML?",
      help: postExcerpt.options.keepHtml ? 'HTML may output with excerpt.' : 'HTML will be removed',
      checked: postExcerpt.options.keepHtml ? true : false,
      onChange: e => {
        var options = { ...postExcerpt.options,
          keepHtml: postExcerpt.options.keepHtml ? false : true
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    }), postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_17__["default"], {
      utmUrl: "?utm_source=dashboard&utm_term=postExcerptBlock&utm_campaign=pluginPostGrid&utm_medium=postTitleBlock-keepHtml"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Keep HTML"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      className: "my-4",
      label: "Enable wpautop()?",
      help: postExcerpt.options.autoP ? 'wpautop function will be applied' : 'wpautop function will not be applied.',
      checked: postExcerpt.options.autoP ? true : false,
      onChange: e => {
        var options = { ...postExcerpt.options,
          autoP: postExcerpt.options.autoP ? false : true
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: postExcerpt.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_19__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postExcerpt.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postExcerpt.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postExcerpt.styles,
          color: newValuesObj
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: postExcerpt.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_19__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postExcerpt.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postExcerpt.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postExcerpt.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: postExcerpt.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postExcerpt.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postExcerpt.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postExcerpt.styles,
          display: newValuesObj
        };
        setAttributes({
          postExcerpt: { ...postExcerpt,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[excerptSelector] = { ...blockCssY.items[excerptSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_13__["default"], {
      typo: postExcerpt.styles,
      breakPointX: breakPointX,
      onChange: onChangeExcerptTypo,
      setAttributes: setAttributes,
      obj: postExcerpt
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: postExcerpt.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: postExcerpt.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Read More",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Read More Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: readMore.options.text,
      onChange: newVal => {
        var options = { ...readMore.options,
          text: newVal
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      label: "Linked with post?",
      help: readMore.options.isLink ? 'Linked with post URL' : 'Not linked to post URL.',
      checked: readMore.options.isLink ? true : false,
      onChange: e => {
        var options = { ...readMore.options,
          isLink: readMore.options.isLink ? false : true
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    }), readMore.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: readMore.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...readMore.options,
          linkTarget: newVal
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Url"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      className: linkPickerReadmore ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"],
      onClick: ev => {
        setLinkPickerReadmore(prev => !prev);
      }
    }), readMore.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__["default"],
      onClick: ev => {
        var options = { ...readMore.options,
          customUrl: ''
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    }), linkPickerReadmore && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_9__.__experimentalLinkControl, {
      settings: [],
      value: readMore.options.customUrl,
      onChange: newVal => {
        var options = { ...readMore.options,
          customUrl: newVal.url
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        }); //setLinkPickerReadmore(false)
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", readMore.options.customUrl.length != 0 ? readMore.options.customUrl : 'No link', " ")))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = readMore.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...readMore.options,
          linkAttr: sdsd
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    }, "Add")), readMore.options.linkAttr != undefined && readMore.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: readMore.options.linkAttr[i].id,
        onChange: newVal => {
          readMore.options.linkAttr[i].id = newVal;
          var ssdsd = readMore.options.linkAttr.concat([]);
          var options = { ...readMore.options,
            linkAttr: ssdsd
          };
          setAttributes({
            readMore: { ...readMore,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          readMore.options.linkAttr[i].val = newVal;
          var ssdsd = readMore.options.linkAttr.concat([]);
          var options = { ...readMore.options,
            linkAttr: ssdsd
          };
          setAttributes({
            readMore: { ...readMore,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          readMore.options.linkAttr.splice(i, 1);
          var ssdsd = readMore.options.linkAttr.concat([]);
          var options = { ...readMore.options,
            linkAttr: ssdsd
          };
          setAttributes({
            readMore: { ...readMore,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: readMore.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_19__["default"],
      enableAlpha: true,
      onChange: newVal => {
        // var responsive = readMore.styles.color;
        // responsive[breakPointX] = newVal;
        // var styles = { ...readMore.styles, color: responsive };
        // setAttributes({ readMore: { ...readMore, styles: styles } });
        var newValuesObj = {};

        if (Object.keys(readMore.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = readMore.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...readMore.styles,
          color: newValuesObj
        };
        setAttributes({
          readMore: { ...readMore,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: readMore.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_19__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(readMore.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = readMore.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...readMore.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          readMore: { ...readMore,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: readMore.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(readMore.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = readMore.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...readMore.styles,
          display: newValuesObj
        };
        setAttributes({
          readMore: { ...readMore,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: readMore.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlReadmore(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: readMore.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlReadmore(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_10__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_13__["default"], {
      typo: readMore.styles,
      breakPointX: breakPointX,
      onChange: onChangeReadmoreTypo,
      setAttributes: setAttributes,
      obj: readMore
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Prefix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: prefix.options.text,
      onChange: newVal => {
        var options = { ...prefix.options,
          text: newVal
        };
        setAttributes({
          prefix: { ...prefix,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Postfix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: postfix.options.text,
      onChange: newVal => {
        var options = { ...postfix.options,
          text: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Excerpt Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, excerptWrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Excerpt - With Link"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, excerptSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Read More"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, redmoreSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Prefix Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, prefixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Postfix Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postfixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_15__["default"], {
      utm: {
        utm_source: 'BlockPostExcerpt',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, isLoading && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Spinner, null), wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTagX, {
      className: [blockId]
    }, postExcerpt.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: postExcerpt.options.class,
      onClick: handleLinkClick
    }, linkAttrItems, {
      href: postUrl
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, postExcerptEdited), !postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postExcerptEdited), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text)), !postExcerpt.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postExcerpt.options.tag.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTagExcerpt, {
      className: postExcerpt.options.class
    }, prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, postExcerptEdited), !postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postExcerptEdited), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text)), postExcerpt.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, postExcerptEdited), !postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postExcerptEdited), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text))), readMore.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "readmore",
      onClick: handleLinkClick
    }, linkAttrItemsReadmore, {
      target: readMore.options.linkTarget,
      href: postUrl
    }), " ", readMore.options.text)), wrapper.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postExcerpt.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: [blockId],
      onClick: handleLinkClick
    }, linkAttrItems, {
      href: postUrl,
      target: postExcerpt.options.linkTarget
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "prefix"
    }, prefix.options.text), postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, postExcerptEdited), !postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postExcerptEdited), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "postfix"
    }, postfix.options.text)), readMore.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "readmore",
      onClick: handleLinkClick
    }, linkAttrItemsReadmore, {
      target: readMore.options.linkTarget,
      href: postUrl
    }), " ", readMore.options.text))), wrapper.options.tag.length == 0 && !postExcerpt.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "prefix"
    }, prefix.options.text), postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, postExcerptEdited), !postExcerpt.options.keepHtml && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postExcerptEdited), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "postfix"
    }, postfix.options.text), readMore.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "readmore",
      onClick: handleLinkClick
    }, linkAttrItemsReadmore, {
      target: postExcerpt.options.linkTarget,
      href: postUrl
    }), " ", readMore.options.text)))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-featured-image/index.js":
/*!*************************************************!*\
  !*** ./src/blocks/post-featured-image/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/icon/index.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/close.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_toggle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/toggle */ "./src/components/toggle/index.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _placeholder_jpg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./placeholder.jpg */ "./src/blocks/post-featured-image/placeholder.jpg");














const {
  RawHTML
} = wp.element;














var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/post-featured-image", {
  title: "Featured Image",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M22 20.9738C22 21.5116 21.564 21.9476 21.0262 21.9476L2.97381 21.9476C2.43599 21.9476 2 21.5116 2 20.9738V20.9738C2 20.436 2.43599 20 2.97381 20L21.0262 20C21.564 20 22 20.436 22 20.9738V20.9738Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M20.125 3H3.875C2.83945 3 2 3.83945 2 4.875V16.125C2 17.1605 2.83945 18 3.875 18H20.125C21.1605 18 22 17.1605 22 16.125V4.875C22 3.83945 21.1605 3 20.125 3ZM19.8906 16.125H4.10938C4.04721 16.125 3.9876 16.1003 3.94365 16.0564C3.89969 16.0124 3.875 15.9528 3.875 15.8906V5.10938C3.875 5.04721 3.89969 4.9876 3.94365 4.94365C3.9876 4.89969 4.04721 4.875 4.10938 4.875H19.8906C19.9528 4.875 20.0124 4.89969 20.0564 4.94365C20.1003 4.9876 20.125 5.04721 20.125 5.10938V15.8906C20.125 15.9528 20.1003 16.0124 20.0564 16.0564C20.0124 16.1003 19.9528 16.125 19.8906 16.125V16.125ZM7 6.4375C6.13707 6.4375 5.4375 7.13707 5.4375 8C5.4375 8.86293 6.13707 9.5625 7 9.5625C7.86293 9.5625 8.5625 8.86293 8.5625 8C8.5625 7.13707 7.86293 6.4375 7 6.4375ZM5.75 14.25H18.25V11.125L14.8314 7.70645C14.6484 7.5234 14.3516 7.5234 14.1685 7.70645L9.5 12.375L7.95645 10.8314C7.7734 10.6484 7.4766 10.6484 7.29352 10.8314L5.75 12.375V14.25Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: '',
          useAsBackground: 'no'
        },
        styles: {
          textAlign: {},
          height: {},
          overflow: {},
          color: {},
          bgColor: {},
          bgImage: {},
          bgPosition: {},
          bgSize: {},
          display: {},
          padding: {},
          margin: {}
        }
      }
    },
    featuredImage: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          linkTo: '',
          // postUrl, customField, authorUrl, authorLink, homeUrl, custom
          customUrl: '',
          linkToMetaKey: '',
          altTextSrc: 'imgAltText',
          // imgAltText, imgTitle, imgCaption, imgDescription imgName, imgSlug, postTitle, excerpt, postSlug, customField, custom
          altTextCustom: '',
          altTextMetaKey: '',
          linkTarget: '_blank',
          linkAttr: [],
          class: '',
          size: {
            "Desktop": "full",
            "Tablet": "full",
            "Mobile": "full"
          }
        },
        styles: {
          textAlign: {},
          display: {},
          width: {
            "Desktop": {
              "val": "100",
              "unit": "%"
            }
          },
          height: {
            "Desktop": {
              "val": "",
              "unit": "auto"
            }
          },
          filter: {},
          objectFit: {},
          padding: {},
          margin: {}
        },
        hoverStyles: {
          filter: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    let featuredImage = attributes.featuredImage;
    var wrapper = attributes.wrapper;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var demoImg = 'src/blocks/post-featured-image/placeholder.jpg';
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [linkPickerPosttitle, setLinkPickerPosttitle] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(window.PostGridPluginData);
    const [postImage, setPostImage] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
    const [imageSizes, setImageSizes] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
    const [filterArgs, setfilterArgs] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([{
      label: 'Blur',
      isPro: false,
      value: 'blur',
      val: '',
      unit: 'px'
    }, {
      label: 'Brightness',
      isPro: false,
      value: 'brightness',
      val: '10',
      unit: '%'
    }, {
      label: 'Contrast',
      isPro: true,
      value: 'contrast',
      val: '10',
      unit: '%'
    }, {
      label: 'Grayscale',
      isPro: true,
      value: 'grayscale',
      val: '10',
      unit: '%'
    }, {
      label: 'Hue-rotate',
      isPro: true,
      value: 'hue-rotate',
      val: '10',
      unit: 'deg'
    }, {
      label: 'Invert',
      isPro: true,
      value: 'invert',
      val: '10',
      unit: '%'
    }, {
      label: 'Opacity',
      isPro: true,
      value: 'opacity',
      val: '10',
      unit: '%'
    }, {
      label: 'Saturate',
      isPro: true,
      value: 'saturate',
      val: '10',
      unit: '%'
    }, {
      label: 'Sepia',
      value: 'sepia',
      val: '10',
      unit: '%'
    }]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setPostGridData(window.PostGridPluginData);
    }, [window.PostGridPluginData]);
    const ALLOWED_MEDIA_TYPES = ['image'];
    const [currentPostImageId, setCurrentPostImageId] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'featured_media', postId);
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_10___default()({
        path: '/wp/v2/media/' + currentPostImageId,
        method: 'POST',
        data: {
          id: currentPostImageId
        }
      }).then(res => {
        setPostImage(res);
        var imgSizes = [];
        Object.keys(res.media_details.sizes).map(x => {
          var height = res.media_details.sizes[x].height;
          var width = res.media_details.sizes[x].width; //var crop = res[x].crop

          imgSizes.push({
            label: x + "(" + width + "*" + height + ")",
            value: x,
            height: height,
            width: width
          });
        });
        setImageSizes(imgSizes);
      }); // apiFetch({
      //   path: '/post-grid/v2/get_image_sizes',
      //   method: 'POST',
      //   data: {},
      // }).then((res) => {
      //   var imgSizes = [];
      //   Object.keys(res).map(x => {
      //     var height = res[x].height
      //     var width = res[x].width
      //     var crop = res[x].crop
      //     imgSizes.push({ label: x + "(" + width + "*" + height + ")", value: x, height: height, width: width, crop: crop });
      //   })
      //   imgSizes.push({ label: "Full(**)", value: 'full', height: '', width: '', crop: true });
      //   setImageSizes(imgSizes)
      // });
    }, [currentPostImageId]);

    function addfilterArgs(option, index) {
      var filterObj = {};

      if (featuredImage.styles.filter[breakPointX] != undefined) {
        featuredImage.styles.filter[breakPointX].push(option);
      } else {
        featuredImage.styles.filter[breakPointX] = [];
        featuredImage.styles.filter[breakPointX].push(option);
      }

      var styles = { ...featuredImage.styles,
        filter: featuredImage.styles.filter
      };
      setAttributes({
        featuredImage: { ...featuredImage,
          styles: styles
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var filterStr = {};
      filterStr[breakPointX] = '';
      featuredImage.styles.filter[breakPointX] != undefined && featuredImage.styles.filter[breakPointX].map(x => {
        filterStr[breakPointX] += x.value + '(' + x.val + x.unit + ') ';
      });
      blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
        'filter': filterStr
      };
      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }, [featuredImage]);

    function setFeaturedImageSize(option, index) {
      var newValuesObj = {};

      if (Object.keys(featuredImage.options.size).length == 0) {
        newValuesObj[breakPointX] = option.value;
      } else {
        newValuesObj = featuredImage.options.size;
        newValuesObj[breakPointX] = option.value;
      }

      var options = { ...featuredImage.options,
        size: newValuesObj
      };
      setAttributes({
        featuredImage: { ...featuredImage,
          options: options
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ featuredImage: featuredImage });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
      blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
        'width': {
          "Desktop": "100%"
        }
      };
      blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
        'height': {
          "Desktop": "auto"
        }
      };
      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }, [clientId]); // Wrapper CSS Class Selectors

    const wrapperSelector = blockClass;
    var linkSelector = '';

    if (wrapper.options.tag.length != 0) {
      if (featuredImage.options.linkTo.length > 0) {
        linkSelector = blockClass + ' a';
      } else {
        linkSelector = blockClass;
      }
    } else {
      linkSelector = blockClass;
    }

    var imgSelector = blockClass + ' img';
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    var BefroeTitle = function (_ref) {
      let {
        title,
        args
      } = _ref;
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "cursor-pointer hover:bg-red-500 hover:text-white px-1 py-1",
        onClick: ev => {
          featuredImage.styles.filter[breakPointX].splice(args.index, 1);
          var styles = featuredImage.styles;
          setAttributes({
            featuredImage: { ...featuredImage,
              styles: styles
            }
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__["default"]
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "mx-2"
      }, title));
    };

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function paddingControl(nextValues) {
      var responsive = featuredImage.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...featuredImage.styles,
        padding: responsive
      };
      setAttributes({
        featuredImage: { ...featuredImage,
          styles: styles
        }
      });
      blockCssY.items[linkSelector] = blockCssY.items[linkSelector] != undefined ? blockCssY.items[linkSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[linkSelector]['padding-top'] != undefined ? blockCssY.items[linkSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[linkSelector]['padding-right'] != undefined ? blockCssY.items[linkSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[linkSelector]['padding-bottom'] != undefined ? blockCssY.items[linkSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[linkSelector]['padding-left'] != undefined ? blockCssY.items[linkSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControl(nextValues) {
      var responsive = featuredImage.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...featuredImage.styles,
        margin: responsive
      };
      setAttributes({
        featuredImage: { ...featuredImage,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[linkSelector] = blockCssY.items[linkSelector] != undefined ? blockCssY.items[linkSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[linkSelector]['margin-top'] != undefined ? blockCssY.items[linkSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[linkSelector]['margin-right'] !== undefined ? blockCssY.items[linkSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[linkSelector]['margin-bottom'] !== undefined ? blockCssY.items[linkSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[linkSelector]['margin-left'] !== undefined ? blockCssY.items[linkSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[linkSelector] = { ...blockCssY.items[linkSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
    }, [featuredImage]);

    var linkAttrObj = () => {
      var sdsd = {};
      featuredImage.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = featuredImage.options.customUrl != undefined && featuredImage.options.customUrl.length > 0 ? featuredImage.options.customUrl : currentPostUrl;
    const CustomTag = `${wrapper.options.tag}`;
    const CustomTagPostTitle = `${featuredImage.options.tag}`;

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: {
            options: wrapper.options,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: {
            styles: wrapper.styles,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Image as Background"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.useAsBackground,
      options: [{
        label: 'No',
        value: 'no'
      }, {
        label: 'Yes',
        value: 'yes'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          useAsBackground: newVal
        };
        var styles = { ...wrapper.styles,
          bgImage: {}
        };

        if (newVal == 'no') {
          setAttributes({
            wrapper: { ...wrapper,
              options: options,
              styles: styles
            }
          });
          var itemsX = { ...blockCssY.items
          };
          itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
            'background-image': {}
          };
          setAttributes({
            blockCssY: {
              items: itemsX
            }
          });
        }

        if (newVal == 'yes') {
          var newValuesObj = {};

          if (Object.keys(wrapper.styles.bgImage).length == 0) {
            newValuesObj[breakPointX] = 'url("' + postImage.guid.rendered + '")';
          } else {
            newValuesObj = wrapper.styles.bgImage;
            newValuesObj[breakPointX] = 'url("' + postImage.guid.rendered + '")';
          }

          var styles = { ...wrapper.styles,
            bgImage: newValuesObj
          };
          setAttributes({
            wrapper: { ...wrapper,
              styles: styles,
              options: options
            }
          });
          var itemsX = { ...blockCssY.items
          };
          itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
            'background-image': newValuesObj
          }; //setAttributes({ blockCssY: { items: itemsX } });
        }
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Height"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: wrapper.styles.height[breakPointX] != undefined ? wrapper.styles.height[breakPointX].val : 10,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'em'
          };
        } else {
          newValuesObj = wrapper.styles.height;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'em';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...wrapper.styles,
          height: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 10;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'em';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};
        heightX[breakPointX] = heightVal + heightUnit;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.height[breakPointX] != undefined ? wrapper.styles.height[breakPointX].unit : 'em',
      options: [{
        label: 'fr',
        value: 'fr'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: 10,
            unit: newVal
          };
        } else {
          newValuesObj = wrapper.styles.height;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 10;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...wrapper.styles,
          height: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 10;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'em';
        var heightX = blockCssY.items[wrapperSelector] != undefined ? blockCssY.items[wrapperSelector] : {};
        heightX[breakPointX] = heightVal + heightUnit;
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Overflow "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.overflow[breakPointX] != undefined ? wrapper.styles.overflow[breakPointX] : 'hidden',
      options: [{
        label: 'scroll',
        value: 'scroll'
      }, {
        label: 'hidden',
        value: 'hidden'
      }, {
        label: 'auto',
        value: 'auto'
      }, {
        label: 'clip',
        value: 'clip'
      }, {
        label: 'visible',
        value: 'visible'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.overflow).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.overflow;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          overflow: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'overflow': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Position "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.bgPosition[breakPointX] != undefined ? wrapper.styles.bgPosition[breakPointX] : 'hidden',
      options: [{
        label: 'left top',
        value: 'left top'
      }, {
        label: 'left center',
        value: 'left center'
      }, {
        label: 'left bottom',
        value: 'left bottom'
      }, {
        label: 'right top',
        value: 'right top'
      }, {
        label: 'right center',
        value: 'right center'
      }, {
        label: 'right bottom',
        value: 'right bottom'
      }, {
        label: 'center top',
        value: 'center top'
      }, {
        label: 'center center',
        value: 'center center'
      }, {
        label: 'center bottom',
        value: 'center bottom'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bgPosition).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.bgPosition;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          bgPosition: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'background-position': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Size "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: wrapper.styles.bgSize[breakPointX] != undefined ? wrapper.styles.bgSize[breakPointX] : 'hidden',
      options: [{
        label: 'auto',
        value: 'auto'
      }, {
        label: 'cover',
        value: 'cover'
      }, {
        label: 'contain',
        value: 'contain'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.bgSize).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.bgSize;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          bgSize: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'background-size': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_19__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Featured Image",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Thumbnail Size"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: imageSizes,
      buttonTitle: "Choose",
      onChange: setFeaturedImageSize,
      values: featuredImage.options.size[breakPointX]
    })), featuredImage.options.size[breakPointX] != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-400 text-white px-3 py-2 my-3"
    }, " ", featuredImage.options.size[breakPointX]), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: featuredImage.options.linkTo.length == 0 ? 'Choose' : featuredImage.options.linkTo,
      options: [{
        label: 'No Link',
        value: ''
      }, {
        label: 'Post URL',
        value: 'postUrl'
      }, {
        label: 'Custom Field',
        value: 'customField'
      }, {
        label: 'Author URL',
        value: 'authorUrl'
      }, {
        label: 'Author Link',
        value: 'authorLink'
      }, {
        label: 'Home URL',
        value: 'homeUrl'
      }, {
        label: 'Custom',
        value: 'custom'
      }],
      onChange: (option, index) => {
        var options = { ...featuredImage.options,
          linkTo: option.value
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
      },
      values: ""
    })), featuredImage.options.linkTo == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: featuredImage.options.linkToMetaKey,
      onChange: newVal => {
        var options = { ...featuredImage.options,
          linkToMetaKey: newVal
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
      }
    })), featuredImage.options.customUrl.length > 0 && postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_17__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postFeaturedImage&utm_campaign=pluginPostGrid&utm_medium=postFeaturedImage-customUrl"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Custom URL"), " feature only avilable in pro version")), featuredImage.options.linkTo == 'custom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerPosttitle ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_23__["default"],
      onClick: ev => {
        setLinkPickerPosttitle(prev => !prev);
      }
    }), featuredImage.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_24__["default"],
      onClick: ev => {
        var options = { ...featuredImage.options,
          customUrl: ''
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
        setLinkPickerPosttitle(false);
      }
    }), linkPickerPosttitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.__experimentalLinkControl, {
      settings: [],
      value: featuredImage.options.customUrl,
      onChange: newVal => {
        var options = { ...featuredImage.options,
          customUrl: newVal.url
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", featuredImage.options.customUrl.length != 0 ? featuredImage.options.customUrl : 'No link', " ")))), featuredImage.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Custom Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: featuredImage.options.tag.length == 0 ? 'Choose' : featuredImage.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: (option, index) => {
        var options = { ...featuredImage.options,
          tag: option.value
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
      },
      values: ""
    })), featuredImage.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: featuredImage.options.linkTarget,
      options: [{
        label: 'Choose...',
        value: ''
      }, {
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...featuredImage.options,
          linkTarget: newVal
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = featuredImage.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...featuredImage.options,
          linkAttr: sdsd
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), featuredImage.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: featuredImage.options.linkAttr[i].id,
        onChange: newVal => {
          featuredImage.options.linkAttr[i].id = newVal;
          var ssdsd = featuredImage.options.linkAttr.concat([]);
          var options = { ...featuredImage.options,
            linkAttr: ssdsd
          };
          setAttributes({
            featuredImage: { ...featuredImage,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          featuredImage.options.linkAttr[i].val = newVal;
          var ssdsd = featuredImage.options.linkAttr.concat([]);
          var options = { ...featuredImage.options,
            linkAttr: ssdsd
          };
          setAttributes({
            featuredImage: { ...featuredImage,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          featuredImage.options.linkAttr.splice(i, 1);
          var ssdsd = featuredImage.options.linkAttr.concat([]);
          var options = { ...featuredImage.options,
            linkAttr: ssdsd
          };
          setAttributes({
            featuredImage: { ...featuredImage,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Alt Text Source"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: featuredImage.options.altTextSrc.length == 0 ? 'Choose' : featuredImage.options.altTextSrc,
      options: [{
        label: 'No Alt Text',
        value: ''
      }, {
        label: 'Image Alt Text',
        value: 'imgAltText'
      }, {
        label: 'Image Title',
        value: 'imgTitle'
      }, {
        label: 'Image Caption',
        value: 'imgCaption'
      }, {
        label: 'Image Description',
        value: 'imgDescription'
      }, {
        label: 'Image Slug',
        value: 'imgSlug'
      }, {
        label: 'Post Title',
        value: 'postTitle'
      }, {
        label: 'Post Excerpt',
        value: 'excerpt'
      }, {
        label: 'Post Slug',
        value: 'postSlug'
      }, {
        label: 'Post Custom Field',
        value: 'customField'
      }, {
        label: 'Custom',
        value: 'custom'
      }],
      onChange: (option, index) => {
        var options = { ...featuredImage.options,
          altTextSrc: option.value
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
      },
      values: ""
    })), featuredImage.options.altTextSrc == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Custom Field"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      buttonTitle: 'Choose',
      options: [{
        label: 'Custom',
        value: ''
      }, {
        label: 'Yoast meta',
        value: '_yoast_wpseo_metadesc'
      }, {
        label: 'Rank Math meta',
        value: 'rank_math_description'
      }, {
        label: 'AIO SEO meta',
        value: '_aioseo_og_description'
      }, {
        label: 'SEOPress meta',
        value: '_seopress_titles_desc'
      }, {
        label: 'WP Meta SEO meta',
        value: '_metaseo_metadesc'
      }, {
        label: 'The SEO Framework meta',
        value: '_genesis_description'
      }, {
        label: 'SEO SIMPLE PACK meta',
        value: 'ssp_meta_description'
      }],
      onChange: (option, index) => {
        var options = { ...featuredImage.options,
          altTextMetaKey: option.value
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
      },
      values: ""
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Field Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: featuredImage.options.altTextMetaKey,
      onChange: newVal => {
        var options = { ...featuredImage.options,
          altTextMetaKey: newVal
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
      }
    }))), featuredImage.options.altTextSrc == 'custom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Alt Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      className: "mr-2",
      value: featuredImage.options.altTextCustom,
      onChange: newVal => {
        var options = { ...featuredImage.options,
          altTextCustom: newVal
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Filters "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: filterArgs,
      buttonTitle: "Add",
      onChange: addfilterArgs,
      values: ""
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-5"
    }, featuredImage.styles.filter[breakPointX] != undefined && featuredImage.styles.filter[breakPointX].map((arg, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
        title: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(BefroeTitle, {
          title: arg.label,
          args: {
            index: index,
            arg: arg
          }
        }),
        initialOpen: false
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.RangeControl, {
        value: arg.val,
        onChange: newVal => {
          arg.val = newVal;
          featuredImage.styles.filter[breakPointX][index] = arg;
          var styles = featuredImage.styles;
          setAttributes({
            featuredImage: { ...featuredImage,
              styles: styles
            }
          });
        },
        min: 0,
        max: 100
      }))));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Image Scale"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "my-3",
      value: featuredImage.styles.objectFit[breakPointX],
      options: [{
        label: 'Fill',
        value: 'fill'
      }, {
        label: 'Contain',
        value: 'contain'
      }, {
        label: 'Cover',
        value: 'cover'
      }, {
        label: 'None',
        value: 'none'
      }, {
        label: 'Scale-down',
        value: 'scale-down'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(featuredImage.styles.objectFit).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = featuredImage.styles.objectFit;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...featuredImage.styles,
          objectFit: newValuesObj
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            styles: styles
          }
        });
        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'object-fit': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Width"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      disabled: featuredImage.styles.width[breakPointX] != undefined && featuredImage.styles.width[breakPointX].unit == 'auto' ? true : false,
      value: featuredImage.styles.width[breakPointX] != undefined ? featuredImage.styles.width[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(featuredImage.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = featuredImage.styles.width;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...featuredImage.styles,
          width: newValuesObj
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[imgSelector] != undefined ? blockCssY.items[imgSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: featuredImage.styles.width[breakPointX] != undefined ? featuredImage.styles.width[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(featuredImage.styles.width).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = featuredImage.styles.width;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...featuredImage.styles,
          width: newValuesObj
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[imgSelector] != undefined ? blockCssY.items[imgSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'width': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Height"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      disabled: featuredImage.styles.height[breakPointX] != undefined && featuredImage.styles.height[breakPointX].unit == 'auto' ? true : false,
      value: featuredImage.styles.height[breakPointX] != undefined ? featuredImage.styles.height[breakPointX].val : 0,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(featuredImage.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'auto'
          };
        } else {
          newValuesObj = featuredImage.styles.height;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'auto';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...featuredImage.styles,
          height: newValuesObj
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[imgSelector] != undefined ? blockCssY.items[imgSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: featuredImage.styles.height[breakPointX] != undefined ? featuredImage.styles.height[breakPointX].unit : 'auto',
      options: [{
        label: 'Auto',
        value: 'auto'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: 'fr',
        value: 'fr'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(featuredImage.styles.height).length == 0) {
          newValuesObj[breakPointX] = {
            val: 0,
            unit: newVal
          };
        } else {
          newValuesObj = featuredImage.styles.height;
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 0;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...featuredImage.styles,
          height: newValuesObj
        };
        setAttributes({
          featuredImage: { ...featuredImage,
            styles: styles
          }
        });
        var heightVal = newValuesObj[breakPointX].val ? newValuesObj[breakPointX].val : 0;
        var heightUnit = newValuesObj[breakPointX].unit ? newValuesObj[breakPointX].unit : 'auto';
        var heightX = blockCssY.items[imgSelector] != undefined ? blockCssY.items[imgSelector] : {}; //heightX[breakPointX] = heightVal + heightUnit;

        if (heightUnit == 'auto') {
          heightX[breakPointX] = 'auto';
        } else {
          heightX[breakPointX] = heightVal + heightUnit;
        }

        blockCssY.items[imgSelector] = { ...blockCssY.items[imgSelector],
          'height': heightX
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: featuredImage.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: featuredImage.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, wrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title link"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, linkSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_13__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, wrapper.options.useAsBackground == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId],
      style: {
        backgroundImage: 'url(' + (postImage != null && postImage.media_details.sizes[featuredImage.options.size[breakPointX]] != undefined ? postImage.media_details.sizes[featuredImage.options.size[breakPointX]].source_url : '') + ')'
      }
    }), postImage == null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: _placeholder_jpg__WEBPACK_IMPORTED_MODULE_20__,
      alt: "Default Featured Image"
    })), wrapper.options.useAsBackground == 'no' && wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId]
    }, featuredImage.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      onClick: handleLinkClick
    }, linkAttrItems, {
      href: postUrl,
      target: featuredImage.options.linkTarget
    }), featuredImage.options.size[breakPointX] != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.media_details.sizes[featuredImage.options.size[breakPointX]] != undefined ? postImage.media_details.sizes[featuredImage.options.size[breakPointX]].source_url : '',
      alt: postImage.alt_text
    })), postImage != null && postImage.media_details.sizes[featuredImage.options.size[breakPointX]] == undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.guid.rendered != undefined ? postImage.guid.rendered : '',
      alt: postImage.alt_text
    }))), featuredImage.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, featuredImage.options.size[breakPointX] != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.media_details.sizes[featuredImage.options.size[breakPointX]] != undefined ? postImage.media_details.sizes[featuredImage.options.size[breakPointX]].source_url : '',
      alt: postImage.alt_text
    })), postImage != null && postImage.media_details.sizes[featuredImage.options.size[breakPointX]] == undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage != null && postImage.guid.rendered != undefined ? postImage.guid.rendered : '',
      alt: postImage.alt_text
    })))), wrapper.options.useAsBackground == 'no' && wrapper.options.tag.length == 0 && featuredImage.options.linkTo.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      onClick: handleLinkClick,
      className: [blockId]
    }, linkAttrItems, {
      href: postUrl,
      target: featuredImage.options.linkTarget
    }), postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage.guid.rendered,
      alt: postImage.alt_text
    })), wrapper.options.useAsBackground == 'no' && wrapper.options.tag.length == 0 && featuredImage.options.linkTo.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, featuredImage.options.tag.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTagPostTitle, {
      className: blockId
    }, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage.guid.rendered,
      alt: postImage.alt_text
    })), featuredImage.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: blockId
    }, postImage != null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: postImage.guid.rendered,
      alt: postImage.alt_text
    }))))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-grid-filterable/grid-layouts.js":
/*!*********************************************************!*\
  !*** ./src/blocks/post-grid-filterable/grid-layouts.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);

const gridLayouts = [{
  thumb: '',
  title: '3 Col, 0 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "0",
          "unit": "em"
        },
        "Mobile": {
          "val": "0",
          "unit": "em"
        },
        "Tablet": {
          "val": "0",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "0",
          "unit": "em"
        },
        "Mobile": {
          "val": "0",
          "unit": "em"
        },
        "Tablet": {
          "val": "0",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "11.5",
    y: "14.5",
    width: "73.3231",
    height: "91",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.0611 73.9162C25.0611 72.5868 26.1387 71.5092 27.468 71.5092H69.1885C70.5178 71.5092 71.5954 72.5868 71.5954 73.9162V73.9162C71.5954 75.2455 70.5178 76.3231 69.1885 76.3231H27.468C26.1387 76.3231 25.0611 75.2455 25.0611 73.9162V73.9162Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.0611 81.6184C25.0611 80.2891 26.1387 79.2115 27.468 79.2115H69.1885C70.5178 79.2115 71.5954 80.2891 71.5954 81.6184V81.6184C71.5954 82.9477 70.5178 84.0254 69.1885 84.0254H27.468C26.1387 84.0254 25.0611 82.9477 25.0611 81.6184V81.6184Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.0611 89.3206C25.0611 87.9913 26.1387 86.9137 27.468 86.9137H55.7663C57.0956 86.9137 58.1732 87.9913 58.1732 89.3206V89.3206C58.1732 90.65 57.0956 91.7276 55.7663 91.7276H27.468C26.1387 91.7276 25.0611 90.65 25.0611 89.3206V89.3206Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M20.2402 21.2314V65.1079H76.083V21.2314H20.2402ZM24.2289 25.2202H72.0942V52.9546L61.5613 42.3595L60.1279 40.926L51.0908 49.9631L39.6231 38.3707L38.1896 36.9372L24.2289 50.8979V25.2202ZM64.1167 29.209C61.9119 29.209 60.1279 30.993 60.1279 33.1978C60.1279 35.4025 61.9119 37.1865 64.1167 37.1865C66.3214 37.1865 68.1054 35.4025 68.1054 33.1978C68.1054 30.993 66.3214 29.209 64.1167 29.209ZM38.1896 42.6088L56.5131 61.1192H24.2289V56.5695L38.1896 42.6088ZM60.1279 46.5975L72.0942 58.5638V61.1192H62.1846L53.8954 52.7677L60.1279 46.5975Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "85.4359",
    y: "14.5",
    width: "73.3231",
    height: "91",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M98.9971 73.9162C98.9971 72.5868 100.075 71.5092 101.404 71.5092H143.124C144.454 71.5092 145.531 72.5868 145.531 73.9162V73.9162C145.531 75.2455 144.454 76.3231 143.124 76.3231H101.404C100.075 76.3231 98.9971 75.2455 98.9971 73.9162V73.9162Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M98.9971 81.6184C98.9971 80.2891 100.075 79.2115 101.404 79.2115H143.124C144.454 79.2115 145.531 80.2891 145.531 81.6184V81.6184C145.531 82.9477 144.454 84.0254 143.124 84.0254H101.404C100.075 84.0254 98.9971 82.9477 98.9971 81.6184V81.6184Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M98.9971 89.3206C98.9971 87.9913 100.075 86.9137 101.404 86.9137H129.702C131.032 86.9137 132.109 87.9913 132.109 89.3206V89.3206C132.109 90.65 131.032 91.7276 129.702 91.7276H101.404C100.075 91.7276 98.9971 90.65 98.9971 89.3206V89.3206Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M94.1761 21.2314V65.1079H150.019V21.2314H94.1761ZM98.1649 25.2202H146.03V52.9546L135.497 42.3595L134.064 40.926L125.027 49.9631L113.559 38.3707L112.126 36.9372L98.1649 50.8979V25.2202ZM138.053 29.209C135.848 29.209 134.064 30.993 134.064 33.1978C134.064 35.4025 135.848 37.1865 138.053 37.1865C140.257 37.1865 142.041 35.4025 142.041 33.1978C142.041 30.993 140.257 29.209 138.053 29.209ZM112.126 42.6088L130.449 61.1192H98.1649V56.5695L112.126 42.6088ZM134.064 46.5975L146.03 58.5638V61.1192H136.121L127.831 52.7677L134.064 46.5975Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "159.372",
    y: "14.5",
    width: "73.3231",
    height: "91",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M172.933 73.9162C172.933 72.5868 174.01 71.5092 175.34 71.5092H217.06C218.39 71.5092 219.467 72.5868 219.467 73.9162V73.9162C219.467 75.2455 218.39 76.3231 217.06 76.3231H175.34C174.01 76.3231 172.933 75.2455 172.933 73.9162V73.9162Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M172.933 81.6184C172.933 80.2891 174.01 79.2115 175.34 79.2115H217.06C218.39 79.2115 219.467 80.2891 219.467 81.6184V81.6184C219.467 82.9477 218.39 84.0254 217.06 84.0254H175.34C174.01 84.0254 172.933 82.9477 172.933 81.6184V81.6184Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M172.933 89.3206C172.933 87.9913 174.01 86.9137 175.34 86.9137H203.638C204.967 86.9137 206.045 87.9913 206.045 89.3206V89.3206C206.045 90.65 204.967 91.7276 203.638 91.7276H175.34C174.01 91.7276 172.933 90.65 172.933 89.3206V89.3206Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M168.112 21.2314V65.1079H223.955V21.2314H168.112ZM172.101 25.2202H219.966V52.9546L209.433 42.3595L208 40.926L198.963 49.9631L187.495 38.3707L186.061 36.9372L172.101 50.8979V25.2202ZM211.988 29.209C209.784 29.209 208 30.993 208 33.1978C208 35.4025 209.784 37.1865 211.988 37.1865C214.193 37.1865 215.977 35.4025 215.977 33.1978C215.977 30.993 214.193 29.209 211.988 29.209ZM186.061 42.6088L204.385 61.1192H172.101V56.5695L186.061 42.6088ZM208 46.5975L219.966 58.5638V61.1192H210.056L201.767 52.7677L208 46.5975Z",
    fill: "black"
  }))
}, {
  title: '3 Col 1 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "1",
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "1",
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "12.5",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 73.3111C25.4498 72.0396 26.4805 71.0089 27.7521 71.0089H67.6586C68.9301 71.0089 69.9608 72.0396 69.9608 73.3111V73.3111C69.9608 74.5827 68.9301 75.6134 67.6585 75.6134H27.7521C26.4805 75.6134 25.4498 74.5827 25.4498 73.3111V73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 80.6785C25.4498 79.407 26.4805 78.3762 27.7521 78.3762H67.6586C68.9301 78.3762 69.9608 79.407 69.9608 80.6785V80.6785C69.9608 81.95 68.9301 82.9808 67.6585 82.9808H27.7521C26.4805 82.9808 25.4498 81.95 25.4498 80.6785V80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 88.0458C25.4498 86.7743 26.4805 85.7435 27.7521 85.7435H54.8199C56.0915 85.7435 57.1222 86.7743 57.1222 88.0458V88.0458C57.1222 89.3174 56.0915 90.3481 54.8199 90.3481H27.7521C26.4805 90.3481 25.4498 89.3174 25.4498 88.0458V88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M20.8384 22.917V64.8858H74.2533V22.917H20.8384ZM24.6538 26.7324H70.4379V53.2609L60.363 43.1264L58.9919 41.7553L50.3478 50.3994L39.3786 39.3111L38.0075 37.9399L24.6538 51.2937V26.7324ZM62.8072 30.5477C60.6984 30.5477 58.9919 32.2542 58.9919 34.3631C58.9919 36.4719 60.6984 38.1784 62.8072 38.1784C64.9161 38.1784 66.6226 36.4719 66.6226 34.3631C66.6226 32.2542 64.9161 30.5477 62.8072 30.5477ZM38.0075 43.3649L55.5342 61.0705H24.6538V56.7186L38.0075 43.3649ZM58.9919 47.1802L70.4379 58.6263V61.0705H60.9592L53.0304 53.0821L58.9919 47.1802Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "87.4345",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100.384 73.3111C100.384 72.0396 101.415 71.0089 102.687 71.0089H142.593C143.865 71.0089 144.895 72.0396 144.895 73.3111V73.3111C144.895 74.5827 143.865 75.6134 142.593 75.6134H102.687C101.415 75.6134 100.384 74.5827 100.384 73.3111V73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100.384 80.6785C100.384 79.407 101.415 78.3762 102.687 78.3762H142.593C143.865 78.3762 144.895 79.407 144.895 80.6785V80.6785C144.895 81.95 143.865 82.9808 142.593 82.9808H102.687C101.415 82.9808 100.384 81.95 100.384 80.6785V80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100.384 88.0458C100.384 86.7743 101.415 85.7435 102.687 85.7435H129.754C131.026 85.7435 132.057 86.7743 132.057 88.0458V88.0458C132.057 89.3174 131.026 90.3481 129.754 90.3481H102.687C101.415 90.3481 100.384 89.3174 100.384 88.0458V88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M95.7729 22.917V64.8858H149.188V22.917H95.7729ZM99.5883 26.7324H145.372V53.2609L135.298 43.1264L133.926 41.7553L125.282 50.3994L114.313 39.3111L112.942 37.9399L99.5883 51.2937V26.7324ZM137.742 30.5477C135.633 30.5477 133.926 32.2542 133.926 34.3631C133.926 36.4719 135.633 38.1784 137.742 38.1784C139.851 38.1784 141.557 36.4719 141.557 34.3631C141.557 32.2542 139.851 30.5477 137.742 30.5477ZM112.942 43.3649L130.469 61.0705H99.5883V56.7186L112.942 43.3649ZM133.926 47.1802L145.372 58.6263V61.0705H135.894L127.965 53.0821L133.926 47.1802Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "162.369",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 73.3111C175.319 72.0396 176.35 71.0089 177.621 71.0089H217.528C218.799 71.0089 219.83 72.0396 219.83 73.3111V73.3111C219.83 74.5827 218.799 75.6134 217.528 75.6134H177.621C176.35 75.6134 175.319 74.5827 175.319 73.3111V73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 80.6785C175.319 79.407 176.35 78.3762 177.621 78.3762H217.528C218.799 78.3762 219.83 79.407 219.83 80.6785V80.6785C219.83 81.95 218.799 82.9808 217.528 82.9808H177.621C176.35 82.9808 175.319 81.95 175.319 80.6785V80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 88.0458C175.319 86.7743 176.35 85.7435 177.621 85.7435H204.689C205.96 85.7435 206.991 86.7743 206.991 88.0458V88.0458C206.991 89.3174 205.96 90.3481 204.689 90.3481H177.621C176.35 90.3481 175.319 89.3174 175.319 88.0458V88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M170.707 22.917V64.8858H224.122V22.917H170.707ZM174.523 26.7324H220.307V53.2609L210.232 43.1264L208.861 41.7553L200.217 50.3994L189.248 39.3111L187.877 37.9399L174.523 51.2937V26.7324ZM212.676 30.5477C210.567 30.5477 208.861 32.2542 208.861 34.3631C208.861 36.4719 210.567 38.1784 212.676 38.1784C214.785 38.1784 216.492 36.4719 216.492 34.3631C216.492 32.2542 214.785 30.5477 212.676 30.5477ZM187.877 43.3649L205.403 61.0705H174.523V56.7186L187.877 43.3649ZM208.861 47.1802L220.307 58.6263V61.0705H210.828L202.899 53.0821L208.861 47.1802Z",
    fill: "black"
  }))
}, {
  title: '3 Col 2 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "2",
          "unit": "em"
        },
        "Tablet": {
          "val": "2",
          "unit": "em"
        },
        "Mobile": {
          "val": "2",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "2",
          "unit": "em"
        },
        "Tablet": {
          "val": "2",
          "unit": "em"
        },
        "Mobile": {
          "val": "2",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "13.5",
    y: "19.5",
    width: "66.0524",
    height: "82",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.6855 73.0548C25.6855 71.8555 26.6578 70.8833 27.857 70.8833H65.4961C66.6954 70.8833 67.6676 71.8555 67.6676 73.0548V73.0548C67.6676 74.2541 66.6954 75.2263 65.4961 75.2263H27.857C26.6578 75.2263 25.6855 74.2541 25.6855 73.0548V73.0548Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.6855 80.0035C25.6855 78.8043 26.6578 77.8321 27.857 77.8321H65.4961C66.6954 77.8321 67.6676 78.8043 67.6676 80.0035V80.0035C67.6676 81.2028 66.6954 82.175 65.4961 82.175H27.857C26.6578 82.175 25.6855 81.2028 25.6855 80.0035V80.0035Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.6855 86.9523C25.6855 85.7531 26.6578 84.7809 27.857 84.7809H53.387C54.5862 84.7809 55.5584 85.7531 55.5584 86.9523V86.9523C55.5584 88.1516 54.5862 89.1238 53.387 89.1238H27.857C26.6578 89.1238 25.6855 88.1516 25.6855 86.9523V86.9523Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M21.3362 25.524V65.1083H71.7162V25.524H21.3362ZM24.9348 29.1226H68.1176V54.1439L58.6151 44.5852L57.3219 43.292L49.1689 51.445L38.823 40.9866L37.5298 39.6934L24.9348 52.2884V29.1226ZM60.9205 32.7212C58.9314 32.7212 57.3219 34.3307 57.3219 36.3197C57.3219 38.3088 58.9314 39.9183 60.9205 39.9183C62.9095 39.9183 64.519 38.3088 64.519 36.3197C64.519 34.3307 62.9095 32.7212 60.9205 32.7212ZM37.5298 44.8101L54.0607 61.5097H24.9348V57.4051L37.5298 44.8101ZM57.3219 48.4087L68.1176 59.2044V61.5097H59.1774L51.6991 53.9752L57.3219 48.4087Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "89.4753",
    y: "19.5",
    width: "66.0524",
    height: "82",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M101.661 73.0548C101.661 71.8555 102.633 70.8833 103.832 70.8833H141.471C142.671 70.8833 143.643 71.8555 143.643 73.0548V73.0548C143.643 74.2541 142.671 75.2263 141.471 75.2263H103.832C102.633 75.2263 101.661 74.2541 101.661 73.0548V73.0548Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M101.661 80.0035C101.661 78.8043 102.633 77.8321 103.832 77.8321H141.471C142.671 77.8321 143.643 78.8043 143.643 80.0035V80.0035C143.643 81.2028 142.671 82.175 141.471 82.175H103.832C102.633 82.175 101.661 81.2028 101.661 80.0035V80.0035Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M101.661 86.9523C101.661 85.7531 102.633 84.7809 103.832 84.7809H129.362C130.562 84.7809 131.534 85.7531 131.534 86.9523V86.9523C131.534 88.1516 130.562 89.1238 129.362 89.1238H103.832C102.633 89.1238 101.661 88.1516 101.661 86.9523V86.9523Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M97.3116 25.524V65.1083H147.692V25.524H97.3116ZM100.91 29.1226H144.093V54.1439L134.59 44.5852L133.297 43.292L125.144 51.445L114.798 40.9866L113.505 39.6934L100.91 52.2884V29.1226ZM136.896 32.7212C134.907 32.7212 133.297 34.3307 133.297 36.3197C133.297 38.3088 134.907 39.9183 136.896 39.9183C138.885 39.9183 140.494 38.3088 140.494 36.3197C140.494 34.3307 138.885 32.7212 136.896 32.7212ZM113.505 44.8101L130.036 61.5097H100.91V57.4051L113.505 44.8101ZM133.297 48.4087L144.093 59.2044V61.5097H135.153L127.674 53.9752L133.297 48.4087Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "165.389",
    y: "19.5",
    width: "66.0524",
    height: "82",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M177.575 73.0548C177.575 71.8555 178.547 70.8833 179.746 70.8833H217.385C218.585 70.8833 219.557 71.8555 219.557 73.0548V73.0548C219.557 74.2541 218.585 75.2263 217.385 75.2263H179.746C178.547 75.2263 177.575 74.2541 177.575 73.0548V73.0548Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M177.575 80.0035C177.575 78.8043 178.547 77.8321 179.746 77.8321H217.385C218.585 77.8321 219.557 78.8043 219.557 80.0035V80.0035C219.557 81.2028 218.585 82.175 217.385 82.175H179.746C178.547 82.175 177.575 81.2028 177.575 80.0035V80.0035Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M177.575 86.9523C177.575 85.7531 178.547 84.7809 179.746 84.7809H205.276C206.476 84.7809 207.448 85.7531 207.448 86.9523V86.9523C207.448 88.1516 206.476 89.1238 205.276 89.1238H179.746C178.547 89.1238 177.575 88.1516 177.575 86.9523V86.9523Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M173.225 25.524V65.1083H223.605V25.524H173.225ZM176.824 29.1226H220.007V54.1439L210.504 44.5852L209.211 43.292L201.058 51.445L190.712 40.9866L189.419 39.6934L176.824 52.2884V29.1226ZM212.81 32.7212C210.821 32.7212 209.211 34.3307 209.211 36.3197C209.211 38.3088 210.821 39.9183 212.81 39.9183C214.799 39.9183 216.408 38.3088 216.408 36.3197C216.408 34.3307 214.799 32.7212 212.81 32.7212ZM189.419 44.8101L205.95 61.5097H176.824V57.4051L189.419 44.8101ZM209.211 48.4087L220.007 59.2044V61.5097H211.067L203.588 53.9752L209.211 48.4087Z",
    fill: "black"
  }))
}, {
  title: '2 Col 0 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "0",
          "unit": "em"
        },
        "Tablet": {
          "val": "0",
          "unit": "em"
        },
        "Mobile": {
          "val": "0",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "0",
          "unit": "em"
        },
        "Tablet": {
          "val": "0",
          "unit": "em"
        },
        "Mobile": {
          "val": "0",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "38.5",
    y: "8.5",
    width: "83.0175",
    height: "103",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M53.8952 75.7313C53.8952 74.2286 55.1134 73.0104 56.6161 73.0104H103.778C105.281 73.0104 106.499 74.2286 106.499 75.7313C106.499 77.234 105.281 78.4522 103.778 78.4522H56.6161C55.1134 78.4522 53.8952 77.234 53.8952 75.7313Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M53.8952 84.4382C53.8952 82.9355 55.1134 81.7173 56.6161 81.7173H103.778C105.281 81.7173 106.499 82.9355 106.499 84.4382C106.499 85.9409 105.281 87.1591 103.778 87.1591H56.6161C55.1134 87.1591 53.8952 85.9409 53.8952 84.4382Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M53.8952 93.1451C53.8952 91.6424 55.1134 90.4242 56.6161 90.4242H88.6054C90.1081 90.4242 91.3263 91.6424 91.3263 93.1451C91.3263 94.6478 90.1081 95.866 88.6054 95.866H56.6161C55.1134 95.866 53.8952 94.6478 53.8952 93.1451Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M48.4454 16.1747V65.7742H111.572V16.1747H48.4454ZM52.9545 20.6837H107.063V52.0357L95.1563 40.0585L93.5359 38.4381L83.3201 48.6539L70.3566 35.5495L68.7361 33.929L52.9545 49.7107V20.6837ZM98.0449 25.1928C95.5526 25.1928 93.5359 27.2095 93.5359 29.7018C93.5359 32.1941 95.5526 34.2109 98.0449 34.2109C100.537 34.2109 102.554 32.1941 102.554 29.7018C102.554 27.2095 100.537 25.1928 98.0449 25.1928ZM68.7361 40.3403L89.4496 61.2651H52.9545V56.122L68.7361 40.3403ZM93.5359 44.8494L107.063 58.3765V61.2651H95.8609L86.4905 51.8243L93.5359 44.8494Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "122.08",
    y: "8.5",
    width: "83.0175",
    height: "103",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M137.475 75.7313C137.475 74.2286 138.693 73.0104 140.196 73.0104H187.358C188.861 73.0104 190.079 74.2286 190.079 75.7313C190.079 77.234 188.861 78.4522 187.358 78.4522H140.196C138.693 78.4522 137.475 77.234 137.475 75.7313Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M137.475 84.4382C137.475 82.9355 138.693 81.7173 140.196 81.7173H187.358C188.861 81.7173 190.079 82.9355 190.079 84.4382C190.079 85.9409 188.861 87.1591 187.358 87.1591H140.196C138.693 87.1591 137.475 85.9409 137.475 84.4382Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M137.475 93.1451C137.475 91.6424 138.693 90.4242 140.196 90.4242H172.185C173.688 90.4242 174.906 91.6424 174.906 93.1451C174.906 94.6478 173.688 95.866 172.185 95.866H140.196C138.693 95.866 137.475 94.6478 137.475 93.1451Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M132.025 16.1747V65.7742H195.152V16.1747H132.025ZM136.534 20.6837H190.643V52.0357L178.736 40.0585L177.116 38.4381L166.9 48.6539L153.936 35.5495L152.316 33.929L136.534 49.7107V20.6837ZM181.625 25.1928C179.132 25.1928 177.116 27.2095 177.116 29.7018C177.116 32.1941 179.132 34.2109 181.625 34.2109C184.117 34.2109 186.134 32.1941 186.134 29.7018C186.134 27.2095 184.117 25.1928 181.625 25.1928ZM152.316 40.3403L173.029 61.2651H136.534V56.122L152.316 40.3403ZM177.116 44.8494L190.643 58.3765V61.2651H179.441L170.07 51.8243L177.116 44.8494Z",
    fill: "black"
  }))
}, {
  title: '2 Col 1 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "1",
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "1",
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "37.5",
    y: "9.5",
    width: "81.7632",
    height: "101.447",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M52.6579 75.7202C52.6579 74.2399 53.8579 73.0399 55.3382 73.0399H101.796C103.277 73.0399 104.477 74.2399 104.477 75.7202V75.7202C104.477 77.2005 103.277 78.4005 101.796 78.4005H55.3382C53.8579 78.4005 52.6579 77.2005 52.6579 75.7202V75.7202Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M52.6579 84.297C52.6579 82.8168 53.8579 81.6168 55.3382 81.6168H101.796C103.277 81.6168 104.477 82.8168 104.477 84.297V84.297C104.477 85.7773 103.277 86.9773 101.796 86.9773H55.3382C53.8579 86.9773 52.6579 85.7773 52.6579 84.297V84.297Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M52.6579 92.8739C52.6579 91.3936 53.8579 90.1936 55.3382 90.1936H86.8499C88.3302 90.1936 89.5302 91.3936 89.5302 92.8739V92.8739C89.5302 94.3542 88.3302 95.5542 86.8499 95.5542H55.3382C53.8579 95.5542 52.6579 94.3542 52.6579 92.8739V92.8739Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M47.2895 17.0526V65.9117H109.474V17.0526H47.2895ZM51.7312 21.4944H105.032V52.3783L93.303 40.5799L91.7068 38.9837L81.6435 49.047L68.8735 36.1382L67.2773 34.542L51.7312 50.088V21.4944ZM96.1485 25.9361C93.6934 25.9361 91.7068 27.9227 91.7068 30.3778C91.7068 32.8329 93.6934 34.8196 96.1485 34.8196C98.6036 34.8196 100.59 32.8329 100.59 30.3778C100.59 27.9227 98.6036 25.9361 96.1485 25.9361ZM67.2773 40.8575L87.6815 61.4699H51.7312V56.4036L67.2773 40.8575ZM91.7068 45.2993L105.032 58.6245V61.4699H93.997L84.7666 52.1701L91.7068 45.2993Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "124.737",
    y: "9.5",
    width: "81.7632",
    height: "101.447",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M139.895 75.7202C139.895 74.2399 141.095 73.0399 142.575 73.0399H189.033C190.513 73.0399 191.713 74.2399 191.713 75.7202V75.7202C191.713 77.2005 190.513 78.4005 189.033 78.4005H142.575C141.095 78.4005 139.895 77.2005 139.895 75.7202V75.7202Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M139.895 84.297C139.895 82.8168 141.095 81.6168 142.575 81.6168H189.033C190.513 81.6168 191.713 82.8168 191.713 84.297V84.297C191.713 85.7773 190.513 86.9773 189.033 86.9773H142.575C141.095 86.9773 139.895 85.7773 139.895 84.297V84.297Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M139.895 92.8739C139.895 91.3936 141.095 90.1936 142.575 90.1936H174.087C175.567 90.1936 176.767 91.3936 176.767 92.8739V92.8739C176.767 94.3542 175.567 95.5542 174.087 95.5542H142.575C141.095 95.5542 139.895 94.3542 139.895 92.8739V92.8739Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M134.526 17.0526V65.9117H196.711V17.0526H134.526ZM138.968 21.4944H192.269V52.3783L180.54 40.5799L178.944 38.9837L168.88 49.047L156.11 36.1382L154.514 34.542L138.968 50.088V21.4944ZM183.385 25.9361C180.93 25.9361 178.944 27.9227 178.944 30.3778C178.944 32.8329 180.93 34.8196 183.385 34.8196C185.84 34.8196 187.827 32.8329 187.827 30.3778C187.827 27.9227 185.84 25.9361 183.385 25.9361ZM154.514 40.8575L174.918 61.4699H138.968V56.4036L154.514 40.8575ZM178.944 45.2993L192.269 58.6245V61.4699H181.234L172.003 52.1701L178.944 45.2993Z",
    fill: "black"
  }))
}, {
  title: '2 Col 2 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "2",
          "unit": "em"
        },
        "Tablet": {
          "val": "2",
          "unit": "em"
        },
        "Mobile": {
          "val": "2",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "2",
          "unit": "em"
        },
        "Tablet": {
          "val": "2",
          "unit": "em"
        },
        "Mobile": {
          "val": "2",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "34.5",
    y: "9.5",
    width: "81.4017",
    height: "101",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M49.5895 75.4288C49.5895 73.955 50.7842 72.7603 52.258 72.7603H98.5133C99.9871 72.7603 101.182 73.955 101.182 75.4288V75.4288C101.182 76.9026 99.9871 78.0974 98.5133 78.0974H52.258C50.7842 78.0974 49.5895 76.9026 49.5895 75.4288V75.4288Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M49.5895 83.9683C49.5895 82.4944 50.7842 81.2997 52.258 81.2997H98.5133C99.9871 81.2997 101.182 82.4944 101.182 83.9683V83.9683C101.182 85.4421 99.9871 86.6368 98.5133 86.6368H52.258C50.7842 86.6368 49.5895 85.4421 49.5895 83.9683V83.9683Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M49.5895 92.5077C49.5895 91.0338 50.7842 89.8391 52.258 89.8391H83.6322C85.106 89.8391 86.3007 91.0338 86.3007 92.5077V92.5077C86.3007 93.9815 85.106 95.1762 83.6322 95.1762H52.258C50.7842 95.1762 49.5895 93.9815 49.5895 92.5077V92.5077Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M44.2446 17.0175V65.6632H106.157V17.0175H44.2446ZM48.6669 21.4398H101.735V52.1889L90.0572 40.442L88.4679 38.8528L78.4486 48.8721L65.7343 36.0197L64.1451 34.4304L48.6669 49.9086V21.4398ZM92.8902 25.8622C90.4459 25.8622 88.4679 27.8401 88.4679 30.2845C88.4679 32.7289 90.4459 34.7068 92.8902 34.7068C95.3346 34.7068 97.3126 32.7289 97.3126 30.2845C97.3126 27.8401 95.3346 25.8622 92.8902 25.8622ZM64.1451 40.7184L84.4602 61.2408H48.6669V56.1966L64.1451 40.7184ZM88.4679 45.1408L101.735 58.4078V61.2408H90.7482L81.558 51.9816L88.4679 45.1408Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "127.867",
    y: "9.5",
    width: "81.4017",
    height: "101",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M142.957 75.4288C142.957 73.955 144.152 72.7603 145.625 72.7603H191.881C193.354 72.7603 194.549 73.955 194.549 75.4288V75.4288C194.549 76.9026 193.354 78.0974 191.881 78.0974H145.625C144.152 78.0974 142.957 76.9026 142.957 75.4288V75.4288Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M142.957 83.9683C142.957 82.4944 144.152 81.2997 145.625 81.2997H191.881C193.354 81.2997 194.549 82.4944 194.549 83.9683V83.9683C194.549 85.4421 193.354 86.6368 191.881 86.6368H145.625C144.152 86.6368 142.957 85.4421 142.957 83.9683V83.9683Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M142.957 92.5077C142.957 91.0338 144.152 89.8391 145.625 89.8391H177C178.473 89.8391 179.668 91.0338 179.668 92.5077V92.5077C179.668 93.9815 178.473 95.1762 177 95.1762H145.625C144.152 95.1762 142.957 93.9815 142.957 92.5077V92.5077Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M137.612 17.0175V65.6632H199.525V17.0175H137.612ZM142.034 21.4398H195.102V52.1889L183.424 40.442L181.835 38.8528L171.816 48.8721L159.102 36.0197L157.512 34.4304L142.034 49.9086V21.4398ZM186.258 25.8622C183.813 25.8622 181.835 27.8401 181.835 30.2845C181.835 32.7289 183.813 34.7068 186.258 34.7068C188.702 34.7068 190.68 32.7289 190.68 30.2845C190.68 27.8401 188.702 25.8622 186.258 25.8622ZM157.512 40.7184L177.827 61.2408H142.034V56.1966L157.512 40.7184ZM181.835 45.1408L195.102 58.4078V61.2408H184.115L174.925 51.9816L181.835 45.1408Z",
    fill: "black"
  }))
}, {
  title: '3 Col, nth(1)-2 Offset 1 Gap',
  isPro: true,
  data: {
    "options": {
      "itemCss": {
        "Desktop": [{
          "grid-column-start": "1",
          "grid-column-end": "3",
          "grid-row-start": "",
          "grid-row-end": ""
        }]
      }
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": 1,
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": 1,
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "12.5",
    y: "16.5",
    width: "145",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M24 73.3111C24 72.0396 25.0308 71.0089 26.3023 71.0089H138.698C139.969 71.0089 141 72.0396 141 73.3111V73.3111C141 74.5827 139.969 75.6134 138.698 75.6134H26.3023C25.0308 75.6134 24 74.5827 24 73.3111V73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M24 80.6785C24 79.407 25.0308 78.3762 26.3023 78.3762H138.698C139.969 78.3762 141 79.407 141 80.6785V80.6785C141 81.95 139.969 82.9808 138.698 82.9808H26.3023C25.0308 82.9808 24 81.95 24 80.6785V80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M24 88.0458C24 86.7743 25.0308 85.7435 26.3023 85.7435H104.951C106.222 85.7435 107.253 86.7743 107.253 88.0458V88.0458C107.253 89.3174 106.222 90.3481 104.951 90.3481H26.3023C25.0308 90.3481 24 89.3174 24 88.0458V88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M58 22.9171V64.8859H111.415V22.9171H58ZM61.8153 26.7324H107.6V53.261L97.5246 43.1265L96.1535 41.7553L87.5093 50.3995L76.5402 39.3111L75.1691 37.94L61.8153 51.2937V26.7324ZM99.9688 30.5477C97.8599 30.5477 96.1535 32.2542 96.1535 34.3631C96.1535 36.472 97.8599 38.1784 99.9688 38.1784C102.078 38.1784 103.784 36.472 103.784 34.3631C103.784 32.2542 102.078 30.5477 99.9688 30.5477ZM75.1691 43.3649L92.6958 61.0705H61.8153V56.7186L75.1691 43.3649ZM96.1535 47.1803L107.6 58.6263V61.0705H98.1208L90.192 53.0821L96.1535 47.1803Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "162.369",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 73.3111C175.319 72.0396 176.35 71.0089 177.621 71.0089H217.528C218.799 71.0089 219.83 72.0396 219.83 73.3111C219.83 74.5827 218.799 75.6134 217.528 75.6134H177.621C176.35 75.6134 175.319 74.5827 175.319 73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 80.6785C175.319 79.407 176.35 78.3762 177.621 78.3762H217.528C218.799 78.3762 219.83 79.407 219.83 80.6785C219.83 81.95 218.799 82.9808 217.528 82.9808H177.621C176.35 82.9808 175.319 81.95 175.319 80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 88.0458C175.319 86.7743 176.35 85.7435 177.621 85.7435H204.689C205.96 85.7435 206.991 86.7743 206.991 88.0458C206.991 89.3174 205.96 90.3481 204.689 90.3481H177.621C176.35 90.3481 175.319 89.3174 175.319 88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M170.707 22.917V64.8858H224.122V22.917H170.707ZM174.523 26.7324H220.307V53.2609L210.232 43.1264L208.861 41.7553L200.217 50.3994L189.248 39.3111L187.877 37.9399L174.523 51.2937V26.7324ZM212.676 30.5477C210.567 30.5477 208.861 32.2542 208.861 34.3631C208.861 36.4719 210.567 38.1784 212.676 38.1784C214.785 38.1784 216.492 36.4719 216.492 34.3631C216.492 32.2542 214.785 30.5477 212.676 30.5477ZM187.877 43.3649L205.403 61.0705H174.523V56.7186L187.877 43.3649ZM208.861 47.1802L220.307 58.6263V61.0705H210.828L202.899 53.0821L208.861 47.1802Z",
    fill: "black"
  }))
}, {
  title: '3 Col, nth(2)-2 Offset 1 Gap',
  isPro: true,
  data: {
    "options": {
      "itemCss": {
        "Desktop": [{
          "grid-column-start": "",
          "grid-column-end": "",
          "grid-row-start": "",
          "grid-row-end": ""
        }, {
          "grid-column-start": "2",
          "grid-column-end": "4",
          "grid-row-start": "",
          "grid-row-end": ""
        }]
      }
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": 1,
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": 1,
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "88.5",
    y: "16.5",
    width: "145",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100 73.3111C100 72.0396 101.031 71.0089 102.302 71.0089H214.698C215.969 71.0089 217 72.0396 217 73.3111C217 74.5827 215.969 75.6134 214.698 75.6134H102.302C101.031 75.6134 100 74.5827 100 73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100 80.6785C100 79.407 101.031 78.3762 102.302 78.3762H214.698C215.969 78.3762 217 79.407 217 80.6785C217 81.95 215.969 82.9808 214.698 82.9808H102.302C101.031 82.9808 100 81.95 100 80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100 88.0458C100 86.7743 101.031 85.7435 102.302 85.7435H180.951C182.222 85.7435 183.253 86.7743 183.253 88.0458C183.253 89.3174 182.222 90.3481 180.951 90.3481H102.302C101.031 90.3481 100 89.3174 100 88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M134 22.9171V64.8859H187.415V22.9171H134ZM137.815 26.7324H183.6V53.261L173.525 43.1265L172.153 41.7553L163.509 50.3995L152.54 39.3111L151.169 37.94L137.815 51.2937V26.7324ZM175.969 30.5477C173.86 30.5477 172.153 32.2542 172.153 34.3631C172.153 36.472 173.86 38.1784 175.969 38.1784C178.078 38.1784 179.784 36.472 179.784 34.3631C179.784 32.2542 178.078 30.5477 175.969 30.5477ZM151.169 43.3649L168.696 61.0705H137.815V56.7186L151.169 43.3649ZM172.153 47.1803L183.6 58.6263V61.0705H174.121L166.192 53.0821L172.153 47.1803Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "12.5",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 73.3111C25.4498 72.0396 26.4805 71.0089 27.7521 71.0089H67.6586C68.9301 71.0089 69.9608 72.0396 69.9608 73.3111C69.9608 74.5827 68.9301 75.6134 67.6586 75.6134H27.7521C26.4805 75.6134 25.4498 74.5827 25.4498 73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 80.6785C25.4498 79.407 26.4805 78.3762 27.7521 78.3762H67.6586C68.9301 78.3762 69.9608 79.407 69.9608 80.6785C69.9608 81.95 68.9301 82.9808 67.6586 82.9808H27.7521C26.4805 82.9808 25.4498 81.95 25.4498 80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 88.0458C25.4498 86.7743 26.4805 85.7435 27.7521 85.7435H54.8199C56.0915 85.7435 57.1222 86.7743 57.1222 88.0458C57.1222 89.3174 56.0915 90.3481 54.8199 90.3481H27.7521C26.4805 90.3481 25.4498 89.3174 25.4498 88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M20.8384 22.917V64.8858H74.2533V22.917H20.8384ZM24.6538 26.7324H70.4379V53.2609L60.363 43.1264L58.9919 41.7553L50.3478 50.3994L39.3786 39.3111L38.0075 37.9399L24.6538 51.2937V26.7324ZM62.8072 30.5477C60.6984 30.5477 58.9919 32.2542 58.9919 34.3631C58.9919 36.4719 60.6984 38.1784 62.8072 38.1784C64.9161 38.1784 66.6226 36.4719 66.6226 34.3631C66.6226 32.2542 64.9161 30.5477 62.8072 30.5477ZM38.0075 43.3649L55.5342 61.0705H24.6538V56.7186L38.0075 43.3649ZM58.9919 47.1802L70.4379 58.6263V61.0705H60.9592L53.0304 53.0821L58.9919 47.1802Z",
    fill: "black"
  }))
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (gridLayouts);

/***/ }),

/***/ "./src/blocks/post-grid-filterable/index.js":
/*!**************************************************!*\
  !*** ./src/blocks/post-grid-filterable/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/icon/index.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/close.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_styles__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/styles */ "./src/components/styles/index.js");
/* harmony import */ var _components_css_text_align__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/css-text-align */ "./src/components/css-text-align/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_css_cursor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-cursor */ "./src/components/css-cursor/index.js");
/* harmony import */ var _components_input_select__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../components/input-select */ "./src/components/input-select/index.js");
/* harmony import */ var _components_tutorials__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../components/tutorials */ "./src/components/tutorials/index.js");
/* harmony import */ var _components_css_padding__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../components/css-padding */ "./src/components/css-padding/index.js");
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _query_presets__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./query-presets */ "./src/blocks/post-grid-filterable/query-presets.js");
/* harmony import */ var _grid_layouts__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./grid-layouts */ "./src/blocks/post-grid-filterable/grid-layouts.js");
/* harmony import */ var _queryprams__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./queryprams */ "./src/blocks/post-grid-filterable/queryprams.js");
/* harmony import */ var _tutorials_links__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./tutorials-links */ "./src/blocks/post-grid-filterable/tutorials-links.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! animejs/lib/anime.es.js */ "./node_modules/animejs/lib/anime.es.js");






const {
  parse
} = wp.blockSerializationDefaultParser;
const {
  RawHTML
} = wp.element;

var select = wp.data.select('core/block-editor');






























const ALLOWED_MEDIA_TYPES = ['image'];
var queryPramsX = _queryprams__WEBPACK_IMPORTED_MODULE_26__["default"].map((x, i) => {
  return {
    value: i,
    label: x.label,
    description: x.description,
    isPro: x.isPro
  };
});
var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/post-grid-filterable", {
  title: "Post Grid -  Filterable",
  icon: {
    background: '#2563eb',
    foreground: '#2563eb',
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M274 117C274 114.239 276.239 112 279 112H417C419.761 112 422 114.239 422 117V137C422 139.761 419.761 142 417 142H279C276.239 142 274 139.761 274 137V117Z",
      fill: "#ffffff"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M274 182C274 179.239 276.239 177 279 177H417C419.761 177 422 179.239 422 182V202C422 204.761 419.761 207 417 207H279C276.239 207 274 204.761 274 202V182Z",
      fill: "#ffffff"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("rect", {
      x: "98",
      y: "100",
      width: "118",
      height: "118",
      stroke: "#ffffff",
      "stroke-width": "30"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("rect", {
      x: "94",
      y: "283",
      width: "118",
      height: "118",
      stroke: "#ffffff",
      "stroke-width": "30"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M289 283H407V401H289V283Z",
      stroke: "#ffffff",
      background: "black",
      "stroke-width": "30"
    }))
  },
  providesContext: {
    queryId: "queryId",
    loopIndex: "loopIndex",
    query: "query",
    displayLayout: "displayLayout"
  },
  supports: {
    align: ["left", "right", "center", "wide", "full"],
    html: false
  },
  attributes: {
    lazyLoad: {
      type: 'object',
      default: {
        options: {
          class: 'lazyLoad',
          enable: 'no',
          srcUrl: '',
          srcId: '',
          icon: {
            library: '',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: ''
          }
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    search: {
      type: 'object',
      default: {
        options: {
          class: 'search',
          enable: 'no',
          type: '',
          placeholder: '',
          icon: '',
          busyIcon: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    container: {
      type: 'object',
      default: {
        options: {
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          backgroundImage: {},
          padding: {},
          margin: {}
        }
      }
    },
    itemsWrap: {
      type: 'object',
      default: {
        options: {
          class: 'items-loop'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          margin: {}
        }
      }
    },
    itemWrap: {
      type: 'object',
      default: {
        options: {
          class: 'item'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        hoverStyles: {
          color: {},
          bgColor: {}
        }
      }
    },
    filterable: {
      type: 'object',
      default: {
        options: {
          filters: [],
          allText: 'All',
          logicWithinGroup: '',
          logicBetweenGroups: '',
          multifilter: false,
          showSort: '',
          filterToggle: 'no',
          showRandom: '',
          showAll: 'yes',
          showClear: '',
          activeFilter: '',
          parPage: 6
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          margin: {},
          display: {
            "Desktop": "inline-block"
          },
          cursor: {
            "Desktop": "pointer"
          }
        }
      }
    },
    activeFilter: {
      type: 'object',
      default: {
        options: {
          slug: 'all'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          margin: {}
        }
      }
    },
    filterGroup: {
      type: 'object',
      default: {
        options: {},
        styles: {
          textAlign: {},
          color: {
            "Desktop": "#18978F"
          },
          bgColor: {
            "Desktop": "#9DD6DF"
          },
          wordBreak: {},
          padding: {},
          margin: {},
          display: {
            "Desktop": "inline-block"
          }
        }
      }
    },
    noPostsWrap: {
      type: 'object',
      default: {
        options: {
          class: 'no-posts text-center'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          margin: {}
        }
      }
    },
    spinnerWrap: {
      type: 'object',
      default: {
        options: {
          class: 'spinner'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          margin: {}
        }
      }
    },
    grid: {
      type: 'object',
      default: {
        options: {
          itemCss: {}
        },
        styles: {
          gridTemplateColumns: {},
          gridTemplateRows: {},
          colGap: {},
          rowGap: {},
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    pagination: {
      type: 'object',
      default: {
        options: {
          class: 'pagination',
          type: 'filterable',
          maxPageNum: '',
          prevText: 'Previous',
          nextText: 'Next',
          loadMoreText: 'Load More',
          noMorePosts: 'No More Posts',
          loadingText: 'Loading...',
          loadingIcon: {
            library: '',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: ''
          }
        },
        styles: {
          textAlign: {
            "Desktop": "center"
          },
          color: {
            "Desktop": "#18978F"
          },
          bgColor: {
            "Desktop": "#9DD6DF"
          },
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        hoverStyles: {
          color: {},
          bgColor: {}
        }
      }
    },
    paginationItem: {
      type: 'object',
      default: {
        options: {
          class: 'page-numbers inline-block'
        },
        styles: {
          textAlign: {},
          display: {
            "Desktop": "inline-block"
          },
          color: {
            "Desktop": "#18978F"
          },
          bgColor: {
            "Desktop": "#9DD6DF"
          },
          padding: {
            "Desktop": {
              "top": "10px",
              "right": "10px",
              "bottom": "10px",
              "left": "10px"
            }
          },
          margin: {
            "Desktop": {
              "top": "5px",
              "right": "5px",
              "bottom": "5px",
              "left": "5px"
            }
          },
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        hoverStyles: {
          color: {},
          bgColor: {}
        }
      }
    },
    paginationItemActive: {
      type: 'object',
      default: {
        options: {
          class: 'page-numbers inline-block'
        },
        styles: {
          textAlign: {},
          display: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        hoverStyles: {
          color: {},
          bgColor: {}
        }
      }
    },
    layout: {
      type: 'object',
      default: {
        id: '',
        srcServer: 'library',
        data: [{
          "blockName": "core/post-title",
          "attrs": {},
          "innerBlocks": [],
          "innerHTML": "",
          "innerContent": []
        }, {
          "blockName": null,
          "attrs": {},
          "innerBlocks": [],
          "innerHTML": "\n\n",
          "innerContent": ["\n\n"]
        }, {
          "blockName": "core/post-date",
          "attrs": {},
          "innerBlocks": [],
          "innerHTML": "",
          "innerContent": []
        }, {
          "blockName": null,
          "attrs": {},
          "innerBlocks": [],
          "innerHTML": "\n\n",
          "innerContent": ["\n\n"]
        }, {
          "blockName": "core/post-excerpt",
          "attrs": {
            "moreText": "",
            "textColor": "primary"
          },
          "innerBlocks": [],
          "innerHTML": "",
          "innerContent": []
        }],
        "rawData": "<!-- wp:post-featured-image  /-->\n\n<!-- wp:post-title /-->\n\n<!-- wp:post-excerpt  /-->"
      }
    },
    postTypes: {
      type: 'array',
      default: []
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    scripts: {
      type: 'object',
      default: {
        js: '',
        css: ''
      }
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    queryArgs: {
      type: 'object',
      default: {
        items: [{
          val: ['post'],
          multiple: false,
          id: 'postType',
          label: 'Post Types',
          description: "Select Post Types to Query"
        }, {
          val: ['publish'],
          multiple: false,
          id: 'postStatus',
          label: 'Post status',
          description: "Query post by post status"
        }, {
          val: 'DESC',
          multiple: false,
          id: 'order',
          label: 'Order',
          description: "Post query order"
        }, {
          val: ['date'],
          multiple: false,
          id: 'orderby',
          label: 'Orderby',
          description: "Post query orderby"
        }, {
          val: -1,
          multiple: false,
          id: 'postsPerPage',
          label: 'Posts Per Page',
          description: "Number of post to show per page"
        }, {
          val: 1,
          multiple: false,
          id: 'paged',
          label: 'Paged',
          description: "Pagination start with"
        }]
      }
    }
  },
  category: "post-grid",
  edit: function (props) {
    const blockProps = (0,_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__.useBlockProps)();
    var attributes = props.attributes;
    var clientId = props.clientId;
    var setAttributes = props.setAttributes;
    var lazyLoad = attributes.lazyLoad;
    var container = attributes.container;
    var pagination = attributes.pagination;
    var paginationItem = attributes.paginationItem;
    var paginationItemActive = attributes.paginationItemActive;
    var search = attributes.search;
    var itemsWrap = attributes.itemsWrap;
    var itemWrap = attributes.itemWrap;
    var noPostsWrap = attributes.noPostsWrap;
    var spinnerWrap = attributes.spinnerWrap;
    var filterable = attributes.filterable;
    var activeFilter = attributes.activeFilter;
    var filterGroup = attributes.filterGroup;
    var grid = attributes.grid;
    var layout = attributes.layout;
    var queryArgs = attributes.queryArgs;
    var blockCssY = attributes.blockCssY;
    var customCss = attributes.customCss;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var [isBusy, setIsBusy] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Using the hook.

    var [importLayoutOpen, setimportLayoutOpen] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
      id: 0,
      isOpen: false
    }); // Using the hook.

    var containerSelector = blockClass;
    const loopItemsWrapSelector = blockClass + ' .items-loop';
    const loopItemSelector = blockClass + ' .item';
    const filterGroupSelector = blockClass + ' .filterable-group';
    const filterGroupTitleSelector = blockClass + ' .filterable-group-title';
    const filterSelector = blockClass + ' .pg-filter';
    const filterActiveSelector = blockClass + ' .pg-filter.mixitup-control-active';
    const noPostsSelector = blockClass + ' .no-posts';
    const searchWrapSelector = blockClass + ' .search';
    const lazyloadWrapSelector = blockClass + ' .lazyLoad';
    const spinnerSelector = blockClass + ' .spinner';
    const paginationWrapSelector = blockClass + ' .pagination';
    const paginationItemSelector = blockClass + ' .pagination .page-numbers';
    const paginationItemActiveSelector = blockClass + ' .pagination .page-numbers.mixitup-control-active';
    const BLOCKS_TEMPLATE = [['post-grid/post-title', {}], ['post-grid/read-more', {}]];
    const columnPresets = [{
      label: '1 Column',
      args: [{
        "val": 1,
        "unit": "fr"
      }],
      icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "23",
        height: "17",
        viewBox: "0 0 23 17",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 1.36364C0 0.61052 0.610521 0 1.36364 0H21.6364C22.3895 0 23 0.61052 23 1.36364V1.36364C23 2.11675 22.3895 2.72727 21.6364 2.72727H1.36364C0.61052 2.72727 0 2.11675 0 1.36364V1.36364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 15.6364C0 14.8833 0.610521 14.2727 1.36364 14.2727H21.6364C22.3895 14.2727 23 14.8833 23 15.6364V15.6364C23 16.3895 22.3895 17 21.6364 17H1.36364C0.61052 17 0 16.3895 0 15.6364V15.6364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M1.36363 -5.96064e-08C2.11674 -2.66867e-08 2.72726 0.610521 2.72726 1.36364L2.72726 15.6364C2.72726 16.3895 2.11674 17 1.36363 17C0.610513 17 -7.63055e-06 16.3895 -7.59763e-06 15.6364L-6.97375e-06 1.36364C-6.94083e-06 0.610521 0.610513 -9.25261e-08 1.36363 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M21.6364 -5.96064e-08C22.3895 -2.66867e-08 23 0.610521 23 1.36364L23 15.6364C23 16.3895 22.3895 17 21.6364 17V17C20.8832 17 20.2727 16.3895 20.2727 15.6364L20.2727 1.36364C20.2727 0.610521 20.8832 -9.25261e-08 21.6364 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }))
    }, {
      label: '2 Columns',
      args: [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "43",
        height: "17",
        viewBox: "0 0 43 17",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 1.36364C0 0.61052 0.610521 0 1.36364 0H41.2727C42.0258 0 42.6363 0.61052 42.6363 1.36364C42.6363 2.11675 42.0258 2.72727 41.2727 2.72727H1.36364C0.610521 2.72727 0 2.11675 0 1.36364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 15.6364C0 14.8833 0.610521 14.2727 1.36364 14.2727H41.2727C42.0258 14.2727 42.6363 14.8833 42.6363 15.6364C42.6363 16.3895 42.0258 17 41.2727 17H1.36364C0.610521 17 0 16.3895 0 15.6364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M1.36363 -5.96064e-08C2.11674 -2.66867e-08 2.72726 0.610521 2.72726 1.36364L2.72726 15.6364C2.72726 16.3895 2.11674 17 1.36363 17C0.610513 17 -7.63055e-06 16.3895 -7.59763e-06 15.6364L-6.97375e-06 1.36364C-6.94083e-06 0.610521 0.610513 -9.25261e-08 1.36363 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M21.6364 -5.96064e-08C22.3895 -2.66867e-08 23 0.610521 23 1.36364L23 15.6364C23 16.3895 22.3895 17 21.6364 17C20.8832 17 20.2727 16.3895 20.2727 15.6364L20.2727 1.36364C20.2727 0.610521 20.8832 -9.25261e-08 21.6364 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M41.6364 -5.96064e-08C42.3895 -2.66867e-08 43 0.610521 43 1.36364L43 15.6364C43 16.3895 42.3895 17 41.6364 17C40.8832 17 40.2727 16.3895 40.2727 15.6364L40.2727 1.36364C40.2727 0.610521 40.8832 -9.25261e-08 41.6364 -5.96064e-08Z",
        fill: "#fff"
      }))
    }, {
      label: '3 Columns',
      args: [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "43",
        height: "17",
        viewBox: "0 0 43 17",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 1.36364C0 0.61052 0.610521 0 1.36364 0H41.2727C42.0258 0 42.6363 0.61052 42.6363 1.36364C42.6363 2.11675 42.0258 2.72727 41.2727 2.72727H1.36364C0.610521 2.72727 0 2.11675 0 1.36364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 15.6364C0 14.8833 0.610521 14.2727 1.36364 14.2727H41.2727C42.0258 14.2727 42.6363 14.8833 42.6363 15.6364C42.6363 16.3895 42.0258 17 41.2727 17H1.36364C0.610521 17 0 16.3895 0 15.6364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M1.36363 -5.96064e-08C2.11674 -2.66867e-08 2.72726 0.610521 2.72726 1.36364L2.72726 15.6364C2.72726 16.3895 2.11674 17 1.36363 17C0.610513 17 -7.63055e-06 16.3895 -7.59763e-06 15.6364L-6.97375e-06 1.36364C-6.94083e-06 0.610521 0.610513 -9.25261e-08 1.36363 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M14.6364 -5.96064e-08C15.3895 -2.66867e-08 16 0.610521 16 1.36364L16 15.6364C16 16.3895 15.3895 17 14.6364 17C13.8832 17 13.2727 16.3895 13.2727 15.6364L13.2727 1.36364C13.2727 0.610521 13.8832 -9.25261e-08 14.6364 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M28.6364 -5.96064e-08C29.3895 -2.66867e-08 30 0.610521 30 1.36364L30 15.6364C30 16.3895 29.3895 17 28.6364 17C27.8832 17 27.2727 16.3895 27.2727 15.6364L27.2727 1.36364C27.2727 0.61052 27.8832 -9.25261e-08 28.6364 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M41.6364 -5.96064e-08C42.3895 -2.66867e-08 43 0.610521 43 1.36364L43 15.6364C43 16.3895 42.3895 17 41.6364 17C40.8832 17 40.2727 16.3895 40.2727 15.6364L40.2727 1.36364C40.2727 0.610521 40.8832 -9.25261e-08 41.6364 -5.96064e-08Z",
        fill: "#fff"
      }))
    }, {
      label: '4 Columns',
      args: [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "43",
        height: "17",
        viewBox: "0 0 43 17",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 1.36364C0 0.61052 0.610521 0 1.36364 0H41.2727C42.0258 0 42.6363 0.61052 42.6363 1.36364V1.36364C42.6363 2.11675 42.0258 2.72727 41.2727 2.72727H1.36364C0.610521 2.72727 0 2.11675 0 1.36364V1.36364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 15.6364C0 14.8833 0.610521 14.2727 1.36364 14.2727H41.2727C42.0258 14.2727 42.6363 14.8833 42.6363 15.6364V15.6364C42.6363 16.3895 42.0258 17 41.2727 17H1.36364C0.610521 17 0 16.3895 0 15.6364V15.6364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M1.36366 -5.96064e-08C2.11677 -2.66867e-08 2.72729 0.610521 2.72729 1.36364L2.72729 15.6364C2.72729 16.3895 2.11677 17 1.36366 17V17C0.610543 17 2.2887e-05 16.3895 2.292e-05 15.6364L2.35438e-05 1.36364C2.35768e-05 0.610521 0.610544 -9.25261e-08 1.36366 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M11.3636 -5.96064e-08C12.1167 -2.66867e-08 12.7273 0.610521 12.7273 1.36364L12.7273 15.6364C12.7273 16.3895 12.1167 17 11.3636 17V17C10.6105 17 9.99999 16.3895 9.99999 15.6364L9.99999 1.36364C9.99999 0.610521 10.6105 -9.25261e-08 11.3636 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M21.3636 -5.96064e-08C22.1167 -2.66867e-08 22.7273 0.610521 22.7273 1.36364L22.7273 15.6364C22.7273 16.3895 22.1167 17 21.3636 17V17C20.6105 17 20 16.3895 20 15.6364L20 1.36364C20 0.61052 20.6105 -9.25261e-08 21.3636 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M31.3636 -5.96064e-08C32.1167 -2.66867e-08 32.7273 0.610521 32.7273 1.36364L32.7273 15.6364C32.7273 16.3895 32.1167 17 31.3636 17V17C30.6105 17 30 16.3895 30 15.6364L30 1.36364C30 0.610521 30.6105 -9.25261e-08 31.3636 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M41.3636 -5.96064e-08C42.1167 -2.66867e-08 42.7273 0.610521 42.7273 1.36364L42.7273 15.6364C42.7273 16.3895 42.1167 17 41.3636 17V17C40.6105 17 40 16.3895 40 15.6364L40 1.36364C40 0.610521 40.6105 -9.25261e-08 41.3636 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }))
    }];
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
      blockCssY.items[loopItemSelector] = blockCssY.items[loopItemSelector] != undefined ? blockCssY.items[loopItemSelector] : {};
      blockCssY.items[paginationWrapSelector] = blockCssY.items[paginationWrapSelector] != undefined ? blockCssY.items[paginationWrapSelector] : {};
      var wordBreak = blockCssY.items[loopItemSelector]['word-break'] != undefined ? blockCssY.items[loopItemSelector]['word-break'] : {};
      wordBreak[breakPointX] = 'break-word';
      blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
        'word-break': wordBreak
      };
      blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
        'text-align': {
          "Desktop": "center"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'display': {
          "Desktop": "inline-block"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'cursor': {
          "Desktop": "pointer"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'color': {
          "Desktop": "#18978F"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'background-color': {
          "Desktop": "#9DD6DF"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'margin-left': {
          "Desktop": "5px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'margin-right': {
          "Desktop": "5px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'padding-top': {
          "Desktop": "10px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'padding-right': {
          "Desktop": "10px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'padding-bottom': {
          "Desktop": "10px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'padding-left': {
          "Desktop": "10px"
        }
      };
      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
      var paginationOptons = { ...pagination.options,
        type: 'filterable'
      };
      setAttributes({
        pagination: { ...pagination,
          options: paginationOptons
        }
      });
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      blockCssY.items[loopItemsWrapSelector] = blockCssY.items[loopItemsWrapSelector] != undefined ? blockCssY.items[loopItemsWrapSelector] : {};
      var display = blockCssY.items[loopItemsWrapSelector]['display'] != undefined ? blockCssY.items[loopItemsWrapSelector]['display'] : {};
      display[breakPointX] = 'grid';
      blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
        'display': display
      };

      if (grid.styles.gridTemplateColumns[breakPointX] != undefined) {
        var gridTemplateColumns = blockCssY.items[loopItemsWrapSelector]['grid-template-columns'] != undefined ? blockCssY.items[loopItemsWrapSelector]['grid-template-columns'] : {};
        gridTemplateColumns[breakPointX] = grid.styles.gridTemplateColumns[breakPointX].map(item => {
          return item.val + item.unit + ' ';
        }).join(' ');
        blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
          'grid-template-columns': gridTemplateColumns
        };
      }

      if (grid.styles.gridTemplateRows[breakPointX] != undefined) {
        var gridTemplateRows = blockCssY.items[loopItemsWrapSelector]['grid-template-rows'] != undefined ? blockCssY.items[loopItemsWrapSelector]['grid-template-rows'] : {};
        gridTemplateRows[breakPointX] = grid.styles.gridTemplateRows[breakPointX].map(item => {
          return item.val + item.unit + ' ';
        }).join(' ');
        blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
          'grid-template-rows': gridTemplateRows
        };
      }

      if (grid.styles.colGap[breakPointX] != undefined) {
        var colGap = blockCssY.items[loopItemsWrapSelector]['column-gap'] != undefined ? blockCssY.items[loopItemsWrapSelector]['column-gap'] : {};
        colGap[breakPointX] = grid.styles.colGap[breakPointX].val + grid.styles.colGap[breakPointX].unit;
        blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
          'column-gap': colGap
        };
      }

      if (grid.styles.rowGap[breakPointX] != undefined) {
        var rowGap = blockCssY.items[loopItemsWrapSelector]['row-gap'] != undefined ? blockCssY.items[loopItemsWrapSelector]['row-gap'] : {};
        rowGap[breakPointX] = grid.styles.rowGap[breakPointX].val + grid.styles.rowGap[breakPointX].unit;
        blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
          'row-gap': rowGap
        };
      }

      var nthItemsResponsive = [];
      var itemX = { ...blockCssY.items
      };
      Object.entries(grid.options.itemCss).map(args => {
        /****breakPoint****/
        var breakPoint = args[0];
        var nthItems = args[1];
        nthItems.length > 0 && nthItems.map((x, i) => {
          /****nthItems****/
          Object.entries(x).map(attr => {
            var attrId = attr[0];
            var attrVal = attr[1];

            if (nthItemsResponsive[i] != undefined) {//nthItemsResponsive[i] = [];
            } else {
              nthItemsResponsive[i] = [];
            }

            if (nthItemsResponsive[i][attrId] != undefined) {//nthItemsResponsive[i][attrId] = [];
            } else {
              nthItemsResponsive[i][attrId] = [];
            }

            if (nthItemsResponsive[i][attrId][breakPoint] != undefined) {
              nthItemsResponsive[i][attrId][breakPoint] = attrVal;
            } else {
              nthItemsResponsive[i][attrId][breakPoint] = attrVal;
            }
          });
        });
      });

      for (var i = 0; i < 10; i++) {
        var selector = `${blockClass} .item:nth-child(${i})`;

        if (blockCssY.items[selector] != undefined) {
          delete blockCssY.items[selector];
        }
      }

      var imtasdas = {};
      nthItemsResponsive.length > 0 && nthItemsResponsive.map((nth, i) => {
        var selector = `${blockClass} .item:nth-child(${i + 1})`;
        Object.entries(nth).map(attr => {
          var attrId = attr[0];
          var attrVal = attr[1];

          if (imtasdas[selector] != undefined) {} else {
            imtasdas[selector] = {};
          }

          if (imtasdas[selector][attrId] != undefined) {} else {
            imtasdas[selector][attrId] = {};
          }

          imtasdas[selector][attrId] = attrVal;
        });
      });
      var asdsd = { ...blockCssY.items,
        ...imtasdas
      };
      setAttributes({
        blockCssY: {
          items: asdsd
        }
      });
    }, [grid]);
    var [layoutImporting, setlayoutImporting] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Using the hook.

    const [filterablTerms, setFilterablTerms] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    function fetchPostTypeTerms(keyword) {
      var postTypes = [];
      var terms = [];
      setFilterablTerms([]);
      queryArgs.items.map(x => {
        if (x.id == 'postType') {
          postTypes.push(x.val);
        }
      });
      var sss = _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4___default()({
        path: '/post-grid/v2/post_type_objects',
        method: 'POST',
        data: {
          postTypes: postTypes[0],
          search: keyword
        }
      }).then(result => {
        //setFilterablTerms(result);
        result.length > 0 && result.map(x => {
          _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4___default()({
            path: '/post-grid/v2/get_tax_terms',
            method: 'POST',
            data: {
              taxonomy: x.id,
              search: keyword
            }
          }).then(res => {
            //setFilterablTerms(res);
            res.length > 0 && res.map(y => {
              terms.push(y);
            });
            setFilterablTerms(terms);
          });
        }); //return result;
      });
    }

    function importLayout(postData) {
      setTimeout(() => {
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4___default()({
          path: '/post-grid/v2/import_post_grid_template',
          method: 'POST',
          data: {
            postData: postData
          }
        }).then(res => {
          setlayoutImporting(false);
        });
      }, 2000);
    }

    var [debounce, setDebounce] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Using the hook.

    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore != null ? myStore.getBreakPoint() : 'Desktop');
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(window.PostGridPluginData);
    const [clientData, setClientData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const paginationTypes = {
      none: {
        label: 'None',
        value: 'none',
        isPro: false
      },
      filterable: {
        label: 'Filterable',
        value: 'filterable',
        isPro: true
      }
    }; // [
    //       { label: 'None', value: 'none', isPro: false },
    //       { label: 'Normal Pagination', value: 'normal', isPro: false },
    //       { label: 'Ajax Pagination', value: 'ajax', isPro: true },
    //       { label: 'Next-Previous', value: 'next_previous', isPro: true },
    //       { label: 'Load More', value: 'loadmore', isPro: true },
    //       { label: 'Infinite Load', value: 'infinite', isPro: true },
    //     ]

    var clientDataX = myStore != null ? myStore.getclientdata() : '';
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setPostGridData(window.PostGridPluginData);
    }, [window.PostGridPluginData]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setClientData(myStore != null ? myStore.getclientdata() : '');
    }, [clientDataX]); // var ItemNthCssadasd2 = grid.options.itemCss.map((x, i) => {
    //   return (
    //     `<style>.item:nth-child(${i + 1}){grid-column-start: ${x['grid-column-start']};grid-column-end: ${x['grid-column-end']};grid-row-start: ${x['grid-row-start']};grid-row-end: ${x['grid-row-end']};}</style>`
    //   )
    // });

    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function addQueryPreset(option, index) {
      queryArgs.items = option.value.items;
      setAttributes({
        queryArgs: {
          items: queryArgs.items
        }
      });
      fetchPosts();
    }

    var postTypes = [];
    const postTypesData = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_7__.useSelect)(select => select(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_8__.store).getPostTypes({
      per_page: -1
    }), []);
    postTypesData !== null && postTypesData.map(x => {
      postTypes.push({
        value: x.slug,
        label: x.name
      });
    });
    const TEMPLATE = [['core/post-title'], ['core/post-date'], ['core/post-excerpt']];
    const TEMPLATE1 = [['core/post-date'], ['core/post-title'], ['core/post-excerpt']];
    var blocks = select.getBlocks(clientId);
    var defaultBloicks = [];
    var [blocksX, setBlocksX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(blocks); // Using the hook.

    var [TEMPLATEX, setTEMPLATEX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(TEMPLATE); // Using the hook.

    function PostTemplateInnerBlocks(_ref) {
      let {
        attsx
      } = _ref;
      const innerBlocksProps = (0,_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__.useInnerBlocksProps)({
        className: 'item'
      }, {
        template: attsx
      });
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", innerBlocksProps);
    }

    function PostTemplateBlockPreview(_ref2) {
      let {
        blocks,
        blockContextId,
        isHidden,
        setActiveBlockContextId
      } = _ref2;
      const blockPreviewProps = (0,_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__.__experimentalUseBlockPreview)({
        blocks,
        props: {
          className: 'item'
        }
      });

      const handleOnClick = () => {
        setActiveBlockContextId(blockContextId);
      };

      const style = {
        display: isHidden ? 'none' : undefined
      };
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockPreviewProps, {
        tabIndex: 0 // eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role
        ,
        role: "button",
        onClick: handleOnClick,
        onKeyPress: handleOnClick,
        style: style
      }));
    }

    const MemoizedPostTemplateBlockPreview = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.memo)(PostTemplateBlockPreview);
    const [activeBlockContextId, setActiveBlockContextId] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)();

    function PostLoopItem() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, " ");
    }

    function generateDateQueryArgs(_args) {}

    function onChangeBreakPoint(x, _index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    function containerPaddingControl(nextValues) {
      var responsive = container.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...container.styles,
        padding: responsive
      };
      setAttributes({
        container: { ...container,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[containerSelector] = blockCssY.items[containerSelector] != undefined ? blockCssY.items[containerSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[containerSelector]['padding-top'] != undefined ? blockCssY.items[containerSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[containerSelector]['padding-right'] != undefined ? blockCssY.items[containerSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[containerSelector]['padding-bottom'] != undefined ? blockCssY.items[containerSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[containerSelector]['padding-left'] != undefined ? blockCssY.items[containerSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function containerMarginControl(nextValues) {
      var responsive = container.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...container.styles,
        margin: responsive
      };
      setAttributes({
        container: { ...container,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[containerSelector] = blockCssY.items[containerSelector] != undefined ? blockCssY.items[containerSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[containerSelector]['margin-top'] != undefined ? blockCssY.items[containerSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[containerSelector]['margin-right'] !== undefined ? blockCssY.items[containerSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[containerSelector]['margin-bottom'] !== undefined ? blockCssY.items[containerSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[containerSelector]['margin-left'] !== undefined ? blockCssY.items[containerSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function activeFilterPaddingControl(nextValues) {
      var responsive = activeFilter.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...activeFilter.styles,
        padding: responsive
      };
      setAttributes({
        activeFilter: { ...activeFilter,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[filterActiveSelector] = blockCssY.items[filterActiveSelector] != undefined ? blockCssY.items[filterActiveSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[filterActiveSelector]['padding-top'] != undefined ? blockCssY.items[filterActiveSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[filterActiveSelector]['padding-right'] != undefined ? blockCssY.items[filterActiveSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[filterActiveSelector]['padding-bottom'] != undefined ? blockCssY.items[filterActiveSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[filterActiveSelector]['padding-left'] != undefined ? blockCssY.items[filterActiveSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function filterablePaddingControl(nextValues) {
      var responsive = filterable.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...filterable.styles,
        padding: responsive
      };
      setAttributes({
        filterable: { ...filterable,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[filterSelector] = blockCssY.items[filterSelector] != undefined ? blockCssY.items[filterSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[filterSelector]['padding-top'] != undefined ? blockCssY.items[filterSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[filterSelector]['padding-right'] != undefined ? blockCssY.items[filterSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[filterSelector]['padding-bottom'] != undefined ? blockCssY.items[filterSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[filterSelector]['padding-left'] != undefined ? blockCssY.items[filterSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function paginationPaddingControl(nextValues) {
      var responsive = pagination.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...pagination.styles,
        padding: responsive
      };
      setAttributes({
        pagination: { ...pagination,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[paginationWrapSelector] = blockCssY.items[paginationWrapSelector] != undefined ? blockCssY.items[paginationWrapSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[paginationWrapSelector]['padding-top'] != undefined ? blockCssY.items[paginationWrapSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[paginationWrapSelector]['padding-right'] != undefined ? blockCssY.items[paginationWrapSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[paginationWrapSelector]['padding-bottom'] != undefined ? blockCssY.items[paginationWrapSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[paginationWrapSelector]['padding-left'] != undefined ? blockCssY.items[paginationWrapSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function paginationItemPaddingControl(nextValues) {
      var responsive = paginationItem.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...paginationItem.styles,
        padding: responsive
      };
      setAttributes({
        paginationItem: { ...paginationItem,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[paginationItemSelector] = blockCssY.items[paginationItemSelector] != undefined ? blockCssY.items[paginationItemSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[paginationItemSelector]['padding-top'] != undefined ? blockCssY.items[paginationItemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'padding-top': paddingTop
        }; //itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[paginationItemSelector]['padding-right'] != undefined ? blockCssY.items[paginationItemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'padding-right': paddingRight
        }; //itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[paginationItemSelector]['padding-bottom'] != undefined ? blockCssY.items[paginationItemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[paginationItemSelector]['padding-left'] != undefined ? blockCssY.items[paginationItemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function itemwrapPaddingControl(nextValues) {
      var responsive = itemWrap.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...itemWrap.styles,
        padding: responsive
      };
      setAttributes({
        itemWrap: { ...itemWrap,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[loopItemSelector] = blockCssY.items[loopItemSelector] != undefined ? blockCssY.items[loopItemSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[loopItemSelector]['padding-top'] != undefined ? blockCssY.items[loopItemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[loopItemSelector]['padding-right'] != undefined ? blockCssY.items[loopItemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[loopItemSelector]['padding-bottom'] != undefined ? blockCssY.items[loopItemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[loopItemSelector]['padding-left'] != undefined ? blockCssY.items[loopItemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function filterGroupPaddingControl(nextValues) {
      var responsive = filterGroup.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...filterGroup.styles,
        padding: responsive
      };
      setAttributes({
        filterGroup: { ...filterGroup,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[filterGroupSelector] = blockCssY.items[filterGroupSelector] != undefined ? blockCssY.items[filterGroupSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[filterGroupSelector]['padding-top'] != undefined ? blockCssY.items[filterGroupSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[filterGroupSelector]['padding-right'] != undefined ? blockCssY.items[filterGroupSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[filterGroupSelector]['padding-bottom'] != undefined ? blockCssY.items[filterGroupSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[filterGroupSelector]['padding-left'] != undefined ? blockCssY.items[filterGroupSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function activeFilterMarginControl(nextValues) {
      var responsive = activeFilter.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...activeFilter.styles,
        margin: responsive
      };
      setAttributes({
        activeFilter: { ...activeFilter,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[filterActiveSelector] = blockCssY.items[filterActiveSelector] != undefined ? blockCssY.items[filterActiveSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[filterActiveSelector]['margin-top'] != undefined ? blockCssY.items[filterActiveSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[filterActiveSelector]['margin-right'] !== undefined ? blockCssY.items[filterActiveSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[filterActiveSelector]['margin-bottom'] !== undefined ? blockCssY.items[filterActiveSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[filterActiveSelector]['margin-left'] !== undefined ? blockCssY.items[filterActiveSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function filterableMarginControl(nextValues) {
      var responsive = filterable.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...filterable.styles,
        margin: responsive
      };
      setAttributes({
        filterable: { ...filterable,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[filterSelector] = blockCssY.items[filterSelector] != undefined ? blockCssY.items[filterSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[filterSelector]['margin-top'] != undefined ? blockCssY.items[filterSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[filterSelector]['margin-right'] !== undefined ? blockCssY.items[filterSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[filterSelector]['margin-bottom'] !== undefined ? blockCssY.items[filterSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[filterSelector]['margin-left'] !== undefined ? blockCssY.items[filterSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function filterGroupMarginControl(nextValues) {
      var responsive = filterGroup.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...filterGroup.styles,
        margin: responsive
      };
      setAttributes({
        filterGroup: { ...filterGroup,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[filterGroupSelector] = blockCssY.items[filterGroupSelector] != undefined ? blockCssY.items[filterGroupSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[filterGroupSelector]['margin-top'] != undefined ? blockCssY.items[filterGroupSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[filterGroupSelector]['margin-right'] !== undefined ? blockCssY.items[filterGroupSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[filterGroupSelector]['margin-bottom'] !== undefined ? blockCssY.items[filterGroupSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[filterGroupSelector]['margin-left'] !== undefined ? blockCssY.items[filterGroupSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function paginationMarginControl(nextValues) {
      var responsive = pagination.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...pagination.styles,
        margin: responsive
      };
      setAttributes({
        pagination: { ...pagination,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[paginationWrapSelector] = blockCssY.items[paginationWrapSelector] != undefined ? blockCssY.items[paginationWrapSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[paginationWrapSelector]['margin-top'] != undefined ? blockCssY.items[paginationWrapSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[paginationWrapSelector]['margin-right'] !== undefined ? blockCssY.items[paginationWrapSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[paginationWrapSelector]['margin-bottom'] !== undefined ? blockCssY.items[paginationWrapSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[paginationWrapSelector]['margin-left'] !== undefined ? blockCssY.items[paginationWrapSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function paginationItemMarginControl(nextValues) {
      var responsive = paginationItem.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...paginationItem.styles,
        margin: responsive
      };
      setAttributes({
        paginationItem: { ...paginationItem,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[paginationItemSelector] = blockCssY.items[paginationItemSelector] != undefined ? blockCssY.items[paginationItemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[paginationItemSelector]['margin-top'] != undefined ? blockCssY.items[paginationItemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[paginationItemSelector]['margin-right'] !== undefined ? blockCssY.items[paginationItemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[paginationItemSelector]['margin-bottom'] !== undefined ? blockCssY.items[paginationItemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[paginationItemSelector]['margin-left'] !== undefined ? blockCssY.items[paginationItemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function itemwrapMarginControl(nextValues) {
      var responsive = itemWrap.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...itemWrap.styles,
        margin: responsive
      };
      setAttributes({
        itemWrap: { ...itemWrap,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[loopItemSelector] = blockCssY.items[loopItemSelector] != undefined ? blockCssY.items[loopItemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[loopItemSelector]['margin-top'] != undefined ? blockCssY.items[loopItemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[loopItemSelector]['margin-right'] !== undefined ? blockCssY.items[loopItemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[loopItemSelector]['margin-bottom'] !== undefined ? blockCssY.items[loopItemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[loopItemSelector]['margin-left'] !== undefined ? blockCssY.items[loopItemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', "");
        setTimeout(() => {
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 100);
      }
    }

    const [posts, setPosts] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [postsQuery, setPostsQuery] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Using the hook.

    const [paginationItems, setPaginationItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    function fetchPosts() {
      setPostsQuery(true);
      setIsBusy(true);
      var arg = queryArgs.items.map(item => {
        return {
          id: item.id,
          val: item.val
        };
      });
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4___default()({
        path: '/post-grid/v2/get_posts',
        method: 'POST',
        data: {
          queryArgs: arg,
          rawData: layout.rawData
        }
      }).then(res => {
        setPostsQuery(false);
        setPosts(res.posts);
        setPaginationItems(res.pagination);
        setIsBusy(false);
      });
    }

    function generateLayout(x, _i) {
      var savedBlocks = layout.data;
      var content = "<!-- wp:paragraph --><p>paragraph one</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>then two</p><!-- /wp:paragraph -->"; // Parse the serialized content into valid blocks using parse from @wordpress/block-serialization-default-parser

      var blocks = savedBlocks.length > 0 ? savedBlocks : parse(content);
      var sss = blocks.map((block, i) => {
        if (block.blockName !== null) {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, block.innerBlocks.length > 0 ? recursInnerBlocksHtml(block.innerBlocks, i) : block.innerHTML);
        }
      });
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "bg-gray-400 p-3 "
      }, x.post_title, sss);
    }

    function recursInnerBlocksHtml(blocks) {
      let _index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var xx = blocks.map((block, i) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, "2nd Block", block.innerBlocks.length > 0 ? block.innerHTML + recursInnerBlocksHtml(block.innerBlocks, i) : block.innerHTML);
      });
      return xx;
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      fetchPosts();
    }, [layout]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      fetchPosts();
    }, [queryArgs]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      fetchLayouts();
      fetchLayoutData();
    }, [container]);

    function onChangeItemWrapTypo(typoX) {
      setAttributes({
        itemWrap: { ...itemWrap,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[loopItemSelector]['font-size'] != undefined ? blockCssY.items[loopItemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[loopItemSelector]['line-height'] != undefined ? blockCssY.items[loopItemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[loopItemSelector]['letter-spacing'] != undefined ? blockCssY.items[loopItemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'text-transform': typoX.textTransform
        };
      }

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangePaginationTypo(typoX) {
      setAttributes({
        paginationItem: { ...paginationItem,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[paginationItemSelector]['font-size'] != undefined ? blockCssY.items[paginationItemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[paginationItemSelector]['line-height'] != undefined ? blockCssY.items[paginationItemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[paginationItemSelector]['letter-spacing'] != undefined ? blockCssY.items[paginationItemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function selectLayout(id, postContent) {
      var srcServer = layoutData.source;

      if (srcServer == 'library') {
        var blocks = parse(postContent);
        setAttributes({
          layout: {
            id: null,
            srcServer: srcServer,
            data: blocks,
            rawData: postContent
          }
        });
        var allStyle = {};
        blocks.map((block, i) => {
          var items = block.attrs.blockCssY != undefined ? block.attrs.blockCssY.items : [];

          if (Object.entries(items).length > 0) {
            Object.entries(items).map(data => {
              var handle = data[0];
              var css = data[1];
              allStyle[handle] = css;
            });
          }
        });
        var xxx = { ...blockCssY.items,
          ...allStyle
        };
        setAttributes({
          blockCssY: {
            items: xxx
          }
        });
      } else {
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4___default()({
          path: '/post-grid/v2/get_post_data',
          method: 'POST',
          data: {
            postId: id
          }
        }).then(res => {
          var postContent = res.post_content.replace(/(^[ \t]*\n)/gm, "");
          var blocks = parse(postContent);
          setAttributes({
            layout: {
              id: id,
              srcServer: srcServer,
              data: blocks,
              rawData: postContent
            }
          });
          var allStyle = {};
          blocks.map((block, i) => {
            var items = block.attrs.blockCssY != undefined ? block.attrs.blockCssY.items : [];

            if (Object.entries(items).length > 0) {
              Object.entries(items).map(data => {
                var handle = data[0];
                var css = data[1];
                allStyle[handle] = css;
              });
            }
          });
          var xxx = { ...blockCssY.items,
            ...allStyle
          };
          setAttributes({
            blockCssY: {
              items: xxx
            }
          });
        });
      } //console.log(wp.data.select('core/block-editor').getBlocks());
      //wp.data.dispatch('core/block-editor').insertBlocks(wp.blocks.parse(post_content));
      //wp.data.dispatch('core/notices').createNotice('success', 'Here is our notice!');
      //var content = "<!-- wp:paragraph --><p>paragraph one</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>then two</p><!-- /wp:paragraph -->";
      //Parse the serialized content into valid blocks using parse from @wordpress/block-serialization-default-parser
      // var gutblock = wp.blocks.rawHandler({
      //   HTML: post_content,
      // });
      //setBlocksX(gutblock)
      // setAttributes({ layout: { id: id, data: blocks, rawData: post_content } })

    }

    const [queryLayouts, setQueryLayouts] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
      keyword: '',
      page: 1,
      category: ''
    });
    var [layoutList, setLayoutList] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
      items: []
    });
    var [layoutData, setLayoutData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
      source: 'library'
    });
    var [layoutLoading, setLayoutLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    var [layoutCats, setLayoutCats] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var keywordLength = queryLayouts.keyword.length;

      if (keywordLength != 0) {
        if (keywordLength >= 4) {
          fetchLayouts();
        } else {}
      } else {
        fetchLayouts();
      }
    }, [layoutData]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var keywordLength = queryLayouts.keyword.length;

      if (keywordLength != 0) {
        if (keywordLength >= 4) {
          fetchLayouts();
        } else {}
      } else {
        fetchLayouts();
      }
    }, [queryLayouts]);

    function fetchLayouts() {
      setLayoutLoading(true);

      if (layoutData.source == 'saved') {
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4___default()({
          path: '/post-grid/v2/get_posts_layout',
          method: 'POST',
          data: {
            category: queryLayouts.category,
            page: queryLayouts.page,
            keyword: queryLayouts.keyword
          }
        }).then(res => {
          setLayoutList({
            items: res.posts
          });
          setLayoutCats(res.terms);
          setLayoutLoading(false);
        });
      } else {
        fetch("https://getpostgrid.com/wp-json/postlayout/v2/get_post_layouts?category=" + queryLayouts.category + "&page=" + queryLayouts.page + "&keyword=" + queryLayouts.keyword, {
          method: "GET",
          headers: {
            "Content-Type": "application/json;charset=utf-8"
          }
        }).then(response => {
          if (response.ok && response.status < 400) {
            response.json().then(data => {
              setLayoutList({
                items: data.posts
              });
              setLayoutCats(data.terms);
              setLayoutLoading(false);
            });
          }
        }).catch(_error => {//this.saveAsStatus = 'error';
          // handle the error
        });
      }
    }

    function fetchLayoutData() {
      setQueryLayouts({
        keyword: queryLayouts.keyword,
        page: queryLayouts.page,
        category: queryLayouts.category
      });
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_4___default()({
        path: '/post-grid/v2/get_posts_layout',
        method: 'POST',
        data: {
          category: queryLayouts.category,
          source: queryLayouts.source,
          page: queryLayouts.page,
          keyword: queryLayouts.keyword
        }
      }).then(_res => {
        setLayoutData({
          source: layoutData.source
        });
        setQueryLayouts({
          keyword: queryLayouts.keyword,
          page: queryLayouts.page,
          category: queryLayouts.category
        });
      });
    }

    function generateQueryFieldAuthorIn(_xx) {
      var xxts = [12, 24, 32];
      var xxt = [1, 2, 3].concat(xxts);
      return xxt.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, x);
      });
    }

    function updateQueryPram(newVal, index) {
      var itemData = queryArgs.items[index];
      itemData.val = newVal;
      queryArgs.items[index] = itemData;
      setAttributes({
        queryArgs: {
          items: queryArgs.items
        }
      });
      fetchPosts(); // if (itemData.id == 's' || itemData.id == 'order'  ) {
      //     itemData.val = newVal;
      //     queryArgs.items[index] = itemData;
      //     setAttributes({ queryArgs: { items: queryArgs.items } });
      // }
      // if (itemData.id == 'postType' || itemData.id == 'orderby' || itemData.id == 'postStatus') {
      //     itemData.val = newVal;
      //     queryArgs.items[index] = itemData;
      //     setAttributes({ queryArgs: { items: queryArgs.items } });
      // }
      //queryArgs.items.splice(i, 1);
    }

    function generateQueryArgOptions(item, index) {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: " "
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
        title: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RemoveQueryPram, {
          title: item.label,
          index: index
        }),
        initialOpen: false
      }, item.id == 'postType' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'postType' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_input_select__WEBPACK_IMPORTED_MODULE_20__["default"], {
        val: item.val,
        options: postTypes,
        multiple: true,
        onChange: newVal => {
          updateQueryPram(newVal, index);
        }
      })), item.id == 'postStatus' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'postStatus' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_input_select__WEBPACK_IMPORTED_MODULE_20__["default"], {
        val: item.val,
        options: [{
          label: 'Publish',
          value: 'publish'
        }, {
          label: 'Pending',
          value: 'pending'
        }, {
          label: 'Draft',
          value: 'draft'
        }, {
          label: 'Auto draft',
          value: 'auto-draft'
        }, {
          label: 'Future',
          value: 'future'
        }, {
          label: 'Private',
          value: 'private'
        }, {
          label: 'Inherit',
          value: 'inherit'
        }, {
          label: 'Trash',
          value: 'trash'
        }, {
          label: 'Any',
          value: 'any'
        }],
        multiple: true,
        onChange: newVal => {
          updateQueryPram(newVal, index);
        }
      })), item.id == 'order' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'order' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val,
        options: [{
          label: 'Ascending',
          value: 'ASC'
        }, {
          label: 'Descending',
          value: 'DESC'
        }],
        onChange: newVal => updateQueryPram(newVal, index)
      })), item.id == 'orderby' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'orderby' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_input_select__WEBPACK_IMPORTED_MODULE_20__["default"], {
        val: item.val,
        options: [{
          label: 'None',
          value: 'none'
        }, {
          label: 'ID',
          value: 'ID'
        }, {
          label: 'Author',
          value: 'author'
        }, {
          label: 'Title',
          value: 'title'
        }, {
          label: 'Name',
          value: 'name'
        }, {
          label: 'Type',
          value: 'type'
        }, {
          label: 'Date',
          value: 'date'
        }, {
          label: 'Modified',
          value: 'modified'
        }, {
          label: 'Parent',
          value: 'parent'
        }, {
          label: 'Random',
          value: 'rand'
        }, {
          label: 'Comment Count',
          value: 'comment_count'
        }, {
          label: 'Relevance',
          value: 'relevance'
        }, {
          label: 'Menu Order',
          value: 'menu_order'
        }, {
          label: 'Meta Value(String)',
          value: 'meta_value'
        }, {
          label: 'Meta Value(Number)',
          value: 'meta_value_num'
        }, {
          label: 'post__in',
          value: 'post__in'
        }, {
          label: 'post_name__in',
          value: 'post_name__in'
        }, {
          label: 'post_parent__in',
          value: 'post_parent__in'
        }],
        multiple: true,
        onChange: newVal => {
          updateQueryPram(newVal, index);
        }
      })), item.id == 'taxQueryRelation' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'taxQueryRelation' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val,
        options: [{
          label: 'OR',
          value: 'OR'
        }, {
          label: 'AND',
          value: 'AND'
        }],
        onChange: newVal => updateQueryPram(newVal, index)
      })), item.id == 'metaQuery' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
        utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-metaQuery"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "underline"
      }, "Meta Query"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: postGridData.license_status != 'active' ? '' : ''
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer inline-block mb-2 px-3 py-1 text-white bg-blue-600 text-sm",
        onClick: _ev => {
          var itemData = queryArgs.items[index];
          var xx = itemData.val.concat({
            fields: [{
              key: '',
              value: '',
              type: '',
              compare: ''
            }],
            relation: 'OR'
          });
          queryArgs.items[index].val = xx;
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      }, "Add"), item.val.map((x, j) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
          title: "Meta Field",
          initialOpen: false
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "cursor-pointer inline-block mb-2 px-3 py-1 text-white bg-red-600 text-sm",
          onClick: _ev => {
            var itemData = queryArgs.items[index];
            var xx = itemData.val.splice(j, 1);
            queryArgs.items[index].val = itemData.val;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Remove"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, "Relation"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
          style: {
            margin: 0
          },
          label: "",
          value: x.relation,
          options: [{
            label: 'OR',
            value: 'OR'
          }, {
            label: 'AND',
            value: 'AND'
          }],
          onChange: newVal => {
            var itemData = queryArgs.items[index]; //itemData.val.relation = newVal;

            itemData.val[j].relation = newVal; //var term = itemData.val[j].fields[k]
            //term.taxonomy = newVal;

            queryArgs.items[index].val = itemData.val;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), x.fields.map((y, k) => {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "border-b border-solid border-gray-300 py-3"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
            label: "Custom field key",
            value: y.key,
            placeholder: "meta_key",
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].fields[k];
              term.key = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
            label: "Meta Value ",
            value: y.value,
            placeholder: "25",
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].fields[k];
              term.value = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
            style: {
              margin: 0
            },
            label: "Custom field type",
            value: y.type,
            options: [{
              label: 'NUMERIC',
              value: 'NUMERIC'
            }, {
              label: 'BINARY',
              value: 'BINARY'
            }, {
              label: 'CHAR',
              value: 'CHAR'
            }, {
              label: 'DATE',
              value: 'DATE'
            }, {
              label: 'DATETIME',
              value: 'DATETIME'
            }, {
              label: 'DECIMAL',
              value: 'DECIMAL'
            }, {
              label: 'SIGNED',
              value: 'SIGNED'
            }, {
              label: 'TIME',
              value: 'TIME'
            }, {
              label: 'UNSIGNED',
              value: 'UNSIGNED'
            }],
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].fields[k];
              term.type = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
            style: {
              margin: 0
            },
            label: "compare ",
            value: y.compare,
            options: [{
              label: 'IN',
              value: 'IN'
            }, {
              label: 'NOT IN',
              value: 'NOT IN'
            }, {
              label: 'EXISTS',
              value: 'EXISTS'
            }, {
              label: 'NOT EXISTS',
              value: 'NOT EXISTS'
            }],
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].fields[k];
              term.compare = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          })));
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "cursor-pointer text-center px-3 py-1 text-white bg-blue-600 text-sm",
          onClick: _ev => {
            var itemData = queryArgs.items[index];
            var xx = itemData.val[j].fields.concat({
              key: '',
              value: '',
              type: '',
              compare: ''
            });
            queryArgs.items[index].val[j].fields = xx;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Add")));
      }))), item.id == 'dateQuery' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
        utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-dateQuery"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "underline"
      }, "Date Query"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
        className: "my-3"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Add Arguments"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        options: [{
          "value": "",
          "label": "Select..."
        }, {
          "value": "year",
          "label": "Year"
        }, {
          "value": "month",
          "label": "Month"
        }, {
          "value": "week",
          "label": "Week"
        }, {
          "value": "day",
          "label": "Day"
        }, {
          "value": "hour",
          "label": "Hour"
        }, {
          "value": "minute",
          "label": "Minute"
        }, {
          "value": "second",
          "label": "Second"
        }, {
          "value": "after",
          "label": "After"
        }, {
          "value": "before",
          "label": "Before"
        }, {
          "value": "inclusive",
          "label": "Inclusive"
        }, {
          "value": "compare",
          "label": "Compare"
        }, {
          "value": "column",
          "label": "Column"
        }, {
          "value": "relation",
          "label": "Relation"
        }],
        onChange: newVal => {
          var itemData = queryArgs.items[index];

          if (newVal == 'year') {
            var xx = itemData.val.concat({
              id: 'year',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'month') {
            var xx = itemData.val.concat({
              id: 'month',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'week') {
            var xx = itemData.val.concat({
              id: 'week',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'day') {
            var xx = itemData.val.concat({
              id: 'day',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'hour') {
            var xx = itemData.val.concat({
              id: 'hour',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'minute') {
            var xx = itemData.val.concat({
              id: 'minute',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'second') {
            var xx = itemData.val.concat({
              id: 'second',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'inclusive') {
            var xx = itemData.val.concat({
              id: 'inclusive',
              value: true
            });
          }

          if (newVal == 'compare') {
            var xx = itemData.val.concat({
              id: 'compare',
              value: ''
            });
          }

          if (newVal == 'column') {
            var xx = itemData.val.concat({
              id: 'column',
              value: ''
            });
          }

          if (newVal == 'relation') {
            var xx = itemData.val.concat({
              id: 'relation',
              value: ''
            });
          }

          if (newVal == 'before') {
            var xx = itemData.val.concat({
              id: 'before',
              value: '',
              year: '',
              month: '',
              day: ''
            });
          }

          if (newVal == 'after') {
            var xx = itemData.val.concat({
              id: 'after',
              value: '',
              year: '',
              month: '',
              day: ''
            });
          }

          queryArgs.items[index].val = xx;
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      })), item.val.map((x, j) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
          title: x.id,
          initialOpen: false
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "cursor-pointer px-3 py-1 text-white bg-red-600 text-sm my-2 inline-block",
          onClick: _ev => {
            queryArgs.items[index].val.splice(j, 1);
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Delete"), (x.id == 'after' || x.id == 'before') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Year"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
          placeholder: "",
          onChange: newVal => {
            //clearTimeout(debounce);
            // debounce = setTimeout(() => {
            queryArgs.items[index].val[j].year = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            }); //}, 1000);
          }
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Month"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
          placeholder: "",
          onChange: newVal => {
            // clearTimeout(debounce);
            //debounce = setTimeout(() => {
            queryArgs.items[index].val[j].month = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            }); //}, 1000);
          }
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Day"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
          placeholder: "",
          onChange: newVal => {
            clearTimeout(debounce);
            debounce = setTimeout(() => {
              queryArgs.items[index].val[j].day = newVal;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }, 1000);
          }
        }))), x.id == 'inclusive' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
          style: {
            margin: 0
          },
          options: [{
            label: 'True',
            value: true
          }, {
            label: 'False',
            value: false
          }],
          onChange: newVal => {
            queryArgs.items[index].val[j].value = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), x.id == 'compare' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
          style: {
            margin: 0
          },
          options: [{
            label: '=',
            value: '='
          }, {
            label: '!=',
            value: '!='
          }, {
            label: '>',
            value: '>'
          }, {
            label: '>=',
            value: '>='
          }, {
            label: '<',
            value: '<'
          }, {
            label: '<=',
            value: '<='
          }, {
            label: 'IN',
            value: 'IN'
          }, {
            label: 'NOT IN',
            value: 'NOT IN'
          }, {
            label: 'EXISTS',
            value: 'EXISTS'
          }, {
            label: 'NOT EXISTS',
            value: 'NOT EXISTS'
          }, {
            label: 'BETWEEN',
            value: 'BETWEEN'
          }, {
            label: 'NOT BETWEEN',
            value: 'NOT BETWEEN'
          }],
          onChange: newVal => {
            queryArgs.items[index].val[j].value = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), x.id == 'column' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
          placeholder: "",
          onChange: newVal => {
            clearTimeout(debounce);
            debounce = setTimeout(() => {
              queryArgs.items[index].val[j].value = newVal;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }, 1000);
          }
        })), x.id == 'relation' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
          style: {
            margin: 0
          },
          options: [{
            label: 'OR',
            value: 'OR'
          }, {
            label: 'AND',
            value: 'AND'
          }],
          onChange: newVal => {
            queryArgs.items[index].val[j].value = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), (x.id == 'year' || x.id == 'month' || x.id == 'week' || x.id == 'day' || x.id == 'hour' || x.id == 'minute' || x.id == 'second') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
          label: "Value",
          placeholder: "",
          onChange: newVal => {
            //clearTimeout(debounce);
            //debounce = setTimeout(() => {
            queryArgs.items[index].val[j].value = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            }); //}, 1000);
          }
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
          style: {
            margin: 0
          },
          label: "compare ",
          options: [{
            label: '=',
            value: '='
          }, {
            label: '!=',
            value: '!='
          }, {
            label: '>',
            value: '>'
          }, {
            label: '>=',
            value: '>='
          }, {
            label: '<',
            value: '<'
          }, {
            label: '<=',
            value: '<='
          }, {
            label: 'IN',
            value: 'IN'
          }, {
            label: 'NOT IN',
            value: 'NOT IN'
          }, {
            label: 'EXISTS',
            value: 'EXISTS'
          }, {
            label: 'NOT EXISTS',
            value: 'NOT EXISTS'
          }, {
            label: 'BETWEEN',
            value: 'BETWEEN'
          }, {
            label: 'NOT BETWEEN',
            value: 'NOT BETWEEN'
          }],
          onChange: newVal => {
            queryArgs.items[index].val[j].compare = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }))));
      })), item.id == 'taxQuery' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
        utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-postQueryargsTaxonomy"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "underline"
      }, "Taxonomy Query"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: postGridData.license_status != 'active' ? '' : ''
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer inline-block mb-2 px-3 py-1 text-white bg-blue-600 text-sm",
        onClick: _ev => {
          var itemData = queryArgs.items[index];
          var xx = itemData.val.concat({
            terms: [{
              taxonomy: '',
              field: '',
              terms: [],
              operator: ''
            }],
            relation: 'OR'
          });
          queryArgs.items[index].val = xx;
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      }, "Add"), item.val.map((x, j) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
          title: "Term",
          initialOpen: false
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "cursor-pointer inline-block mb-2 px-3 py-1 text-white bg-red-600 text-sm",
          onClick: _ev => {
            var itemData = queryArgs.items[index];
            var xx = itemData.val.splice(j, 1);
            queryArgs.items[index].val = itemData.val;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Remove"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, "Terms Relation"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
          style: {
            margin: 0
          },
          label: "",
          value: x.relation,
          options: [{
            label: 'OR',
            value: 'OR'
          }, {
            label: 'AND',
            value: 'AND'
          }],
          onChange: newVal => {
            var itemData = queryArgs.items[index]; //itemData.val.relation = newVal;

            itemData.val[j].relation = newVal; //var term = itemData.val[j].terms[k]
            //term.taxonomy = newVal;

            queryArgs.items[index].val = itemData.val;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), x.terms.map((y, k) => {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "border-b border-solid border-gray-300 py-3"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
            label: "Taxonomy",
            value: y.taxonomy,
            placeholder: "Taxonomy",
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].terms[k];
              term.taxonomy = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
            label: "Terms",
            value: y.terms.join(','),
            placeholder: "Comma separated",
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].terms[k];
              term.terms = newVal.split(',');
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
            style: {
              margin: 0
            },
            label: "Fields",
            value: y.field,
            options: [{
              label: 'Choose...',
              value: ''
            }, {
              label: 'Term ID',
              value: 'term_id'
            }, {
              label: 'Name',
              value: 'name'
            }, {
              label: 'Slug',
              value: 'slug'
            }, {
              label: 'Term taxonomy id',
              value: 'term_taxonomy_id'
            }],
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].terms[k];
              term.field = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
            style: {
              margin: 0
            },
            label: "Operator",
            value: y.operator,
            options: [{
              label: 'Choose...',
              value: ''
            }, {
              label: 'IN',
              value: 'IN'
            }, {
              label: 'NOT IN',
              value: 'NOT IN'
            }, {
              label: 'AND',
              value: 'AND'
            }, {
              label: 'EXISTS',
              value: 'EXISTS'
            }, {
              label: 'NOT EXISTS',
              value: 'NOT EXISTS'
            }],
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].terms[k];
              term.operator = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "cursor-pointer block text-center my-2 px-3 py-1 text-white bg-red-600 text-sm",
            onClick: _ev => {
              var itemData = queryArgs.items[index];
              var terms = itemData.val[j].terms;
              var xx = itemData.val[j].terms.splice(k, 1);
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }, "Remove"));
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "cursor-pointer text-center px-3 py-1 text-white bg-blue-600 text-sm",
          onClick: _ev => {
            var itemData = queryArgs.items[index];
            var xx = itemData.val[j].terms.concat({
              taxonomy: '',
              field: '',
              terms: [],
              operator: ''
            });
            queryArgs.items[index].val[j].terms = xx;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Add")));
      }))), (item.id == 'metaKey' || item.id == 's' || item.id == 'metaValue' || item.id == 'metaValueNum' || item.id == 'metaCompare' || item.id == 'year' || item.id == 'monthnum' || item.id == 'w' || item.id == 'day' || item.id == 'hour' || item.id == 'minute' || item.id == 'second' || item.id == 'm' || item.id == 'author' || item.id == 'authorName' || item.id == 'tag' || item.id == 'tagId' || item.id == 'cat' || item.id == 'categoryName' || item.id == 'p' || item.id == 'name' || item.id == 'pageId' || item.id == 'pagename' || item.id == 'postParent' || item.id == 'postsPerPage' || item.id == 'paged' || item.id == 'offset' || item.id == 'postsPerArchivePage' || item.id == 'perm') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: item.val,
        onChange: newVal => {
          clearTimeout(debounce);
          debounce = setTimeout(() => {
            updateQueryPram(newVal, index);
          }, 1000);
        }
      })), (item.id == 'postParent' || item.id == 'postPassword') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
        utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-postQueryArgs"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "underline"
      }, "Post Parent, Post Password"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: item.val,
        onChange: newVal => updateQueryPram(newVal, index)
      })), (item.id == 'postNameIn' || item.id == 'authorIn' || item.id == 'authorNotIn' || item.id == 'postNotIn' || item.id == 'postIn' || item.id == 'postParentNotIn' || item.id == 'tagNotIn' || item.id == 'tagAnd' || item.id == 'tagIn' || item.id == 'postParentIn' || item.id == 'tagSlugIn' || item.id == 'tagSlugAnd' || item.id == 'categoryNotIn' || item.id == 'categoryIn' || item.id == 'categoryAnd') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
        utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-postQueryArgs"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: item.val,
        placeholder: "Comma separated",
        onChange: newVal => updateQueryPram(newVal, index)
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'postNameIndd' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer text-center px-3 py-1 text-white bg-blue-600 text-sm",
        onClick: _ev => {
          var itemData = queryArgs.items[index];
          var val = itemData.val.concat({
            slug: ''
          });
          itemData.val = val;
          queryArgs.items[index] = itemData;
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      }, "Add")), item.id == 'commentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: item.val.value,
        placeholder: "Comment Count, Ex: 25",
        onChange: newVal => updateQueryPram({
          value: newVal,
          compare: item.val.compare
        }, index)
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val.compare,
        options: [{
          label: '=',
          value: '='
        }, {
          label: '!=',
          value: '!='
        }, {
          label: '>',
          value: '>'
        }, {
          label: '>=',
          value: '>='
        }, {
          label: '<',
          value: '<'
        }, {
          label: '<=',
          value: '<='
        }],
        onChange: newVal => updateQueryPram({
          value: item.val.value,
          compare: newVal
        }, index)
      })), item.id == 'postMimeType' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_input_select__WEBPACK_IMPORTED_MODULE_20__["default"], {
        val: item.val,
        options: [{
          label: 'image/jpeg',
          value: 'jpg|jpeg|jpe'
        }, {
          label: 'image/gif',
          value: 'gif'
        }, {
          label: 'image/png',
          value: 'png'
        }, {
          label: 'image/bmp',
          value: 'bmp'
        }],
        multiple: true,
        onChange: newVal => {
          updateQueryPram(newVal, index);
        }
      })), (item.id == 'cacheResults' || item.id == 'nopaging' || item.id == 'hasPassword' || item.id == 'updatePostMetaCache' || item.id == 'updatePostTermCache') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val,
        options: [{
          label: 'True',
          value: true
        }, {
          label: 'False',
          value: false
        }],
        onChange: newVal => updateQueryPram(newVal, index)
      })), item.id == 'ignoreStickyPosts' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
        utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-stickyPost"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "underline"
      }, "Ignore Sticky Posts"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val,
        options: [{
          label: 'True',
          value: true
        }, {
          label: 'False',
          value: false
        }],
        onChange: newVal => updateQueryPram(newVal, index)
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, item.description)));
    }

    function addQueryPramX(_option, index) {
      var attrExist = false;
      var data = _queryprams__WEBPACK_IMPORTED_MODULE_26__["default"][index];
      var multiple = data.multiple;
      var isExist = queryArgs.items.map(item => {
        if (item.id == index) {
          return true;
        }
      });
      var items = queryArgs.items.concat([data]);
      setAttributes({
        queryArgs: {
          items: items
        }
      });
    }

    var RemoveQueryPram = function (_ref3) {
      let {
        title,
        index
      } = _ref3;
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "cursor-pointer hover:bg-red-500 hover:text-white px-1 py-1",
        onClick: ev => {
          queryArgs.items.splice(index, 1);
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_30__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_31__["default"]
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "mx-2"
      }, title));
    };

    function deleteGridColumn(i) {
      grid.styles.gridTemplateColumns[breakPointX].splice(i, 1);
      var styles = { ...grid.styles,
        gridTemplateColumns: grid.styles.gridTemplateColumns
      };
      setAttributes({
        grid: { ...grid,
          styles: styles
        }
      });
    }

    function deleteGridRow(i) {
      grid.styles.gridTemplateRows[breakPointX].splice(i, 1);
      var styles = { ...grid.styles,
        gridTemplateRows: grid.styles.gridTemplateRows
      };
      setAttributes({
        grid: { ...grid,
          styles: styles
        }
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "post-grid "
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Layouts",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "text-white cursor-pointer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: layoutData.source == 'library' ? 'bg-blue-500 w-1/2 inline-block px-3 py-2 text-[14px] font-bold' : 'bg-blue-300 text-[14px] font-bold inline-block px-3 py-2 w-1/2',
      onClick: _ev => {
        setLayoutData({
          source: 'library'
        });
      }
    }, "Library"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: layoutData.source == 'saved' ? 'bg-blue-500 w-1/2 inline-block px-3 py-2 text-[14px] font-bold' : 'bg-blue-300 inline-block px-3 py-2 w-1/2 text-[14px] font-bold',
      onClick: _ev => {
        setLayoutData({
          source: 'saved'
        });
      }
    }, "Saved")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: queryLayouts.keyword,
      type: "text",
      placeholder: "Search Layouts...",
      onChange: newVal => {
        clearTimeout(debounce);
        debounce = setTimeout(() => {
          setQueryLayouts({
            keyword: newVal,
            page: queryLayouts.page,
            category: queryLayouts.category
          });
        }, 1000); //fetchLayouts();
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "w-full",
      style: {
        margin: 0
      },
      label: "",
      value: queryLayouts.category,
      options: layoutCats,
      onChange: newVal => {
        setQueryLayouts({
          keyword: queryLayouts.keyword,
          page: queryLayouts.page,
          category: newVal
        }); //fetchLayouts();
      }
    })), layoutData.source == 'saved' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "flex gap-2\t"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "w-full rounded-sm  py-2 bg-blue-500 text-[14px] font-bold text-white cursor-pointer my-3 text-center "
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: " ",
      target: "_blank",
      href: clientData.siteAdminurl + 'edit.php?post_type=post_grid_template'
    }, "All Layouts")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "w-full rounded-sm  py-2 bg-blue-500 text-[14px] font-bold text-white cursor-pointer my-3 text-center "
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: "",
      target: "_blank",
      href: clientData.siteAdminurl + 'post-new.php?post_type=post_grid_template'
    }, "Create Layout"))), layoutLoading == true && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "text-center"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Spinner, null)), layoutLoading == false && layoutList.items.length > 0 && layoutList.items.map(x => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-4 border bg-gray-200 "
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "relative cursor-pointer",
        onClick: _ev => {
          selectLayout(x.post_id, x.post_content);
        }
      }, layout.id == x.post_id && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "absolute bg-amber-500 text-white px-2 py-1 top-0 right-0"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        class: "dashicons dashicons-saved"
      }), " Selected"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
        className: "w-full",
        src: x.thumb_url
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "text-[14px] p-1 bg-gray-500 text-white bg-opacity-80 text-bold  text-center"
      }, x.post_title)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "py-3 flex justify-items-stretch"
      }, layoutData.source != 'library' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "mx-1 inline-block bg-blue-500 hover:bg-blue-400 px-2 py-1 text-white rounded-sm cursor-pointer"
      }, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        target: "_blank",
        href: clientData.siteAdminurl + 'post.php?post=' + x.post_id + '&action=edit'
      }, "Edit"), " "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "mx-1 inline-block bg-blue-500 hover:bg-blue-400 px-2 py-1 text-white rounded-sm cursor-pointer"
      }, "#", x.post_id), layoutData.source == 'library' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "mx-1 relative inline-block bg-blue-500 hover:bg-blue-400 px-2 py-1 text-white rounded-sm cursor-pointer",
        onClick: ev => {
          if (postGridData.license_status == 'active') {
            if (!importLayoutOpen.isOpen) {
              setlayoutImporting(true);
              importLayout(x);
            }
          }

          setimportLayoutOpen({
            id: x.post_id,
            isOpen: !importLayoutOpen.isOpen
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        class: "dashicons dashicons-download"
      }), " Import"), importLayoutOpen.id == x.post_id && importLayoutOpen.isOpen && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
        position: "bottom left p-2 "
      }, postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "w-48 bg-amber-100 px-3 py-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: ""
      }, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "underline"
      }, "Importing Layouts"), " Only avilable in Premium"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: ""
      }, "After import the layout you customize and make your own.")), postGridData.license_status == 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "w-48 bg-sky-300 px-3 py-2"
      }, layoutImporting && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Spinner, null), " Importing"), !layoutImporting && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: ""
      }, "Layout imported and saved under ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        target: "_blank",
        className: "font-bold underline ",
        href: postGridData.siteAdminurl + 'edit.php?post_type=post_grid_template'
      }, "Saved Templates")))))));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "w-full rounded-sm  py-2 bg-blue-500 text-[14px] font-bold text-white cursor-pointer my-3 text-center",
      onClick: _ev => {
        var page = queryLayouts.page + 1;
        setQueryLayouts({
          keyword: queryLayouts.keyword,
          page: page,
          category: queryLayouts.category
        });
      }
    }, layoutLoading.loading == true && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "text-center"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Spinner, null)), "Load More"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Query Post",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Add Query Parameters"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: queryPramsX,
      buttonTitle: "Choose",
      onChange: addQueryPramX,
      values: ""
    })), queryArgs.items.map((item, index) => {
      return generateQueryArgOptions(item, index);
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-queryPreset"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Query Presets"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Query Presets"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: _query_presets__WEBPACK_IMPORTED_MODULE_24__["default"],
      buttonTitle: "Choose",
      onChange: addQueryPreset,
      values: ''
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Grid Settings",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      onClick: _ev => {
        var gridTemplateColumns = grid.styles.gridTemplateColumns;

        if (Object.keys(grid.styles.gridTemplateColumns).length == 0) {
          gridTemplateColumns[breakPointX] = [{
            val: 1,
            unit: 'fr'
          }];
        } else {
          var sds = gridTemplateColumns[breakPointX] != undefined ? gridTemplateColumns[breakPointX].concat({
            val: 1,
            unit: 'fr'
          }) : [{
            val: 1,
            unit: 'fr'
          }];
          gridTemplateColumns[breakPointX] = sds;
        }

        var styles = { ...grid.styles,
          gridTemplateColumns: gridTemplateColumns
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      },
      className: "my-3 !bg-blue-600 !text-white"
    }, "Add Column"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), grid.styles.gridTemplateColumns[breakPointX] != undefined && grid.styles.gridTemplateColumns[breakPointX].map((item, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: item.val,
        type: "number",
        onChange: newVal => {
          var newValuesObj = {};

          if (Object.keys(grid.styles.gridTemplateColumns).length == 0) {
            newValuesObj[breakPointX] = {
              val: newVal,
              unit: 'em'
            };
          } else {
            var gridTemplateColumns = grid.styles.gridTemplateColumns;
            var sds = gridTemplateColumns[breakPointX].map((x, i) => {
              return index == i ? {
                val: newVal,
                unit: x.unit
              } : x;
            });
            newValuesObj[breakPointX] = sds;
          }

          var styles = { ...grid.styles,
            gridTemplateColumns: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        className: "mb-0",
        value: item.unit,
        options: [{
          label: 'fr',
          value: 'fr'
        }, {
          label: 'px',
          value: 'px'
        }, {
          label: '%',
          value: '%'
        }, {
          label: 'em',
          value: 'em'
        }],
        onChange: newVal => {
          var newValuesObj = {};

          if (Object.keys(grid.styles.gridTemplateColumns).length == 0) {
            newValuesObj[breakPointX] = {
              val: newVal,
              unit: 'em'
            };
          } else {
            var gridTemplateColumns = grid.styles.gridTemplateColumns;
            var sds = gridTemplateColumns[breakPointX].map((x, i) => {
              return index == i ? {
                val: x.val,
                unit: newVal
              } : x;
            });
            newValuesObj[breakPointX] = sds;
          }

          var styles = { ...grid.styles,
            gridTemplateColumns: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
        icon: "no-alt",
        onClick: _ev => {
          deleteGridColumn(index);
        }
      }));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      onClick: _ev => {
        var gridTemplateRows = grid.styles.gridTemplateRows;

        if (Object.keys(grid.styles.gridTemplateRows).length == 0) {
          gridTemplateRows[breakPointX] = [{
            val: 1,
            unit: 'fr'
          }];
        } else {
          var sds = gridTemplateRows[breakPointX] != undefined ? gridTemplateRows[breakPointX].concat({
            val: 1,
            unit: 'fr'
          }) : [{
            val: 1,
            unit: 'fr'
          }];
          gridTemplateRows[breakPointX] = sds;
        }

        var styles = { ...grid.styles,
          gridTemplateRows: gridTemplateRows
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      },
      className: "my-3 !bg-blue-600 !text-white"
    }, "Add Row"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), grid.styles.gridTemplateRows[breakPointX] != undefined && grid.styles.gridTemplateRows[breakPointX].map((item, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: item.val,
        type: "number",
        onChange: newVal => {
          var newValuesObj = {};

          if (Object.keys(grid.styles.gridTemplateRows).length == 0) {
            newValuesObj[breakPointX] = {
              val: newVal,
              unit: 'em'
            };
          } else {
            var gridTemplateRows = grid.styles.gridTemplateRows;
            var sds = gridTemplateRows[breakPointX].map((x, i) => {
              return index == i ? {
                val: newVal,
                unit: x.unit
              } : x;
            });
            newValuesObj[breakPointX] = sds;
          }

          var styles = { ...grid.styles,
            gridTemplateRows: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        className: "mb-0",
        value: item.unit,
        options: [{
          label: 'fr',
          value: 'fr'
        }, {
          label: 'px',
          value: 'px'
        }, {
          label: '%',
          value: '%'
        }, {
          label: 'em',
          value: 'em'
        }],
        onChange: newVal => {
          var newValuesObj = {};

          if (Object.keys(grid.styles.gridTemplateRows).length == 0) {
            newValuesObj[breakPointX] = {
              val: newVal,
              unit: 'em'
            };
          } else {
            var gridTemplateRows = grid.styles.gridTemplateRows;
            var sds = gridTemplateRows[breakPointX].map((x, i) => {
              return index == i ? {
                val: x.val,
                unit: newVal
              } : x;
            });
            newValuesObj[breakPointX] = sds;
          }

          var styles = { ...grid.styles,
            gridTemplateRows: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
        icon: "no-alt",
        onClick: _ev => {
          deleteGridRow(index);
        }
      }));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Column Gap"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: grid.styles.colGap[breakPointX] != undefined ? grid.styles.colGap[breakPointX].val : 1,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(grid.styles.colGap).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'em'
          };
        } else {
          newValuesObj = grid.styles.colGap;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'em';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...grid.styles,
          colGap: newValuesObj
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: grid.styles.colGap[breakPointX] != undefined ? grid.styles.colGap[breakPointX].unit : 'em',
      options: [{
        label: 'fr',
        value: 'fr'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(grid.styles.colGap).length == 0) {
          newValuesObj[breakPointX] = {
            val: 1,
            unit: newVal
          };
        } else {
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 1;
          newValuesObj = grid.styles.colGap;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...grid.styles,
          colGap: newValuesObj
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Row Gap"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: grid.styles.rowGap[breakPointX] != undefined ? grid.styles.rowGap[breakPointX].val : 1,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(grid.styles.rowGap).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'em'
          };
        } else {
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'em';
          newValuesObj = grid.styles.rowGap;
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...grid.styles,
          rowGap: newValuesObj
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      className: "mb-0",
      value: grid.styles.rowGap[breakPointX] != undefined ? grid.styles.rowGap[breakPointX].unit : 'em',
      options: [{
        label: 'fr',
        value: 'fr'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(grid.styles.rowGap).length == 0) {
          newValuesObj[breakPointX] = {
            val: 1,
            unit: newVal
          };
        } else {
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 'em';
          newValuesObj = grid.styles.rowGap;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...grid.styles,
          rowGap: newValuesObj
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      }
    })), postGridData.license_status != 'active' && grid.options.itemCss[breakPointX] != undefined && Object.entries(grid.options.itemCss[breakPointX]).length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-nthcss"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "N'th Item CSS"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "N'th Item CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "my-3",
      variant: "secondary",
      onClick: _newVal => {
        if (postGridData != null && postGridData.license_status == 'active') {
          if (grid.options.itemCss[breakPointX] != undefined) {
            var ssd = grid.options.itemCss[breakPointX].concat({
              'grid-column-start': '',
              'grid-column-end': '',
              'grid-row-start': '',
              'grid-row-end': ''
            });
          } else {
            grid.options.itemCss[breakPointX] = [];
            var ssd = grid.options.itemCss[breakPointX].concat({
              'grid-column-start': '',
              'grid-column-end': '',
              'grid-row-start': '',
              'grid-row-end': ''
            });
          }

          var newValuesObj = {};

          if (Object.keys(grid.options.itemCss).length == 0) {
            newValuesObj[breakPointX] = ssd;
          } else {
            newValuesObj = grid.options.itemCss;
            newValuesObj[breakPointX] = ssd;
          }

          var options = { ...grid.options,
            itemCss: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      }
    }, "Add", postGridData != null && postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "bg-amber-400 mx-2 rounded-sm px-3  text-white hover:text-white"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      target: "_blank",
      href: 'https://pickplugins.com/post-grid/?utm_source=nthItemCSS&utm_term=blockPostgrid&utm_campaign=pluginPostGrid&utm_medium=nthItemCSS'
    }, "Pro")))), grid.options.itemCss[breakPointX] != undefined && grid.options.itemCss[breakPointX].map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
        title: i + 1 + '\'th Item',
        initialOpen: false
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
        icon: "no-alt",
        variant: "secondary",
        onClick: _ev => {
          grid.options.itemCss[breakPointX].splice(i, 1);
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      }, "Delete"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "grid-column-start"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: x['grid-column-start'],
        type: "number",
        onChange: newVal => {
          grid.options.itemCss[breakPointX][i]['grid-column-start'] = newVal;
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "grid-column-end"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: x['grid-column-end'],
        type: "number",
        onChange: newVal => {
          grid.options.itemCss[breakPointX][i]['grid-column-end'] = newVal;
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "grid-row-start"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: x['grid-row-start'],
        type: "number",
        onChange: newVal => {
          grid.options.itemCss[breakPointX][i]['grid-row-start'] = newVal;
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "grid-row-end"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: x['grid-row-end'],
        type: "number",
        onChange: newVal => {
          grid.options.itemCss[breakPointX][i]['grid-row-end'] = newVal;
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      })));
    }), _grid_layouts__WEBPACK_IMPORTED_MODULE_25__["default"].map((x, _i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer relative hover:bg-blue-200 my-3",
        onClick: _ev => {
          if (x.isPro) {
            if (postGridData != null && postGridData.license_status == 'active') {
              setAttributes({
                grid: x.data
              });
            }
          } else {
            setAttributes({
              grid: x.data
            });
          }
        }
      }, x.isPro && postGridData != null && postGridData.license_status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "bg-amber-400 absolute top-2 left-0 rounded-sm px-3 mx-2  text-white hover:text-white"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        target: "_blank",
        href: 'https://pickplugins.com/post-grid/?utm_source=dropdownComponent&utm_term=proFeature&utm_campaign=pluginPostGrid&utm_medium=' + x.label
      }, "Pro")), x.icon != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "w-full grid-layout-prewview"
      }, x.icon), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "text-[16px] p-2 bg-blue-600 text-white bg-opacity-90 text-bold  w-full text-center"
      }, x.title));
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Loop Item",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Text Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: itemWrap.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(itemWrap.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = itemWrap.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...itemWrap.styles,
          color: newValuesObj
        };
        setAttributes({
          itemWrap: { ...itemWrap,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: itemWrap.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(itemWrap.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = itemWrap.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...itemWrap.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          itemWrap: { ...itemWrap,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: itemWrap.styles.padding[breakPointX],
      onChange: nextValues => {
        itemwrapPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_9__["default"], {
      typo: itemWrap.styles,
      breakPointX: breakPointX,
      onChange: onChangeItemWrapTypo,
      setAttributes: setAttributes,
      obj: itemWrap
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Container",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: container.styles.padding[breakPointX],
      onChange: nextValues => {
        containerPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: container.styles.margin[breakPointX],
      onChange: nextValues => {
        containerMarginControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: container.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(container.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = container.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...container.styles,
          color: newValuesObj
        };
        setAttributes({
          container: { ...container,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[containerSelector] = { ...blockCssY.items[containerSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: container.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(container.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = container.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...container.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          container: { ...container,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[containerSelector] = { ...blockCssY.items[containerSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: container.styles.backgroundImage[breakPointX] != undefined ? container.styles.backgroundImage[breakPointX].url : '',
      alt: ""
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__.MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__.MediaUpload, {
      onSelect: media => {
        var newValuesObj = {};

        if (Object.keys(container.styles.backgroundImage).length == 0) {
          newValuesObj[breakPointX] = {
            id: media.id,
            url: media.url
          };
        } else {
          newValuesObj = container.styles.backgroundImage;
          newValuesObj[breakPointX] = {
            id: media.id,
            url: media.url
          };
        }

        var styles = { ...container.styles,
          backgroundImage: newValuesObj
        };
        setAttributes({
          container: { ...container,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[containerSelector] = { ...blockCssY.items[containerSelector],
          'background-image': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      },
      onClose: () => {},
      allowedTypes: ALLOWED_MEDIA_TYPES,
      value: container.styles.backgroundImage[breakPointX],
      render: _ref4 => {
        let {
          open
        } = _ref4;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
          onClick: open
        }, "Open Media Library");
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Filterable",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      variant: "secondary",
      className: "mb-2",
      onClick: ev => {
        var filters = filterable.options.filters.concat({
          groupTitle: '',
          type: '',
          logic: '',
          showPostCount: '',
          items: []
        });
        var options = { ...filterable.options,
          filters: filters
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    }, "Add Filter Group"), filterable.options.filters.length > 1 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-multifilter"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Multi Filter"), " Only avilable in Premium")), filterable.options.filters.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
        title: x.groupTitle ? x.groupTitle : 'Filter Group ' + i,
        initialOpen: false
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        onClick: ev => {
          filterable.options.filters.splice(i, 1);
          var options = { ...filterable.options,
            filters: filterable.options.filters
          };
          setAttributes({
            filterable: { ...filterable,
              options: options
            }
          });
        },
        className: "cursor-pointer px-3 py-1 inline-block text-white bg-red-600 text-sm mb-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "dashicon dashicons dashicons-no-alt"
      }), " Delete Group"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "Group Title"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: x.groupTitle,
        onChange: newVal => {
          filterable.options.filters[i].groupTitle = newVal;
          var options = { ...filterable.options,
            filters: filterable.options.filters
          };
          setAttributes({
            filterable: { ...filterable,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "Group Type"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        value: x.type,
        options: [{
          value: 'inline',
          label: 'Inline'
        }, {
          value: 'dropdown',
          label: 'Dropdown'
        }, {
          value: 'radio',
          label: 'Radio'
        }, {
          value: 'checkbox',
          label: 'Checkbox'
        }],
        onChange: newVal => {
          filterable.options.filters[i].type = newVal;
          var options = { ...filterable.options,
            filters: filterable.options.filters
          };
          setAttributes({
            filterable: { ...filterable,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "Data Logic"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        value: x.logic,
        options: [{
          value: 'or',
          label: 'OR'
        }, {
          value: 'and',
          label: 'AND'
        }],
        onChange: newVal => {
          filterable.options.filters[i].logic = newVal;
          var options = { ...filterable.options,
            filters: filterable.options.filters
          };
          setAttributes({
            filterable: { ...filterable,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "Show Post Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
        value: x.showPostCount,
        options: [{
          value: 'no',
          label: 'No'
        }, {
          value: 'yes',
          label: 'Yes'
        }],
        onChange: newVal => {
          filterable.options.filters[i].showPostCount = newVal;
          var options = { ...filterable.options,
            filters: filterable.options.filters
          };
          setAttributes({
            filterable: { ...filterable,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: "",
        className: "my-3 font-bold"
      }, "Search Terms"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "To add custom filter please use following format and hit Enter"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, "Filter Name|filter-slug|15"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "my-3",
        placeholder: "Search Categories or terms",
        value: "",
        onKeyPress: ev => {
          if (ev.key === 'Enter') {
            var filterParts = ev.target.value.split('|');
            var ss = filterable.options.filters[i].items.concat({
              id: 0,
              slug: filterParts[1],
              title: filterParts[0],
              count: filterParts[2]
            });
            filterable.options.filters[i].items = ss;
            var options = { ...filterable.options,
              filters: filterable.options.filters
            };
            setAttributes({
              filterable: { ...filterable,
                options: options
              }
            });
          }
        },
        onChange: newVal => {
          fetchPostTypeTerms(newVal);
        }
      }), x.items.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-1"
      }, "No terms added."), x.items.map((y, j) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "py-2 my-1 border-b border-gray-400 flex justify-between"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, y.title), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          onClick: ev => {
            var options = { ...activeFilter.options,
              slug: activeFilter.options.slug == y.slug ? "" : y.slug
            };
            setAttributes({
              activeFilter: { ...activeFilter,
                options: options
              }
            });
          },
          className: [activeFilter.options.slug == y.slug ? "bg-blue-600 cursor-pointer p-1   text-white  text-sm" : "bg-gray-400 cursor-pointer p-1   text-white  text-sm"]
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          class: "dashicons dashicons-yes-alt"
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          onClick: ev => {
            filterable.options.filters[i].items.splice(j, 1);
            var options = { ...filterable.options,
              filters: filterable.options.filters
            };
            setAttributes({
              filterable: { ...filterable,
                options: options
              }
            });
          },
          className: "cursor-pointer p-1   text-white bg-red-600 text-sm"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "dashicon dashicons dashicons-no-alt"
        }))));
      }), filterablTerms.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "bg-gray-200 p-2 mt-2"
      }, filterablTerms.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          title: "Click Add terms",
          className: "border-b border-gray-400 my-2 pb-1 cursor-pointer",
          onClick: ev => {
            if (x.slug) {
              var ss = filterable.options.filters[i].items.concat({
                id: x.term_id,
                slug: x.slug,
                title: x.name,
                count: x.count
              });
              filterable.options.filters[i].items = ss;
              var options = { ...filterable.options,
                filters: filterable.options.filters
              };
              setAttributes({
                filterable: { ...filterable,
                  options: options
                }
              });
            }
          }
        }, x.name, " (", x.count, ")");
      })));
    })), filterable.options.multifilter && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postGridFilterableBlock&utm_campaign=pluginPostGrid&utm_medium=postGridFilterableBlock-multifilter"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Multifilter"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Enable Multifilter "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: filterable.options.multifilter,
      options: [{
        label: 'True',
        value: true
      }, {
        label: 'False',
        value: false
      }],
      onChange: newVal => {
        var options = { ...filterable.options,
          multifilter: newVal
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Enable Filter Toggle "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: filterable.options.filterToggle,
      options: [{
        label: 'Yes',
        value: 'yes'
      }, {
        label: 'no',
        value: 'no'
      }],
      onChange: newVal => {
        var options = { ...filterable.options,
          filterToggle: newVal
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    })), filterable.options.multifilter && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Logic Within Group "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: filterable.options.logicWithinGroup,
      options: [{
        label: 'OR',
        value: 'or'
      }, {
        label: 'AND',
        value: 'and'
      }],
      onChange: newVal => {
        var options = { ...filterable.options,
          logicWithinGroup: newVal
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Logic Between Groups "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: filterable.options.logicBetweenGroups,
      options: [{
        label: 'OR',
        value: 'or'
      }, {
        label: 'AND',
        value: 'and'
      }],
      onChange: newVal => {
        var options = { ...filterable.options,
          logicBetweenGroups: newVal
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Show Sort Filter "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: filterable.options.showSort,
      options: [{
        label: 'No',
        value: 'no'
      }, {
        label: 'Yes',
        value: 'yes'
      }],
      onChange: newVal => {
        var options = { ...filterable.options,
          showSort: newVal
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Show Random Filter "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: filterable.options.showRandom,
      options: [{
        label: 'No',
        value: 'no'
      }, {
        label: 'Yes',
        value: 'yes'
      }],
      onChange: newVal => {
        var options = { ...filterable.options,
          showRandom: newVal
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Show Clear Filter "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: filterable.options.showClear,
      options: [{
        label: 'No',
        value: 'no'
      }, {
        label: 'Yes',
        value: 'yes'
      }],
      onChange: newVal => {
        var options = { ...filterable.options,
          showClear: newVal
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Show All Filter "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: filterable.options.showAll,
      options: [{
        label: 'No',
        value: 'no'
      }, {
        label: 'Yes',
        value: 'yes'
      }],
      onChange: newVal => {
        var options = { ...filterable.options,
          showAll: newVal
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Items Per Page"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      type: "number",
      value: filterable.options.perPage != undefined ? filterable.options.perPage : 6,
      onChange: newVal => {
        var options = { ...filterable.options,
          perPage: newVal
        };
        setAttributes({
          filterable: { ...filterable,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Filters Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Text Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: filterable.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(filterable.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = filterable.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...filterable.styles,
          color: newValuesObj
        };
        setAttributes({
          filterable: { ...filterable,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[filterSelector] = { ...blockCssY.items[filterSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: filterable.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(filterable.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = filterable.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...filterable.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          filterable: { ...filterable,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[filterSelector] = { ...blockCssY.items[filterSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: filterable.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(filterable.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = filterable.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...filterable.styles,
          display: newValuesObj
        };
        setAttributes({
          filterable: { ...filterable,
            styles: styles
          }
        });
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Cursor"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_cursor__WEBPACK_IMPORTED_MODULE_19__["default"], {
      val: filterable.styles.cursor[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(filterable.styles.cursor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = filterable.styles.cursor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...filterable.styles,
          cursor: newValuesObj
        };
        setAttributes({
          filterable: { ...filterable,
            styles: styles
          }
        });
        blockCssY.items[filterSelector] = { ...blockCssY.items[filterSelector],
          'cursor': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: filterable.styles.padding[breakPointX],
      onChange: nextValues => {
        filterablePaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: filterable.styles.margin[breakPointX],
      onChange: nextValues => {
        filterableMarginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Active Filter Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Text Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: activeFilter.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(activeFilter.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = activeFilter.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...activeFilter.styles,
          color: newValuesObj
        };
        setAttributes({
          activeFilter: { ...activeFilter,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: activeFilter.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(activeFilter.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = activeFilter.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...activeFilter.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          activeFilter: { ...activeFilter,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[filterActiveSelector] = { ...blockCssY.items[filterActiveSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: activeFilter.styles.padding[breakPointX],
      onChange: nextValues => {
        activeFilterPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: activeFilter.styles.margin[breakPointX],
      onChange: nextValues => {
        activeFilterMarginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Filter Group",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Text Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: filterGroup.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(filterGroup.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = filterGroup.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...filterGroup.styles,
          color: newValuesObj
        };
        setAttributes({
          filterGroup: { ...filterGroup,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: filterGroup.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(filterGroup.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = filterGroup.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...filterGroup.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          filterGroup: { ...filterGroup,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: filterGroup.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(filterGroup.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = filterGroup.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...filterGroup.styles,
          display: newValuesObj
        };
        setAttributes({
          filterGroup: { ...filterGroup,
            styles: styles
          }
        });
        blockCssY.items[filterGroupSelector] = { ...blockCssY.items[filterGroupSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: filterGroup.styles.padding[breakPointX],
      onChange: nextValues => {
        filterGroupPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: filterGroup.styles.margin[breakPointX],
      onChange: nextValues => {
        filterGroupMarginControl(nextValues);
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Pagination",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Pagination Type"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: paginationTypes,
      buttonTitle: "Choose",
      onChange: (arg, index) => {
        var options = { ...pagination.options,
          type: arg.value
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      },
      values: ''
    })), pagination.options.type.length != 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-500 text-white px-3 py-2 my-5"
    }, paginationTypes[pagination.options.type] != undefined ? paginationTypes[pagination.options.type].label : ''), pagination.options.type == 'filterable' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-pagination_type"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Filterable pagination"), " Only avilable in Premium")), (pagination.options.type == 'normal' || pagination.options.type == 'ajax') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Max Number of Pagination"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: pagination.options.maxPageNum,
      onChange: newVal => {
        var options = { ...pagination.options,
          maxPageNum: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    })), (pagination.options.type == 'normal' || pagination.options.type == 'ajax' || pagination.options.type == 'next_previous') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Previous Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: pagination.options.prevText,
      onChange: newVal => {
        var options = { ...pagination.options,
          prevText: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Next Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: pagination.options.nextText,
      onChange: newVal => {
        var options = { ...pagination.options,
          nextText: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    })), (pagination.options.type == 'loadmore' || pagination.options.type == 'infinite') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Load More Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: pagination.options.loadMoreText,
      onChange: newVal => {
        var options = { ...pagination.options,
          loadMoreText: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "No Posts Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: pagination.options.noMorePosts,
      onChange: newVal => {
        var options = { ...pagination.options,
          noMorePosts: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Loading Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: pagination.options.loadingText,
      onChange: newVal => {
        var options = { ...pagination.options,
          loadingText: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Loading Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_13__["default"], {
      library: pagination.options.loadingIcon.library,
      srcType: pagination.options.loadingIcon.srcType,
      iconSrc: pagination.options.loadingIcon.iconSrc,
      onChange: arg => {
        var options = { ...pagination.options,
          loadingIcon: {
            srcType: arg.srcType,
            library: arg.library,
            iconSrc: arg.iconSrc
          }
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Pagination Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Text Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: pagination.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(pagination.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = pagination.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...pagination.styles,
          color: newValuesObj
        };
        setAttributes({
          pagination: { ...pagination,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: pagination.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(pagination.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = pagination.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...pagination.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          pagination: { ...pagination,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Text Align"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_text_align__WEBPACK_IMPORTED_MODULE_17__["default"], {
      val: pagination.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(pagination.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = pagination.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...pagination.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          pagination: { ...pagination,
            styles: styles
          }
        });
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: pagination.styles.padding[breakPointX],
      onChange: nextValues => {
        paginationPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: pagination.styles.margin[breakPointX],
      onChange: nextValues => {
        paginationMarginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Pagination Items",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Text Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: paginationItem.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(paginationItem.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = paginationItem.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...paginationItem.styles,
          color: newValuesObj
        };
        setAttributes({
          paginationItem: { ...paginationItem,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: paginationItem.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(paginationItem.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = paginationItem.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...paginationItem.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          paginationItem: { ...paginationItem,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Active Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      color: paginationItemActive.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_28__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(paginationItemActive.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = paginationItemActive.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...paginationItemActive.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          paginationItemActive: { ...paginationItemActive,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationItemActiveSelector] = { ...blockCssY.items[paginationItemActiveSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: paginationItem.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(paginationItem.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = paginationItem.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...paginationItem.styles,
          display: newValuesObj
        };
        setAttributes({
          paginationItem: { ...paginationItem,
            styles: styles
          }
        });
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: paginationItem.styles.padding[breakPointX],
      onChange: nextValues => {
        paginationItemPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: paginationItem.styles.margin[breakPointX],
      onChange: nextValues => {
        paginationItemMarginControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_23__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_9__["default"], {
      typo: paginationItem.styles,
      breakPointX: breakPointX,
      onChange: onChangePaginationTypo,
      setAttributes: setAttributes,
      obj: paginationItem
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Lazy load",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "Enable",
      value: lazyLoad.options.enable,
      options: [{
        label: 'Yes',
        value: 'yes'
      }, {
        label: 'No',
        value: 'no'
      }],
      onChange: newVal => {
        var options = { ...lazyLoad.options,
          enable: newVal
        };
        setAttributes({
          lazyLoad: { ...lazyLoad,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Lazyload Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_13__["default"], {
      library: lazyLoad.options.icon != undefined ? lazyLoad.options.icon.library : 'fontAwesome',
      srcType: lazyLoad.options.icon != undefined ? lazyLoad.options.icon.srcType : 'class',
      iconSrc: lazyLoad.options.icon != undefined ? lazyLoad.options.icon.iconSrc : '',
      onChange: arg => {
        var options = { ...lazyLoad.options,
          icon: {
            srcType: arg.srcType,
            library: arg.library,
            iconSrc: arg.iconSrc
          }
        };
        setAttributes({
          lazyLoad: { ...lazyLoad,
            options: options
          }
        });
      }
    })), lazyLoad.options.srcUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_12__["default"], {
      utmUrl: "?utm_source=editor&utm_term=postGridBlock&utm_campaign=pluginPostGrid&utm_medium=postGridBlock-lazyload"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Lazy Load Image"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Lazy Load Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: lazyLoad.options.srcUrl,
      alt: ""
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__.MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_5__.MediaUpload, {
      onSelect: media => {
        // media.id
        var options = { ...lazyLoad.options,
          srcUrl: media.url,
          srcId: media.id
        };
        setAttributes({
          lazyLoad: { ...lazyLoad,
            options: options
          }
        });
      },
      onClose: () => {},
      allowedTypes: ALLOWED_MEDIA_TYPES,
      value: lazyLoad.options.srcId,
      render: _ref5 => {
        let {
          open
        } = _ref5;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
          onClick: open
        }, "Open Media Library");
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      className: "hidden",
      title: "Search",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "Enable",
      value: search.enable,
      options: [{
        label: 'No',
        value: 'no'
      }, {
        label: 'Yes',
        value: 'yes'
      }],
      onChange: newVal => setAttributes({
        search: {
          enable: newVal,
          type: search.type,
          placeholder: search.placeholder,
          icon: search.icon,
          busyIcon: search.busyIcon
        }
      })
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "Search action",
      value: search.type,
      options: [{
        label: 'Ajax - On change form data',
        value: 'ajax'
      }, {
        label: 'On form submit - GET method',
        value: 'form_submit'
      }],
      onChange: newVal => setAttributes({
        search: {
          enable: search.type,
          type: newVal,
          placeholder: search.placeholder,
          icon: search.icon,
          busyIcon: search.busyIcon
        }
      })
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      label: "Placeholder text",
      value: search.placeholder,
      onChange: newVal => setAttributes({
        search: {
          enable: search.type,
          type: search.type,
          placeholder: newVal,
          icon: search.icon,
          busyIcon: search.busyIcon
        }
      })
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      label: "Search icon",
      value: search.icon,
      onChange: newVal => setAttributes({
        search: {
          enable: search.type,
          type: search.type,
          placeholder: search.placeholder,
          icon: newVal,
          busyIcon: search.busyIcon
        }
      })
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      label: "Loading icon",
      value: search.busyIcon,
      onChange: newVal => setAttributes({
        search: {
          enable: search.type,
          type: search.type,
          placeholder: search.placeholder,
          icon: search.icon,
          busyIcon: newVal
        }
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_15__["default"], {
      utm: {
        utm_source: 'BlockPostGrid',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      className: "",
      title: "Tutorials",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_tutorials__WEBPACK_IMPORTED_MODULE_21__["default"], {
      links: _tutorials_links__WEBPACK_IMPORTED_MODULE_27__["default"]
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, grid.styles.gridTemplateColumns[breakPointX] == undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-5"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "text-center my-5"
    }, "Please set the column number"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "grid grid-cols-4 gap-4"
    }, columnPresets.map(x => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer text-center bg-slate-400 hover:bg-slate-500",
        onClick: ev => {
          var gridTemplateColumns = grid.styles.gridTemplateColumns;
          var colGap = grid.styles.colGap;
          var rowGap = grid.styles.rowGap;
          gridTemplateColumns[breakPointX] = x.args;
          colGap[breakPointX] = {
            val: 1,
            unit: 'em'
          };
          rowGap[breakPointX] = {
            val: 1,
            unit: 'em'
          };
          var styles = { ...grid.styles,
            gridTemplateColumns: gridTemplateColumns,
            colGap: colGap,
            rowGap: rowGap
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "p-3 py-4 inline-block"
      }, x.icon));
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, lazyLoad.options.enable == 'yes' && isBusy && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: lazyLoad.options.class
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "filterable-navs"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "filterable-group"
    }, filterable.options.showAll == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pg-filter mixitup-control-active cusror-pointer px-4 py-2 m-2 inline-block bg-gray-200 filter-34534",
      "data-filter": "all"
    }, "All"))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "filterable-group  "
    }), filterable.options.filters.length > 0 && filterable.options.filters.map(x => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "filterable-group ",
        "data-logic": x.logic
      }, x.groupTitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "filterable-group-title "
      }, x.groupTitle), x.items.map(y => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: [activeFilter.options.slug == y.slug ? 'mixitup-control-active pg-filter cursor-pointer' : 'pg-filter cursor-pointer'],
          "terms-id": y.id,
          "data-filter": '.' + y.slug
        }, y.title, " ", x.showPostCount == 'yes' ? '(' + y.count + ')' : '');
      }));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "filterable-group"
    }, filterable.options.showSort == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pg-filter mixitup-control-active cusror-pointer px-4 py-2 m-2 inline-block bg-gray-200 filter-34534",
      "data-filter": ""
    }, "ASC"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pg-filter  cusror-pointer px-4 py-2 m-2 inline-block bg-gray-200 filter-34534",
      "data-filter": ""
    }, "DESC")), filterable.options.showRandom == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pg-filter  cusror-pointer px-4 py-2 m-2 inline-block bg-gray-200 filter-34534",
      "data-filter": ""
    }, "Random")), filterable.options.showClear == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pg-filter  cusror-pointer px-4 py-2 m-2 inline-block bg-gray-200 filter-34534",
      "data-filter": ""
    }, "Clear"), "                  "))), search.enable == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: search.options.class
    }, "search form"), postsQuery == false && posts == null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: noPostsWrap.options.class
    }, "No Post found"), postsQuery && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: spinnerWrap.options.class
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Spinner, null)), isBusy && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "text-center"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Spinner, null)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, postsQuery == false && posts != null && posts.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: itemsWrap.options.class
    }, posts.map((x, _i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: itemWrap.options.class
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, x.html));
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: pagination.options.class
    }, pagination.options.type == 'filterable' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, paginationItems != undefined && paginationItems.map(item => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, {
        className: "inline-block"
      }, item.replace("page-numbers", paginationItem.options.class));
    })), pagination.options.type == 'ajax' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, paginationItems != undefined && paginationItems.map(item => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, {
        className: "inline-block"
      }, item.replace("page-numbers", paginationItem.options.class));
    })), pagination.options.type == 'next_previous' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "flex justify-between"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pagination-prev page-numbers"
    }, pagination.options.prevText), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pagination-next page-numbers"
    }, pagination.options.nextText)), pagination.options.type == 'loadmore' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "page-numbers"
    }, pagination.options.loadMoreText)), pagination.options.type == 'infinite' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null))))];
  },
  save: function (_props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-grid-filterable/query-presets.js":
/*!**********************************************************!*\
  !*** ./src/blocks/post-grid-filterable/query-presets.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const queryPresets = [{
  label: 'Latest Posts by Publish Date',
  key: 'preset1',
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["date"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Oldest Posts by Publish Date',
  key: 'preset2',
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "ASC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["date"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Latest Posts by Modified Date',
  key: 'preset3',
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["modified"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Oldest Posts by Modified Date',
  key: 'preset4',
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "ASC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["modified"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Alphabetical Order A-Z',
  key: 'preset5',
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "ASC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["name"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Alphabetical Order Z-A',
  key: 'preset6',
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["name"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Most Commented Posts',
  key: 'preset7',
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["name"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Random 10 Posts',
  key: 'preset8',
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["rand"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (queryPresets);

/***/ }),

/***/ "./src/blocks/post-grid-filterable/queryprams.js":
/*!*******************************************************!*\
  !*** ./src/blocks/post-grid-filterable/queryprams.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const queryPrams = [{
  val: ['post'],
  multiple: false,
  id: 'postType',
  label: 'Post Types',
  description: "Select Post Types to Query"
}, {
  val: [],
  multiple: false,
  id: 'taxQuery',
  label: 'Tax Query',
  description: "Taxonomies query arguments",
  isPro: true
}, {
  val: 'OR',
  multiple: false,
  id: 'taxQueryRelation',
  label: 'Tax Query Relation',
  description: "Taxonomies query relation"
}, {
  val: [],
  multiple: false,
  id: 'metaQuery',
  label: 'Meta Query',
  description: "Meta field query",
  isPro: true
}, {
  val: '',
  multiple: false,
  id: 's',
  label: 'Keyword',
  description: "Search keyword, ex: hello"
}, {
  val: [],
  multiple: false,
  id: 'postStatus',
  label: 'Post status',
  description: "Query post by post status"
}, {
  val: '',
  multiple: false,
  id: 'order',
  label: 'Order',
  description: "Post query order"
}, {
  val: [],
  multiple: false,
  id: 'orderby',
  label: 'Orderby',
  description: "Post query orderby"
}, {
  val: '',
  multiple: false,
  id: 'metaKey',
  label: 'Meta fields key',
  description: "Post query by meta fields key"
}, // Date Parameters
{
  val: [],
  multiple: false,
  id: 'dateQuery',
  label: 'Date Query',
  description: "Post query by date",
  isPro: true
}, {
  val: '',
  multiple: false,
  id: 'year',
  label: 'Year',
  description: "Post query by year"
}, {
  val: '',
  multiple: false,
  id: 'monthnum',
  label: 'Month',
  description: "Post query by month"
}, {
  val: '',
  multiple: false,
  id: 'w',
  label: 'Week',
  description: "Post query by week"
}, {
  val: '',
  multiple: false,
  id: 'day',
  label: 'Day',
  description: "Post query by day"
}, {
  val: '',
  multiple: false,
  id: 'hour',
  label: 'Hour',
  description: "Post query by hour"
}, {
  val: '',
  multiple: false,
  id: 'minute',
  label: 'Miniute',
  description: "Post query by miniute"
}, {
  val: '',
  multiple: false,
  id: 'second',
  label: 'Second',
  description: "Post query by second"
}, {
  val: '',
  multiple: false,
  id: 'm',
  label: 'Month',
  description: "Post query by month"
}, // Author Parameters
{
  val: '',
  multiple: false,
  id: 'author',
  label: 'Author',
  description: "Post query by Author ID"
}, {
  val: '',
  multiple: false,
  id: 'authorName',
  label: 'Author Name',
  description: "Post query by Author Name"
}, {
  val: [],
  multiple: false,
  id: 'authorIn',
  label: 'Author In',
  description: "Post query by Author IDs",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'authorNotIn',
  label: 'Author Not In',
  description: "Post query by exluded Author IDs",
  isPro: true
}, // Category Parameters
{
  val: '',
  multiple: false,
  id: 'cat',
  label: 'Category ID',
  description: "Post query by Category ID"
}, {
  val: '',
  multiple: false,
  id: 'categoryName',
  label: 'Category Name',
  description: "Post query by Category Name"
}, {
  val: [],
  multiple: false,
  id: 'categoryAnd',
  label: 'Category And',
  description: "Post query by Category IDs",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'categoryIn',
  label: 'Category In',
  description: "Post query by Category IDs",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'categoryNotIn',
  label: 'Category Not In',
  description: "Post query by excluded Category IDs",
  isPro: true
}, // Tag Parameters
{
  val: '',
  multiple: false,
  id: 'tag',
  label: 'Tags',
  description: "Post query by Tag slug"
}, {
  val: '',
  multiple: false,
  id: 'tagId',
  label: 'Tag Id',
  description: "Post query by Tag ID"
}, {
  val: [],
  multiple: false,
  id: 'tagAnd',
  label: 'Tag And',
  description: "Post query by Tag Ids",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'tagIn',
  label: 'Tag In',
  description: "Post query by Tag ids",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'tagNotIn',
  label: 'Tag Not In',
  description: "Post query by excluded Tag ids"
}, {
  val: [],
  multiple: false,
  id: 'tagSlugAnd',
  label: 'Tag Slug And',
  description: "Post query by Tags slug",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'tagSlugIn',
  label: 'Tag Slug In',
  description: "Post query by excluded Tags slug",
  isPro: true
}, {
  val: '',
  multiple: false,
  id: 'p',
  label: 'Post id',
  description: "Post query by single post id"
}, {
  val: '',
  multiple: false,
  id: 'name',
  label: 'Name',
  description: "Post query by post slug"
}, {
  val: '',
  multiple: false,
  id: 'pageId',
  label: 'Page Id',
  description: "Post query by single page id"
}, {
  val: '',
  multiple: false,
  id: 'pagename',
  label: 'Page name',
  description: "Post query by page slug"
}, {
  val: '',
  multiple: false,
  id: 'postParent',
  label: 'Post Parent',
  description: "Post query by post parent id",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'postParentIn',
  label: 'Post Parent In',
  description: "Post query by post parent ids",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'postParentNotIn',
  label: 'Post Parent Not In',
  description: "Post query by excluded post parent ids"
}, {
  val: [],
  multiple: false,
  id: 'postIn',
  label: 'Post In',
  description: "Post query by single post id",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'postNotIn',
  label: 'Post Not In',
  description: "Post query by excluded post ids",
  isPro: true
}, {
  val: [{
    slug: ''
  }],
  multiple: false,
  id: 'postNameIn',
  label: 'Post Name In',
  description: "Post query by post slugs",
  isPro: true
}, {
  val: '',
  multiple: false,
  id: 'hasPassword',
  label: 'Has Password',
  description: "Post query for posts with passwords"
}, {
  val: '',
  multiple: false,
  id: 'postPassword',
  label: 'Post Password',
  description: "Post query for posts with particular passwords",
  isPro: true
}, {
  val: {
    compare: '='
  },
  multiple: false,
  id: 'commentCount',
  label: 'Comment Count',
  description: "Post query by comment count"
}, {
  val: '',
  multiple: false,
  id: 'nopaging',
  label: 'No Paging',
  description: "Enable show all posts or use pagination"
}, {
  val: '',
  multiple: false,
  id: 'postsPerPage',
  label: 'Posts Per Page',
  description: "Number of post to show per page"
}, {
  val: '',
  multiple: false,
  id: 'paged',
  label: 'Paged',
  description: "Pagination start with"
}, {
  val: '',
  multiple: false,
  id: 'offset',
  label: 'Offset',
  description: "Number of post to displace or pass over"
}, {
  val: '',
  multiple: false,
  id: 'postsPerArchivePage',
  label: 'Posts Per Archive Page',
  description: ""
}, {
  val: '',
  multiple: false,
  id: 'ignoreStickyPosts',
  label: 'Ignore Sticky Posts',
  description: "Ignore post from post query",
  isPro: true
}, {
  val: '',
  multiple: false,
  id: 'metaKey',
  label: 'Meta Key',
  description: "Post query by custom field key"
}, {
  val: '',
  multiple: false,
  id: 'metaValue',
  label: 'Meta Value',
  description: "Post query by custom field value"
}, {
  val: '',
  multiple: false,
  id: 'metaValueNum',
  label: 'Meta Value Num',
  description: "Post query by custom field value for number types"
}, {
  val: '',
  multiple: false,
  id: 'metaCompare',
  label: 'Meta Compare',
  description: "Meta query compare"
}, {
  val: [],
  multiple: false,
  id: 'metaQuery',
  label: 'Meta Query',
  description: "Advance meta fields query"
}, {
  val: 'readable',
  multiple: false,
  id: 'perm',
  label: 'Perm',
  description: "User permission parameter"
}, {
  val: [],
  multiple: false,
  id: 'postMimeType',
  label: 'Post Mime Type',
  description: "Post query by allwed post mime types"
}, {
  val: false,
  multiple: false,
  id: 'cacheResults',
  label: 'Cache Results',
  description: "Enable Post information cache"
}, {
  val: false,
  multiple: false,
  id: 'updatePostMetaCache',
  label: 'Update Post Meta Cache',
  description: "Enable Post meta information cache"
}, {
  val: false,
  multiple: false,
  id: 'updatePostTermCache',
  label: 'Update Post Term Cache',
  description: "Enable Post term information cache"
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (queryPrams);

/***/ }),

/***/ "./src/blocks/post-grid-filterable/tutorials-links.js":
/*!************************************************************!*\
  !*** ./src/blocks/post-grid-filterable/tutorials-links.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var tutorialsLinks = [];
fetch("https://getpostgrid.com/wp-json/wp/v2/docs", {
  method: "GET",
  headers: {
    "Content-Type": "application/json;charset=utf-8"
  }
}).then(response => {
  if (response.ok && response.status < 400) {
    response.json().then(data => {
      data.map(x => {
        tutorialsLinks.push({
          label: x.title.rendered,
          url: x.link,
          isVideo: false
        });
      });
    });
  }
}).catch(_error => {//this.saveAsStatus = 'error';
  // handle the error
}); // const tutorialsLinks = [
//     { label: 'How to add columns?', url: '', isVideo: false, },
//     { label: 'How to disable pagination?', url: '', isVideo: false, },
//     { label: 'How to customize pagination style?', url: '', isVideo: false, },
//     { label: 'How to display normal pagination?', url: '', isVideo: false, },
//     { label: 'How to display next-previous pagination?', url: '', isVideo: false, },
//     { label: 'How to display ajax pagination?', url: '', isVideo: false, },
//     { label: 'How to enable infinte loading?', url: '', isVideo: false, },
//     { label: 'How to query post by post status?', url: '', isVideo: false, },
//     { label: 'How to add rows?', url: '', isVideo: false, },
//     { label: 'How to enable load more?', url: '', isVideo: false, },
//     { label: 'How to enable lazy loading?', url: '', isVideo: true, },
//     { label: 'How to custoize post grid container', url: '', isVideo: false, },
//     { label: 'How to customize post grid loop wrapper?', url: '', isVideo: false, },
//     { label: 'How to query post by post types?', url: '', isVideo: false, },
//     { label: 'How to query posts by custom post types?', url: '', isVideo: false, },
//     { label: 'How to query post by categories?', url: '', isVideo: false, },
//     { label: 'How to query post by tags?', url: '', isVideo: false, },
//     { label: 'How to query post by custom taxonomies & terms?', url: '', isVideo: false, },
//     { label: 'How to query post by custom meta fields?', url: '', isVideo: false, },
//     { label: 'How to query post by search parameter?', url: '', isVideo: false, },
//     { label: 'How to query post by order & orderby?', url: '', isVideo: false, },
//     { label: 'How to query post by date?', url: '', isVideo: false, },
//     { label: 'How to query post by author?', url: '', isVideo: false, },
//     { label: 'How to query post by post ids?', url: '', isVideo: false, },
//     { label: 'How to query post by post parents?', url: '', isVideo: false, },
//     { label: 'How to query post by post passwords?', url: '', isVideo: false, },
//     { label: 'How to customize layouts?', url: '', isVideo: false, },
//     { label: 'How to customize grid layout?', url: '', isVideo: false, },
//     { label: 'How to create complex grid layout?', url: '', isVideo: false, },
// ];

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (tutorialsLinks);

/***/ }),

/***/ "./src/blocks/post-grid/grid-layouts.js":
/*!**********************************************!*\
  !*** ./src/blocks/post-grid/grid-layouts.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/hooks */ "@wordpress/hooks");
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_hooks__WEBPACK_IMPORTED_MODULE_1__);


const gridLayoutsBasic = [{
  thumb: '',
  title: '3 Col, 0 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "0",
          "unit": "em"
        },
        "Mobile": {
          "val": "0",
          "unit": "em"
        },
        "Tablet": {
          "val": "0",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "0",
          "unit": "em"
        },
        "Mobile": {
          "val": "0",
          "unit": "em"
        },
        "Tablet": {
          "val": "0",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "11.5",
    y: "14.5",
    width: "73.3231",
    height: "91",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.0611 73.9162C25.0611 72.5868 26.1387 71.5092 27.468 71.5092H69.1885C70.5178 71.5092 71.5954 72.5868 71.5954 73.9162V73.9162C71.5954 75.2455 70.5178 76.3231 69.1885 76.3231H27.468C26.1387 76.3231 25.0611 75.2455 25.0611 73.9162V73.9162Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.0611 81.6184C25.0611 80.2891 26.1387 79.2115 27.468 79.2115H69.1885C70.5178 79.2115 71.5954 80.2891 71.5954 81.6184V81.6184C71.5954 82.9477 70.5178 84.0254 69.1885 84.0254H27.468C26.1387 84.0254 25.0611 82.9477 25.0611 81.6184V81.6184Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.0611 89.3206C25.0611 87.9913 26.1387 86.9137 27.468 86.9137H55.7663C57.0956 86.9137 58.1732 87.9913 58.1732 89.3206V89.3206C58.1732 90.65 57.0956 91.7276 55.7663 91.7276H27.468C26.1387 91.7276 25.0611 90.65 25.0611 89.3206V89.3206Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M20.2402 21.2314V65.1079H76.083V21.2314H20.2402ZM24.2289 25.2202H72.0942V52.9546L61.5613 42.3595L60.1279 40.926L51.0908 49.9631L39.6231 38.3707L38.1896 36.9372L24.2289 50.8979V25.2202ZM64.1167 29.209C61.9119 29.209 60.1279 30.993 60.1279 33.1978C60.1279 35.4025 61.9119 37.1865 64.1167 37.1865C66.3214 37.1865 68.1054 35.4025 68.1054 33.1978C68.1054 30.993 66.3214 29.209 64.1167 29.209ZM38.1896 42.6088L56.5131 61.1192H24.2289V56.5695L38.1896 42.6088ZM60.1279 46.5975L72.0942 58.5638V61.1192H62.1846L53.8954 52.7677L60.1279 46.5975Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "85.4359",
    y: "14.5",
    width: "73.3231",
    height: "91",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M98.9971 73.9162C98.9971 72.5868 100.075 71.5092 101.404 71.5092H143.124C144.454 71.5092 145.531 72.5868 145.531 73.9162V73.9162C145.531 75.2455 144.454 76.3231 143.124 76.3231H101.404C100.075 76.3231 98.9971 75.2455 98.9971 73.9162V73.9162Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M98.9971 81.6184C98.9971 80.2891 100.075 79.2115 101.404 79.2115H143.124C144.454 79.2115 145.531 80.2891 145.531 81.6184V81.6184C145.531 82.9477 144.454 84.0254 143.124 84.0254H101.404C100.075 84.0254 98.9971 82.9477 98.9971 81.6184V81.6184Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M98.9971 89.3206C98.9971 87.9913 100.075 86.9137 101.404 86.9137H129.702C131.032 86.9137 132.109 87.9913 132.109 89.3206V89.3206C132.109 90.65 131.032 91.7276 129.702 91.7276H101.404C100.075 91.7276 98.9971 90.65 98.9971 89.3206V89.3206Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M94.1761 21.2314V65.1079H150.019V21.2314H94.1761ZM98.1649 25.2202H146.03V52.9546L135.497 42.3595L134.064 40.926L125.027 49.9631L113.559 38.3707L112.126 36.9372L98.1649 50.8979V25.2202ZM138.053 29.209C135.848 29.209 134.064 30.993 134.064 33.1978C134.064 35.4025 135.848 37.1865 138.053 37.1865C140.257 37.1865 142.041 35.4025 142.041 33.1978C142.041 30.993 140.257 29.209 138.053 29.209ZM112.126 42.6088L130.449 61.1192H98.1649V56.5695L112.126 42.6088ZM134.064 46.5975L146.03 58.5638V61.1192H136.121L127.831 52.7677L134.064 46.5975Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "159.372",
    y: "14.5",
    width: "73.3231",
    height: "91",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M172.933 73.9162C172.933 72.5868 174.01 71.5092 175.34 71.5092H217.06C218.39 71.5092 219.467 72.5868 219.467 73.9162V73.9162C219.467 75.2455 218.39 76.3231 217.06 76.3231H175.34C174.01 76.3231 172.933 75.2455 172.933 73.9162V73.9162Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M172.933 81.6184C172.933 80.2891 174.01 79.2115 175.34 79.2115H217.06C218.39 79.2115 219.467 80.2891 219.467 81.6184V81.6184C219.467 82.9477 218.39 84.0254 217.06 84.0254H175.34C174.01 84.0254 172.933 82.9477 172.933 81.6184V81.6184Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M172.933 89.3206C172.933 87.9913 174.01 86.9137 175.34 86.9137H203.638C204.967 86.9137 206.045 87.9913 206.045 89.3206V89.3206C206.045 90.65 204.967 91.7276 203.638 91.7276H175.34C174.01 91.7276 172.933 90.65 172.933 89.3206V89.3206Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M168.112 21.2314V65.1079H223.955V21.2314H168.112ZM172.101 25.2202H219.966V52.9546L209.433 42.3595L208 40.926L198.963 49.9631L187.495 38.3707L186.061 36.9372L172.101 50.8979V25.2202ZM211.988 29.209C209.784 29.209 208 30.993 208 33.1978C208 35.4025 209.784 37.1865 211.988 37.1865C214.193 37.1865 215.977 35.4025 215.977 33.1978C215.977 30.993 214.193 29.209 211.988 29.209ZM186.061 42.6088L204.385 61.1192H172.101V56.5695L186.061 42.6088ZM208 46.5975L219.966 58.5638V61.1192H210.056L201.767 52.7677L208 46.5975Z",
    fill: "black"
  }))
}, {
  title: '3 Col 1 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "1",
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "1",
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "12.5",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 73.3111C25.4498 72.0396 26.4805 71.0089 27.7521 71.0089H67.6586C68.9301 71.0089 69.9608 72.0396 69.9608 73.3111V73.3111C69.9608 74.5827 68.9301 75.6134 67.6585 75.6134H27.7521C26.4805 75.6134 25.4498 74.5827 25.4498 73.3111V73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 80.6785C25.4498 79.407 26.4805 78.3762 27.7521 78.3762H67.6586C68.9301 78.3762 69.9608 79.407 69.9608 80.6785V80.6785C69.9608 81.95 68.9301 82.9808 67.6585 82.9808H27.7521C26.4805 82.9808 25.4498 81.95 25.4498 80.6785V80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 88.0458C25.4498 86.7743 26.4805 85.7435 27.7521 85.7435H54.8199C56.0915 85.7435 57.1222 86.7743 57.1222 88.0458V88.0458C57.1222 89.3174 56.0915 90.3481 54.8199 90.3481H27.7521C26.4805 90.3481 25.4498 89.3174 25.4498 88.0458V88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M20.8384 22.917V64.8858H74.2533V22.917H20.8384ZM24.6538 26.7324H70.4379V53.2609L60.363 43.1264L58.9919 41.7553L50.3478 50.3994L39.3786 39.3111L38.0075 37.9399L24.6538 51.2937V26.7324ZM62.8072 30.5477C60.6984 30.5477 58.9919 32.2542 58.9919 34.3631C58.9919 36.4719 60.6984 38.1784 62.8072 38.1784C64.9161 38.1784 66.6226 36.4719 66.6226 34.3631C66.6226 32.2542 64.9161 30.5477 62.8072 30.5477ZM38.0075 43.3649L55.5342 61.0705H24.6538V56.7186L38.0075 43.3649ZM58.9919 47.1802L70.4379 58.6263V61.0705H60.9592L53.0304 53.0821L58.9919 47.1802Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "87.4345",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100.384 73.3111C100.384 72.0396 101.415 71.0089 102.687 71.0089H142.593C143.865 71.0089 144.895 72.0396 144.895 73.3111V73.3111C144.895 74.5827 143.865 75.6134 142.593 75.6134H102.687C101.415 75.6134 100.384 74.5827 100.384 73.3111V73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100.384 80.6785C100.384 79.407 101.415 78.3762 102.687 78.3762H142.593C143.865 78.3762 144.895 79.407 144.895 80.6785V80.6785C144.895 81.95 143.865 82.9808 142.593 82.9808H102.687C101.415 82.9808 100.384 81.95 100.384 80.6785V80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100.384 88.0458C100.384 86.7743 101.415 85.7435 102.687 85.7435H129.754C131.026 85.7435 132.057 86.7743 132.057 88.0458V88.0458C132.057 89.3174 131.026 90.3481 129.754 90.3481H102.687C101.415 90.3481 100.384 89.3174 100.384 88.0458V88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M95.7729 22.917V64.8858H149.188V22.917H95.7729ZM99.5883 26.7324H145.372V53.2609L135.298 43.1264L133.926 41.7553L125.282 50.3994L114.313 39.3111L112.942 37.9399L99.5883 51.2937V26.7324ZM137.742 30.5477C135.633 30.5477 133.926 32.2542 133.926 34.3631C133.926 36.4719 135.633 38.1784 137.742 38.1784C139.851 38.1784 141.557 36.4719 141.557 34.3631C141.557 32.2542 139.851 30.5477 137.742 30.5477ZM112.942 43.3649L130.469 61.0705H99.5883V56.7186L112.942 43.3649ZM133.926 47.1802L145.372 58.6263V61.0705H135.894L127.965 53.0821L133.926 47.1802Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "162.369",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 73.3111C175.319 72.0396 176.35 71.0089 177.621 71.0089H217.528C218.799 71.0089 219.83 72.0396 219.83 73.3111V73.3111C219.83 74.5827 218.799 75.6134 217.528 75.6134H177.621C176.35 75.6134 175.319 74.5827 175.319 73.3111V73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 80.6785C175.319 79.407 176.35 78.3762 177.621 78.3762H217.528C218.799 78.3762 219.83 79.407 219.83 80.6785V80.6785C219.83 81.95 218.799 82.9808 217.528 82.9808H177.621C176.35 82.9808 175.319 81.95 175.319 80.6785V80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 88.0458C175.319 86.7743 176.35 85.7435 177.621 85.7435H204.689C205.96 85.7435 206.991 86.7743 206.991 88.0458V88.0458C206.991 89.3174 205.96 90.3481 204.689 90.3481H177.621C176.35 90.3481 175.319 89.3174 175.319 88.0458V88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M170.707 22.917V64.8858H224.122V22.917H170.707ZM174.523 26.7324H220.307V53.2609L210.232 43.1264L208.861 41.7553L200.217 50.3994L189.248 39.3111L187.877 37.9399L174.523 51.2937V26.7324ZM212.676 30.5477C210.567 30.5477 208.861 32.2542 208.861 34.3631C208.861 36.4719 210.567 38.1784 212.676 38.1784C214.785 38.1784 216.492 36.4719 216.492 34.3631C216.492 32.2542 214.785 30.5477 212.676 30.5477ZM187.877 43.3649L205.403 61.0705H174.523V56.7186L187.877 43.3649ZM208.861 47.1802L220.307 58.6263V61.0705H210.828L202.899 53.0821L208.861 47.1802Z",
    fill: "black"
  }))
}, {
  title: '3 Col 2 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "2",
          "unit": "em"
        },
        "Tablet": {
          "val": "2",
          "unit": "em"
        },
        "Mobile": {
          "val": "2",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "2",
          "unit": "em"
        },
        "Tablet": {
          "val": "2",
          "unit": "em"
        },
        "Mobile": {
          "val": "2",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "13.5",
    y: "19.5",
    width: "66.0524",
    height: "82",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.6855 73.0548C25.6855 71.8555 26.6578 70.8833 27.857 70.8833H65.4961C66.6954 70.8833 67.6676 71.8555 67.6676 73.0548V73.0548C67.6676 74.2541 66.6954 75.2263 65.4961 75.2263H27.857C26.6578 75.2263 25.6855 74.2541 25.6855 73.0548V73.0548Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.6855 80.0035C25.6855 78.8043 26.6578 77.8321 27.857 77.8321H65.4961C66.6954 77.8321 67.6676 78.8043 67.6676 80.0035V80.0035C67.6676 81.2028 66.6954 82.175 65.4961 82.175H27.857C26.6578 82.175 25.6855 81.2028 25.6855 80.0035V80.0035Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.6855 86.9523C25.6855 85.7531 26.6578 84.7809 27.857 84.7809H53.387C54.5862 84.7809 55.5584 85.7531 55.5584 86.9523V86.9523C55.5584 88.1516 54.5862 89.1238 53.387 89.1238H27.857C26.6578 89.1238 25.6855 88.1516 25.6855 86.9523V86.9523Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M21.3362 25.524V65.1083H71.7162V25.524H21.3362ZM24.9348 29.1226H68.1176V54.1439L58.6151 44.5852L57.3219 43.292L49.1689 51.445L38.823 40.9866L37.5298 39.6934L24.9348 52.2884V29.1226ZM60.9205 32.7212C58.9314 32.7212 57.3219 34.3307 57.3219 36.3197C57.3219 38.3088 58.9314 39.9183 60.9205 39.9183C62.9095 39.9183 64.519 38.3088 64.519 36.3197C64.519 34.3307 62.9095 32.7212 60.9205 32.7212ZM37.5298 44.8101L54.0607 61.5097H24.9348V57.4051L37.5298 44.8101ZM57.3219 48.4087L68.1176 59.2044V61.5097H59.1774L51.6991 53.9752L57.3219 48.4087Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "89.4753",
    y: "19.5",
    width: "66.0524",
    height: "82",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M101.661 73.0548C101.661 71.8555 102.633 70.8833 103.832 70.8833H141.471C142.671 70.8833 143.643 71.8555 143.643 73.0548V73.0548C143.643 74.2541 142.671 75.2263 141.471 75.2263H103.832C102.633 75.2263 101.661 74.2541 101.661 73.0548V73.0548Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M101.661 80.0035C101.661 78.8043 102.633 77.8321 103.832 77.8321H141.471C142.671 77.8321 143.643 78.8043 143.643 80.0035V80.0035C143.643 81.2028 142.671 82.175 141.471 82.175H103.832C102.633 82.175 101.661 81.2028 101.661 80.0035V80.0035Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M101.661 86.9523C101.661 85.7531 102.633 84.7809 103.832 84.7809H129.362C130.562 84.7809 131.534 85.7531 131.534 86.9523V86.9523C131.534 88.1516 130.562 89.1238 129.362 89.1238H103.832C102.633 89.1238 101.661 88.1516 101.661 86.9523V86.9523Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M97.3116 25.524V65.1083H147.692V25.524H97.3116ZM100.91 29.1226H144.093V54.1439L134.59 44.5852L133.297 43.292L125.144 51.445L114.798 40.9866L113.505 39.6934L100.91 52.2884V29.1226ZM136.896 32.7212C134.907 32.7212 133.297 34.3307 133.297 36.3197C133.297 38.3088 134.907 39.9183 136.896 39.9183C138.885 39.9183 140.494 38.3088 140.494 36.3197C140.494 34.3307 138.885 32.7212 136.896 32.7212ZM113.505 44.8101L130.036 61.5097H100.91V57.4051L113.505 44.8101ZM133.297 48.4087L144.093 59.2044V61.5097H135.153L127.674 53.9752L133.297 48.4087Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "165.389",
    y: "19.5",
    width: "66.0524",
    height: "82",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M177.575 73.0548C177.575 71.8555 178.547 70.8833 179.746 70.8833H217.385C218.585 70.8833 219.557 71.8555 219.557 73.0548V73.0548C219.557 74.2541 218.585 75.2263 217.385 75.2263H179.746C178.547 75.2263 177.575 74.2541 177.575 73.0548V73.0548Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M177.575 80.0035C177.575 78.8043 178.547 77.8321 179.746 77.8321H217.385C218.585 77.8321 219.557 78.8043 219.557 80.0035V80.0035C219.557 81.2028 218.585 82.175 217.385 82.175H179.746C178.547 82.175 177.575 81.2028 177.575 80.0035V80.0035Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M177.575 86.9523C177.575 85.7531 178.547 84.7809 179.746 84.7809H205.276C206.476 84.7809 207.448 85.7531 207.448 86.9523V86.9523C207.448 88.1516 206.476 89.1238 205.276 89.1238H179.746C178.547 89.1238 177.575 88.1516 177.575 86.9523V86.9523Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M173.225 25.524V65.1083H223.605V25.524H173.225ZM176.824 29.1226H220.007V54.1439L210.504 44.5852L209.211 43.292L201.058 51.445L190.712 40.9866L189.419 39.6934L176.824 52.2884V29.1226ZM212.81 32.7212C210.821 32.7212 209.211 34.3307 209.211 36.3197C209.211 38.3088 210.821 39.9183 212.81 39.9183C214.799 39.9183 216.408 38.3088 216.408 36.3197C216.408 34.3307 214.799 32.7212 212.81 32.7212ZM189.419 44.8101L205.95 61.5097H176.824V57.4051L189.419 44.8101ZM209.211 48.4087L220.007 59.2044V61.5097H211.067L203.588 53.9752L209.211 48.4087Z",
    fill: "black"
  }))
}, {
  title: '2 Col 0 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "0",
          "unit": "em"
        },
        "Tablet": {
          "val": "0",
          "unit": "em"
        },
        "Mobile": {
          "val": "0",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "0",
          "unit": "em"
        },
        "Tablet": {
          "val": "0",
          "unit": "em"
        },
        "Mobile": {
          "val": "0",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "38.5",
    y: "8.5",
    width: "83.0175",
    height: "103",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M53.8952 75.7313C53.8952 74.2286 55.1134 73.0104 56.6161 73.0104H103.778C105.281 73.0104 106.499 74.2286 106.499 75.7313C106.499 77.234 105.281 78.4522 103.778 78.4522H56.6161C55.1134 78.4522 53.8952 77.234 53.8952 75.7313Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M53.8952 84.4382C53.8952 82.9355 55.1134 81.7173 56.6161 81.7173H103.778C105.281 81.7173 106.499 82.9355 106.499 84.4382C106.499 85.9409 105.281 87.1591 103.778 87.1591H56.6161C55.1134 87.1591 53.8952 85.9409 53.8952 84.4382Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M53.8952 93.1451C53.8952 91.6424 55.1134 90.4242 56.6161 90.4242H88.6054C90.1081 90.4242 91.3263 91.6424 91.3263 93.1451C91.3263 94.6478 90.1081 95.866 88.6054 95.866H56.6161C55.1134 95.866 53.8952 94.6478 53.8952 93.1451Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M48.4454 16.1747V65.7742H111.572V16.1747H48.4454ZM52.9545 20.6837H107.063V52.0357L95.1563 40.0585L93.5359 38.4381L83.3201 48.6539L70.3566 35.5495L68.7361 33.929L52.9545 49.7107V20.6837ZM98.0449 25.1928C95.5526 25.1928 93.5359 27.2095 93.5359 29.7018C93.5359 32.1941 95.5526 34.2109 98.0449 34.2109C100.537 34.2109 102.554 32.1941 102.554 29.7018C102.554 27.2095 100.537 25.1928 98.0449 25.1928ZM68.7361 40.3403L89.4496 61.2651H52.9545V56.122L68.7361 40.3403ZM93.5359 44.8494L107.063 58.3765V61.2651H95.8609L86.4905 51.8243L93.5359 44.8494Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "122.08",
    y: "8.5",
    width: "83.0175",
    height: "103",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M137.475 75.7313C137.475 74.2286 138.693 73.0104 140.196 73.0104H187.358C188.861 73.0104 190.079 74.2286 190.079 75.7313C190.079 77.234 188.861 78.4522 187.358 78.4522H140.196C138.693 78.4522 137.475 77.234 137.475 75.7313Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M137.475 84.4382C137.475 82.9355 138.693 81.7173 140.196 81.7173H187.358C188.861 81.7173 190.079 82.9355 190.079 84.4382C190.079 85.9409 188.861 87.1591 187.358 87.1591H140.196C138.693 87.1591 137.475 85.9409 137.475 84.4382Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M137.475 93.1451C137.475 91.6424 138.693 90.4242 140.196 90.4242H172.185C173.688 90.4242 174.906 91.6424 174.906 93.1451C174.906 94.6478 173.688 95.866 172.185 95.866H140.196C138.693 95.866 137.475 94.6478 137.475 93.1451Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M132.025 16.1747V65.7742H195.152V16.1747H132.025ZM136.534 20.6837H190.643V52.0357L178.736 40.0585L177.116 38.4381L166.9 48.6539L153.936 35.5495L152.316 33.929L136.534 49.7107V20.6837ZM181.625 25.1928C179.132 25.1928 177.116 27.2095 177.116 29.7018C177.116 32.1941 179.132 34.2109 181.625 34.2109C184.117 34.2109 186.134 32.1941 186.134 29.7018C186.134 27.2095 184.117 25.1928 181.625 25.1928ZM152.316 40.3403L173.029 61.2651H136.534V56.122L152.316 40.3403ZM177.116 44.8494L190.643 58.3765V61.2651H179.441L170.07 51.8243L177.116 44.8494Z",
    fill: "black"
  }))
}, {
  title: '2 Col 1 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "1",
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "1",
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "37.5",
    y: "9.5",
    width: "81.7632",
    height: "101.447",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M52.6579 75.7202C52.6579 74.2399 53.8579 73.0399 55.3382 73.0399H101.796C103.277 73.0399 104.477 74.2399 104.477 75.7202V75.7202C104.477 77.2005 103.277 78.4005 101.796 78.4005H55.3382C53.8579 78.4005 52.6579 77.2005 52.6579 75.7202V75.7202Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M52.6579 84.297C52.6579 82.8168 53.8579 81.6168 55.3382 81.6168H101.796C103.277 81.6168 104.477 82.8168 104.477 84.297V84.297C104.477 85.7773 103.277 86.9773 101.796 86.9773H55.3382C53.8579 86.9773 52.6579 85.7773 52.6579 84.297V84.297Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M52.6579 92.8739C52.6579 91.3936 53.8579 90.1936 55.3382 90.1936H86.8499C88.3302 90.1936 89.5302 91.3936 89.5302 92.8739V92.8739C89.5302 94.3542 88.3302 95.5542 86.8499 95.5542H55.3382C53.8579 95.5542 52.6579 94.3542 52.6579 92.8739V92.8739Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M47.2895 17.0526V65.9117H109.474V17.0526H47.2895ZM51.7312 21.4944H105.032V52.3783L93.303 40.5799L91.7068 38.9837L81.6435 49.047L68.8735 36.1382L67.2773 34.542L51.7312 50.088V21.4944ZM96.1485 25.9361C93.6934 25.9361 91.7068 27.9227 91.7068 30.3778C91.7068 32.8329 93.6934 34.8196 96.1485 34.8196C98.6036 34.8196 100.59 32.8329 100.59 30.3778C100.59 27.9227 98.6036 25.9361 96.1485 25.9361ZM67.2773 40.8575L87.6815 61.4699H51.7312V56.4036L67.2773 40.8575ZM91.7068 45.2993L105.032 58.6245V61.4699H93.997L84.7666 52.1701L91.7068 45.2993Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "124.737",
    y: "9.5",
    width: "81.7632",
    height: "101.447",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M139.895 75.7202C139.895 74.2399 141.095 73.0399 142.575 73.0399H189.033C190.513 73.0399 191.713 74.2399 191.713 75.7202V75.7202C191.713 77.2005 190.513 78.4005 189.033 78.4005H142.575C141.095 78.4005 139.895 77.2005 139.895 75.7202V75.7202Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M139.895 84.297C139.895 82.8168 141.095 81.6168 142.575 81.6168H189.033C190.513 81.6168 191.713 82.8168 191.713 84.297V84.297C191.713 85.7773 190.513 86.9773 189.033 86.9773H142.575C141.095 86.9773 139.895 85.7773 139.895 84.297V84.297Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M139.895 92.8739C139.895 91.3936 141.095 90.1936 142.575 90.1936H174.087C175.567 90.1936 176.767 91.3936 176.767 92.8739V92.8739C176.767 94.3542 175.567 95.5542 174.087 95.5542H142.575C141.095 95.5542 139.895 94.3542 139.895 92.8739V92.8739Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M134.526 17.0526V65.9117H196.711V17.0526H134.526ZM138.968 21.4944H192.269V52.3783L180.54 40.5799L178.944 38.9837L168.88 49.047L156.11 36.1382L154.514 34.542L138.968 50.088V21.4944ZM183.385 25.9361C180.93 25.9361 178.944 27.9227 178.944 30.3778C178.944 32.8329 180.93 34.8196 183.385 34.8196C185.84 34.8196 187.827 32.8329 187.827 30.3778C187.827 27.9227 185.84 25.9361 183.385 25.9361ZM154.514 40.8575L174.918 61.4699H138.968V56.4036L154.514 40.8575ZM178.944 45.2993L192.269 58.6245V61.4699H181.234L172.003 52.1701L178.944 45.2993Z",
    fill: "black"
  }))
}, {
  title: '2 Col 2 Gap',
  data: {
    "options": {
      "gridTemplateColumns": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "gridTemplateRows": [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      "colGap": {
        "val": 1,
        "unit": "em"
      },
      "rowGap": {
        "val": 1,
        "unit": "em"
      },
      "itemCss": []
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": "1",
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": "2",
          "unit": "em"
        },
        "Tablet": {
          "val": "2",
          "unit": "em"
        },
        "Mobile": {
          "val": "2",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": "2",
          "unit": "em"
        },
        "Tablet": {
          "val": "2",
          "unit": "em"
        },
        "Mobile": {
          "val": "2",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "34.5",
    y: "9.5",
    width: "81.4017",
    height: "101",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M49.5895 75.4288C49.5895 73.955 50.7842 72.7603 52.258 72.7603H98.5133C99.9871 72.7603 101.182 73.955 101.182 75.4288V75.4288C101.182 76.9026 99.9871 78.0974 98.5133 78.0974H52.258C50.7842 78.0974 49.5895 76.9026 49.5895 75.4288V75.4288Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M49.5895 83.9683C49.5895 82.4944 50.7842 81.2997 52.258 81.2997H98.5133C99.9871 81.2997 101.182 82.4944 101.182 83.9683V83.9683C101.182 85.4421 99.9871 86.6368 98.5133 86.6368H52.258C50.7842 86.6368 49.5895 85.4421 49.5895 83.9683V83.9683Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M49.5895 92.5077C49.5895 91.0338 50.7842 89.8391 52.258 89.8391H83.6322C85.106 89.8391 86.3007 91.0338 86.3007 92.5077V92.5077C86.3007 93.9815 85.106 95.1762 83.6322 95.1762H52.258C50.7842 95.1762 49.5895 93.9815 49.5895 92.5077V92.5077Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M44.2446 17.0175V65.6632H106.157V17.0175H44.2446ZM48.6669 21.4398H101.735V52.1889L90.0572 40.442L88.4679 38.8528L78.4486 48.8721L65.7343 36.0197L64.1451 34.4304L48.6669 49.9086V21.4398ZM92.8902 25.8622C90.4459 25.8622 88.4679 27.8401 88.4679 30.2845C88.4679 32.7289 90.4459 34.7068 92.8902 34.7068C95.3346 34.7068 97.3126 32.7289 97.3126 30.2845C97.3126 27.8401 95.3346 25.8622 92.8902 25.8622ZM64.1451 40.7184L84.4602 61.2408H48.6669V56.1966L64.1451 40.7184ZM88.4679 45.1408L101.735 58.4078V61.2408H90.7482L81.558 51.9816L88.4679 45.1408Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "127.867",
    y: "9.5",
    width: "81.4017",
    height: "101",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M142.957 75.4288C142.957 73.955 144.152 72.7603 145.625 72.7603H191.881C193.354 72.7603 194.549 73.955 194.549 75.4288V75.4288C194.549 76.9026 193.354 78.0974 191.881 78.0974H145.625C144.152 78.0974 142.957 76.9026 142.957 75.4288V75.4288Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M142.957 83.9683C142.957 82.4944 144.152 81.2997 145.625 81.2997H191.881C193.354 81.2997 194.549 82.4944 194.549 83.9683V83.9683C194.549 85.4421 193.354 86.6368 191.881 86.6368H145.625C144.152 86.6368 142.957 85.4421 142.957 83.9683V83.9683Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M142.957 92.5077C142.957 91.0338 144.152 89.8391 145.625 89.8391H177C178.473 89.8391 179.668 91.0338 179.668 92.5077V92.5077C179.668 93.9815 178.473 95.1762 177 95.1762H145.625C144.152 95.1762 142.957 93.9815 142.957 92.5077V92.5077Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M137.612 17.0175V65.6632H199.525V17.0175H137.612ZM142.034 21.4398H195.102V52.1889L183.424 40.442L181.835 38.8528L171.816 48.8721L159.102 36.0197L157.512 34.4304L142.034 49.9086V21.4398ZM186.258 25.8622C183.813 25.8622 181.835 27.8401 181.835 30.2845C181.835 32.7289 183.813 34.7068 186.258 34.7068C188.702 34.7068 190.68 32.7289 190.68 30.2845C190.68 27.8401 188.702 25.8622 186.258 25.8622ZM157.512 40.7184L177.827 61.2408H142.034V56.1966L157.512 40.7184ZM181.835 45.1408L195.102 58.4078V61.2408H184.115L174.925 51.9816L181.835 45.1408Z",
    fill: "black"
  }))
}, {
  title: '3 Col, nth(1)-2 Offset 1 Gap',
  isPro: true,
  data: {
    "options": {
      "itemCss": {
        "Desktop": [{
          "grid-column-start": "1",
          "grid-column-end": "3",
          "grid-row-start": "",
          "grid-row-end": ""
        }]
      }
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": 1,
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": 1,
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "12.5",
    y: "16.5",
    width: "145",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M24 73.3111C24 72.0396 25.0308 71.0089 26.3023 71.0089H138.698C139.969 71.0089 141 72.0396 141 73.3111V73.3111C141 74.5827 139.969 75.6134 138.698 75.6134H26.3023C25.0308 75.6134 24 74.5827 24 73.3111V73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M24 80.6785C24 79.407 25.0308 78.3762 26.3023 78.3762H138.698C139.969 78.3762 141 79.407 141 80.6785V80.6785C141 81.95 139.969 82.9808 138.698 82.9808H26.3023C25.0308 82.9808 24 81.95 24 80.6785V80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M24 88.0458C24 86.7743 25.0308 85.7435 26.3023 85.7435H104.951C106.222 85.7435 107.253 86.7743 107.253 88.0458V88.0458C107.253 89.3174 106.222 90.3481 104.951 90.3481H26.3023C25.0308 90.3481 24 89.3174 24 88.0458V88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M58 22.9171V64.8859H111.415V22.9171H58ZM61.8153 26.7324H107.6V53.261L97.5246 43.1265L96.1535 41.7553L87.5093 50.3995L76.5402 39.3111L75.1691 37.94L61.8153 51.2937V26.7324ZM99.9688 30.5477C97.8599 30.5477 96.1535 32.2542 96.1535 34.3631C96.1535 36.472 97.8599 38.1784 99.9688 38.1784C102.078 38.1784 103.784 36.472 103.784 34.3631C103.784 32.2542 102.078 30.5477 99.9688 30.5477ZM75.1691 43.3649L92.6958 61.0705H61.8153V56.7186L75.1691 43.3649ZM96.1535 47.1803L107.6 58.6263V61.0705H98.1208L90.192 53.0821L96.1535 47.1803Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "162.369",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 73.3111C175.319 72.0396 176.35 71.0089 177.621 71.0089H217.528C218.799 71.0089 219.83 72.0396 219.83 73.3111C219.83 74.5827 218.799 75.6134 217.528 75.6134H177.621C176.35 75.6134 175.319 74.5827 175.319 73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 80.6785C175.319 79.407 176.35 78.3762 177.621 78.3762H217.528C218.799 78.3762 219.83 79.407 219.83 80.6785C219.83 81.95 218.799 82.9808 217.528 82.9808H177.621C176.35 82.9808 175.319 81.95 175.319 80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M175.319 88.0458C175.319 86.7743 176.35 85.7435 177.621 85.7435H204.689C205.96 85.7435 206.991 86.7743 206.991 88.0458C206.991 89.3174 205.96 90.3481 204.689 90.3481H177.621C176.35 90.3481 175.319 89.3174 175.319 88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M170.707 22.917V64.8858H224.122V22.917H170.707ZM174.523 26.7324H220.307V53.2609L210.232 43.1264L208.861 41.7553L200.217 50.3994L189.248 39.3111L187.877 37.9399L174.523 51.2937V26.7324ZM212.676 30.5477C210.567 30.5477 208.861 32.2542 208.861 34.3631C208.861 36.4719 210.567 38.1784 212.676 38.1784C214.785 38.1784 216.492 36.4719 216.492 34.3631C216.492 32.2542 214.785 30.5477 212.676 30.5477ZM187.877 43.3649L205.403 61.0705H174.523V56.7186L187.877 43.3649ZM208.861 47.1802L220.307 58.6263V61.0705H210.828L202.899 53.0821L208.861 47.1802Z",
    fill: "black"
  }))
}, {
  title: '3 Col, nth(2)-2 Offset 1 Gap',
  isPro: true,
  data: {
    "options": {
      "itemCss": {
        "Desktop": [{
          "grid-column-start": "",
          "grid-column-end": "",
          "grid-row-start": "",
          "grid-row-end": ""
        }, {
          "grid-column-start": "2",
          "grid-column-end": "4",
          "grid-row-start": "",
          "grid-row-end": ""
        }]
      }
    },
    "styles": {
      "gridTemplateColumns": {
        "Desktop": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Tablet": [{
          "val": 1,
          "unit": "fr"
        }, {
          "val": 1,
          "unit": "fr"
        }],
        "Mobile": [{
          "val": 1,
          "unit": "fr"
        }]
      },
      "gridTemplateRows": {},
      "colGap": {
        "Desktop": {
          "val": 1,
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "rowGap": {
        "Desktop": {
          "val": 1,
          "unit": "em"
        },
        "Tablet": {
          "val": "1",
          "unit": "em"
        },
        "Mobile": {
          "val": "1",
          "unit": "em"
        }
      },
      "textAlign": {},
      "color": {},
      "bgColor": {},
      "padding": {},
      "margin": {}
    }
  },
  icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
    width: "245",
    height: "120",
    viewBox: "0 0 245 120",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "88.5",
    y: "16.5",
    width: "145",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100 73.3111C100 72.0396 101.031 71.0089 102.302 71.0089H214.698C215.969 71.0089 217 72.0396 217 73.3111C217 74.5827 215.969 75.6134 214.698 75.6134H102.302C101.031 75.6134 100 74.5827 100 73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100 80.6785C100 79.407 101.031 78.3762 102.302 78.3762H214.698C215.969 78.3762 217 79.407 217 80.6785C217 81.95 215.969 82.9808 214.698 82.9808H102.302C101.031 82.9808 100 81.95 100 80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M100 88.0458C100 86.7743 101.031 85.7435 102.302 85.7435H180.951C182.222 85.7435 183.253 86.7743 183.253 88.0458C183.253 89.3174 182.222 90.3481 180.951 90.3481H102.302C101.031 90.3481 100 89.3174 100 88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M134 22.9171V64.8859H187.415V22.9171H134ZM137.815 26.7324H183.6V53.261L173.525 43.1265L172.153 41.7553L163.509 50.3995L152.54 39.3111L151.169 37.94L137.815 51.2937V26.7324ZM175.969 30.5477C173.86 30.5477 172.153 32.2542 172.153 34.3631C172.153 36.472 173.86 38.1784 175.969 38.1784C178.078 38.1784 179.784 36.472 179.784 34.3631C179.784 32.2542 178.078 30.5477 175.969 30.5477ZM151.169 43.3649L168.696 61.0705H137.815V56.7186L151.169 43.3649ZM172.153 47.1803L183.6 58.6263V61.0705H174.121L166.192 53.0821L172.153 47.1803Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("rect", {
    x: "12.5",
    y: "16.5",
    width: "70.0917",
    height: "87",
    stroke: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 73.3111C25.4498 72.0396 26.4805 71.0089 27.7521 71.0089H67.6586C68.9301 71.0089 69.9608 72.0396 69.9608 73.3111C69.9608 74.5827 68.9301 75.6134 67.6586 75.6134H27.7521C26.4805 75.6134 25.4498 74.5827 25.4498 73.3111Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 80.6785C25.4498 79.407 26.4805 78.3762 27.7521 78.3762H67.6586C68.9301 78.3762 69.9608 79.407 69.9608 80.6785C69.9608 81.95 68.9301 82.9808 67.6586 82.9808H27.7521C26.4805 82.9808 25.4498 81.95 25.4498 80.6785Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M25.4498 88.0458C25.4498 86.7743 26.4805 85.7435 27.7521 85.7435H54.8199C56.0915 85.7435 57.1222 86.7743 57.1222 88.0458C57.1222 89.3174 56.0915 90.3481 54.8199 90.3481H27.7521C26.4805 90.3481 25.4498 89.3174 25.4498 88.0458Z",
    fill: "black"
  }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
    d: "M20.8384 22.917V64.8858H74.2533V22.917H20.8384ZM24.6538 26.7324H70.4379V53.2609L60.363 43.1264L58.9919 41.7553L50.3478 50.3994L39.3786 39.3111L38.0075 37.9399L24.6538 51.2937V26.7324ZM62.8072 30.5477C60.6984 30.5477 58.9919 32.2542 58.9919 34.3631C58.9919 36.4719 60.6984 38.1784 62.8072 38.1784C64.9161 38.1784 66.6226 36.4719 66.6226 34.3631C66.6226 32.2542 64.9161 30.5477 62.8072 30.5477ZM38.0075 43.3649L55.5342 61.0705H24.6538V56.7186L38.0075 43.3649ZM58.9919 47.1802L70.4379 58.6263V61.0705H60.9592L53.0304 53.0821L58.9919 47.1802Z",
    fill: "black"
  }))
}];
let gridLayouts = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_1__.applyFilters)('gridLayouts', gridLayoutsBasic);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (gridLayouts);

/***/ }),

/***/ "./src/blocks/post-grid/index.js":
/*!***************************************!*\
  !*** ./src/blocks/post-grid/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/hooks */ "@wordpress/hooks");
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_hooks__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/icon/index.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/close.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_styles__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/styles */ "./src/components/styles/index.js");
/* harmony import */ var _components_css_text_align__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-text-align */ "./src/components/css-text-align/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_tutorials__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../components/tutorials */ "./src/components/tutorials/index.js");
/* harmony import */ var _components_css_padding__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../components/css-padding */ "./src/components/css-padding/index.js");
/* harmony import */ var _components_css_outline__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../components/css-outline */ "./src/components/css-outline/index.js");
/* harmony import */ var _components_css_border__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../components/css-border */ "./src/components/css-border/index.js");
/* harmony import */ var _components_css_box_shadow__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../components/css-box-shadow */ "./src/components/css-box-shadow/index.js");
/* harmony import */ var _components_input_select__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../components/input-select */ "./src/components/input-select/index.js");
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _query_presets__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./query-presets */ "./src/blocks/post-grid/query-presets.js");
/* harmony import */ var _grid_layouts__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./grid-layouts */ "./src/blocks/post-grid/grid-layouts.js");
/* harmony import */ var _queryprams__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./queryprams */ "./src/blocks/post-grid/queryprams.js");
/* harmony import */ var _pagination_types__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./pagination-types */ "./src/blocks/post-grid/pagination-types.js");
/* harmony import */ var _tutorials_links__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./tutorials-links */ "./src/blocks/post-grid/tutorials-links.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! animejs/lib/anime.es.js */ "./node_modules/animejs/lib/anime.es.js");







const {
  parse
} = wp.blockSerializationDefaultParser;
const {
  RawHTML
} = wp.element;

var select = wp.data.select('core/block-editor');


































const ALLOWED_MEDIA_TYPES = ['image'];
var queryPramsX = _queryprams__WEBPACK_IMPORTED_MODULE_29__["default"].map((x, i) => {
  return {
    value: i,
    label: x.label,
    description: x.description,
    isPro: x.isPro
  };
});
var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/post-grid", {
  title: "Post Grid",
  icon: {
    background: '#2563eb',
    foreground: '#2563eb',
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M274 117C274 114.239 276.239 112 279 112H417C419.761 112 422 114.239 422 117V137C422 139.761 419.761 142 417 142H279C276.239 142 274 139.761 274 137V117Z",
      fill: "#ffffff"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M274 182C274 179.239 276.239 177 279 177H417C419.761 177 422 179.239 422 182V202C422 204.761 419.761 207 417 207H279C276.239 207 274 204.761 274 202V182Z",
      fill: "#ffffff"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("rect", {
      x: "98",
      y: "100",
      width: "118",
      height: "118",
      stroke: "#ffffff",
      "stroke-width": "30"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("rect", {
      x: "94",
      y: "283",
      width: "118",
      height: "118",
      stroke: "#ffffff",
      "stroke-width": "30"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M289 283H407V401H289V283Z",
      stroke: "#ffffff",
      background: "black",
      "stroke-width": "30"
    }))
  },
  providesContext: {
    queryId: "queryId",
    loopIndex: "loopIndex",
    query: "query",
    displayLayout: "displayLayout"
  },
  supports: {
    align: ["left", "right", "center", "wide", "full"],
    html: false
  },
  attributes: {
    lazyLoad: {
      type: 'object',
      default: {
        options: {
          class: 'lazyLoad',
          enable: 'no',
          srcUrl: '',
          srcId: '',
          icon: {
            library: '',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: ''
          }
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    search: {
      type: 'object',
      default: {
        options: {
          class: 'search',
          enable: 'no',
          type: '',
          placeholder: '',
          icon: '',
          busyIcon: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    container: {
      type: 'object',
      default: {
        options: {
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          backgroundImage: {},
          padding: {},
          margin: {}
        }
      }
    },
    itemsWrap: {
      type: 'object',
      default: {
        options: {
          class: 'items-loop'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          margin: {}
        }
      }
    },
    itemWrap: {
      type: 'object',
      default: {
        options: {
          class: 'item'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          outline: {},
          border: {},
          boxShadow: {},
          borderRadius: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {},
          fontFamily: {},
          fontWeight: {}
        },
        hoverStyles: {
          color: {},
          bgColor: {}
        }
      }
    },
    noPostsWrap: {
      type: 'object',
      default: {
        options: {
          class: 'no-posts text-center'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          margin: {}
        }
      }
    },
    spinnerWrap: {
      type: 'object',
      default: {
        options: {
          class: 'spinner'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          wordBreak: {},
          padding: {},
          margin: {}
        }
      }
    },
    grid: {
      type: 'object',
      default: {
        options: {
          itemCss: {}
        },
        styles: {
          gridTemplateColumns: {},
          gridTemplateRows: {},
          colGap: {},
          rowGap: {},
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    pagination: {
      type: 'object',
      default: {
        options: {
          class: 'pagination',
          type: 'normal',
          maxPageNum: '',
          prevText: 'Previous',
          nextText: 'Next',
          loadMoreText: 'Load More',
          noMorePosts: 'No More Posts',
          loadingText: 'Loading...',
          loadingIcon: {
            library: '',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: ''
          }
        },
        styles: {
          textAlign: {
            "Desktop": "center"
          },
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        hoverStyles: {
          color: {},
          bgColor: {}
        }
      }
    },
    paginationItem: {
      type: 'object',
      default: {
        options: {
          class: 'page-numbers inline-block'
        },
        styles: {
          textAlign: {},
          display: {
            "Desktop": "inline-block"
          },
          color: {
            "Desktop": "#18978F"
          },
          bgColor: {
            "Desktop": "#9DD6DF"
          },
          padding: {
            "Desktop": {
              "top": "10px",
              "right": "10px",
              "bottom": "10px",
              "left": "10px"
            }
          },
          margin: {
            "Desktop": {
              "top": "5px",
              "right": "5px",
              "bottom": "5px",
              "left": "5px"
            }
          },
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        hoverStyles: {
          color: {},
          bgColor: {}
        }
      }
    },
    paginationItemActive: {
      type: 'object',
      default: {
        options: {
          class: 'page-numbers inline-block'
        },
        styles: {
          textAlign: {},
          display: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        hoverStyles: {
          color: {},
          bgColor: {}
        }
      }
    },
    layout: {
      type: 'object',
      default: {
        id: '',
        srcServer: 'library',
        data: [{
          "blockName": "core/post-title",
          "attrs": {},
          "innerBlocks": [],
          "innerHTML": "",
          "innerContent": []
        }, {
          "blockName": null,
          "attrs": {},
          "innerBlocks": [],
          "innerHTML": "\n\n",
          "innerContent": ["\n\n"]
        }, {
          "blockName": "core/post-date",
          "attrs": {},
          "innerBlocks": [],
          "innerHTML": "",
          "innerContent": []
        }, {
          "blockName": null,
          "attrs": {},
          "innerBlocks": [],
          "innerHTML": "\n\n",
          "innerContent": ["\n\n"]
        }, {
          "blockName": "core/post-excerpt",
          "attrs": {
            "moreText": "",
            "textColor": "primary"
          },
          "innerBlocks": [],
          "innerHTML": "",
          "innerContent": []
        }],
        "rawData": "<!-- wp:post-featured-image  /-->\n\n<!-- wp:post-title /-->\n\n<!-- wp:post-excerpt  /-->"
      }
    },
    postTypes: {
      type: 'array',
      default: []
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    scripts: {
      type: 'object',
      default: {
        js: '',
        css: ''
      }
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    queryArgs: {
      type: 'object',
      default: {
        items: [{
          val: ['post'],
          multiple: false,
          id: 'postType',
          label: 'Post Types',
          description: "Select Post Types to Query"
        }, {
          val: ['publish'],
          multiple: false,
          id: 'postStatus',
          label: 'Post status',
          description: "Query post by post status"
        }, {
          val: 'DESC',
          multiple: false,
          id: 'order',
          label: 'Order',
          description: "Post query order"
        }, {
          val: ['date'],
          multiple: false,
          id: 'orderby',
          label: 'Orderby',
          description: "Post query orderby"
        }, {
          val: 10,
          multiple: false,
          id: 'postsPerPage',
          label: 'Posts Per Page',
          description: "Number of post to show per page"
        }, {
          val: 1,
          multiple: false,
          id: 'paged',
          label: 'Paged',
          description: "Pagination start with"
        }]
      }
    }
  },
  category: "post-grid",
  edit: function (props) {
    const blockProps = (0,_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__.useBlockProps)();
    var attributes = props.attributes;
    var clientId = props.clientId;
    var setAttributes = props.setAttributes;
    var lazyLoad = attributes.lazyLoad;
    var container = attributes.container;
    var pagination = attributes.pagination;
    var paginationItem = attributes.paginationItem;
    var paginationItemActive = attributes.paginationItemActive;
    var search = attributes.search;
    var itemsWrap = attributes.itemsWrap;
    var itemWrap = attributes.itemWrap;
    var noPostsWrap = attributes.noPostsWrap;
    var spinnerWrap = attributes.spinnerWrap;
    var grid = attributes.grid;
    var layout = attributes.layout;
    var queryArgs = attributes.queryArgs;
    var blockCssY = attributes.blockCssY;
    var customCss = attributes.customCss;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var [isBusy, setIsBusy] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Using the hook.

    var [importLayoutOpen, setimportLayoutOpen] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
      id: 0,
      isOpen: false
    }); // Using the hook.

    var containerSelector = blockClass;
    const loopItemsWrapSelector = blockClass + ' .items-loop';
    const loopItemSelector = blockClass + ' .item';
    const noPostsSelector = blockClass + ' .no-posts';
    const searchWrapSelector = blockClass + ' .search';
    const lazyloadWrapSelector = blockClass + ' .lazyLoad';
    const spinnerSelector = blockClass + ' .spinner';
    const paginationWrapSelector = blockClass + ' .pagination';
    const paginationItemSelector = blockClass + ' .pagination .page-numbers';
    const paginationItemActiveSelector = blockClass + ' .pagination .page-numbers.current';
    var [debounce, setDebounce] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Using the hook.

    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore != null ? myStore.getBreakPoint() : 'Desktop');
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(window.PostGridPluginData);
    const [proInfo, setproInfo] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore != null ? myStore.getproinfo() : {});
    const [clientData, setClientData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    var clientDataX = myStore != null ? myStore.getclientdata() : '';
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setPostGridData(window.PostGridPluginData);
    }, [window.PostGridPluginData]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setClientData(myStore != null ? myStore.getclientdata() : '');
    }, [clientDataX]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var proinfo = myStore != null ? myStore.getproinfo() : {};
      console.log(proinfo);
      setproInfo(proinfo);
    }, [proInfo]);
    const BLOCKS_TEMPLATE = [['post-grid/post-title', {}], ['post-grid/read-more', {}]];
    const columnPresets = [{
      label: '1 Column',
      args: [{
        "val": 1,
        "unit": "fr"
      }],
      icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "23",
        height: "17",
        viewBox: "0 0 23 17",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 1.36364C0 0.61052 0.610521 0 1.36364 0H21.6364C22.3895 0 23 0.61052 23 1.36364V1.36364C23 2.11675 22.3895 2.72727 21.6364 2.72727H1.36364C0.61052 2.72727 0 2.11675 0 1.36364V1.36364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 15.6364C0 14.8833 0.610521 14.2727 1.36364 14.2727H21.6364C22.3895 14.2727 23 14.8833 23 15.6364V15.6364C23 16.3895 22.3895 17 21.6364 17H1.36364C0.61052 17 0 16.3895 0 15.6364V15.6364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M1.36363 -5.96064e-08C2.11674 -2.66867e-08 2.72726 0.610521 2.72726 1.36364L2.72726 15.6364C2.72726 16.3895 2.11674 17 1.36363 17C0.610513 17 -7.63055e-06 16.3895 -7.59763e-06 15.6364L-6.97375e-06 1.36364C-6.94083e-06 0.610521 0.610513 -9.25261e-08 1.36363 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M21.6364 -5.96064e-08C22.3895 -2.66867e-08 23 0.610521 23 1.36364L23 15.6364C23 16.3895 22.3895 17 21.6364 17V17C20.8832 17 20.2727 16.3895 20.2727 15.6364L20.2727 1.36364C20.2727 0.610521 20.8832 -9.25261e-08 21.6364 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }))
    }, {
      label: '2 Columns',
      args: [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "43",
        height: "17",
        viewBox: "0 0 43 17",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 1.36364C0 0.61052 0.610521 0 1.36364 0H41.2727C42.0258 0 42.6363 0.61052 42.6363 1.36364C42.6363 2.11675 42.0258 2.72727 41.2727 2.72727H1.36364C0.610521 2.72727 0 2.11675 0 1.36364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 15.6364C0 14.8833 0.610521 14.2727 1.36364 14.2727H41.2727C42.0258 14.2727 42.6363 14.8833 42.6363 15.6364C42.6363 16.3895 42.0258 17 41.2727 17H1.36364C0.610521 17 0 16.3895 0 15.6364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M1.36363 -5.96064e-08C2.11674 -2.66867e-08 2.72726 0.610521 2.72726 1.36364L2.72726 15.6364C2.72726 16.3895 2.11674 17 1.36363 17C0.610513 17 -7.63055e-06 16.3895 -7.59763e-06 15.6364L-6.97375e-06 1.36364C-6.94083e-06 0.610521 0.610513 -9.25261e-08 1.36363 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M21.6364 -5.96064e-08C22.3895 -2.66867e-08 23 0.610521 23 1.36364L23 15.6364C23 16.3895 22.3895 17 21.6364 17C20.8832 17 20.2727 16.3895 20.2727 15.6364L20.2727 1.36364C20.2727 0.610521 20.8832 -9.25261e-08 21.6364 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M41.6364 -5.96064e-08C42.3895 -2.66867e-08 43 0.610521 43 1.36364L43 15.6364C43 16.3895 42.3895 17 41.6364 17C40.8832 17 40.2727 16.3895 40.2727 15.6364L40.2727 1.36364C40.2727 0.610521 40.8832 -9.25261e-08 41.6364 -5.96064e-08Z",
        fill: "#fff"
      }))
    }, {
      label: '3 Columns',
      args: [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "43",
        height: "17",
        viewBox: "0 0 43 17",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 1.36364C0 0.61052 0.610521 0 1.36364 0H41.2727C42.0258 0 42.6363 0.61052 42.6363 1.36364C42.6363 2.11675 42.0258 2.72727 41.2727 2.72727H1.36364C0.610521 2.72727 0 2.11675 0 1.36364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 15.6364C0 14.8833 0.610521 14.2727 1.36364 14.2727H41.2727C42.0258 14.2727 42.6363 14.8833 42.6363 15.6364C42.6363 16.3895 42.0258 17 41.2727 17H1.36364C0.610521 17 0 16.3895 0 15.6364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M1.36363 -5.96064e-08C2.11674 -2.66867e-08 2.72726 0.610521 2.72726 1.36364L2.72726 15.6364C2.72726 16.3895 2.11674 17 1.36363 17C0.610513 17 -7.63055e-06 16.3895 -7.59763e-06 15.6364L-6.97375e-06 1.36364C-6.94083e-06 0.610521 0.610513 -9.25261e-08 1.36363 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M14.6364 -5.96064e-08C15.3895 -2.66867e-08 16 0.610521 16 1.36364L16 15.6364C16 16.3895 15.3895 17 14.6364 17C13.8832 17 13.2727 16.3895 13.2727 15.6364L13.2727 1.36364C13.2727 0.610521 13.8832 -9.25261e-08 14.6364 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M28.6364 -5.96064e-08C29.3895 -2.66867e-08 30 0.610521 30 1.36364L30 15.6364C30 16.3895 29.3895 17 28.6364 17C27.8832 17 27.2727 16.3895 27.2727 15.6364L27.2727 1.36364C27.2727 0.61052 27.8832 -9.25261e-08 28.6364 -5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M41.6364 -5.96064e-08C42.3895 -2.66867e-08 43 0.610521 43 1.36364L43 15.6364C43 16.3895 42.3895 17 41.6364 17C40.8832 17 40.2727 16.3895 40.2727 15.6364L40.2727 1.36364C40.2727 0.610521 40.8832 -9.25261e-08 41.6364 -5.96064e-08Z",
        fill: "#fff"
      }))
    }, {
      label: '4 Columns',
      args: [{
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }, {
        "val": 1,
        "unit": "fr"
      }],
      icon: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "43",
        height: "17",
        viewBox: "0 0 43 17",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 1.36364C0 0.61052 0.610521 0 1.36364 0H41.2727C42.0258 0 42.6363 0.61052 42.6363 1.36364V1.36364C42.6363 2.11675 42.0258 2.72727 41.2727 2.72727H1.36364C0.610521 2.72727 0 2.11675 0 1.36364V1.36364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M0 15.6364C0 14.8833 0.610521 14.2727 1.36364 14.2727H41.2727C42.0258 14.2727 42.6363 14.8833 42.6363 15.6364V15.6364C42.6363 16.3895 42.0258 17 41.2727 17H1.36364C0.610521 17 0 16.3895 0 15.6364V15.6364Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M1.36366 -5.96064e-08C2.11677 -2.66867e-08 2.72729 0.610521 2.72729 1.36364L2.72729 15.6364C2.72729 16.3895 2.11677 17 1.36366 17V17C0.610543 17 2.2887e-05 16.3895 2.292e-05 15.6364L2.35438e-05 1.36364C2.35768e-05 0.610521 0.610544 -9.25261e-08 1.36366 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M11.3636 -5.96064e-08C12.1167 -2.66867e-08 12.7273 0.610521 12.7273 1.36364L12.7273 15.6364C12.7273 16.3895 12.1167 17 11.3636 17V17C10.6105 17 9.99999 16.3895 9.99999 15.6364L9.99999 1.36364C9.99999 0.610521 10.6105 -9.25261e-08 11.3636 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M21.3636 -5.96064e-08C22.1167 -2.66867e-08 22.7273 0.610521 22.7273 1.36364L22.7273 15.6364C22.7273 16.3895 22.1167 17 21.3636 17V17C20.6105 17 20 16.3895 20 15.6364L20 1.36364C20 0.61052 20.6105 -9.25261e-08 21.3636 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M31.3636 -5.96064e-08C32.1167 -2.66867e-08 32.7273 0.610521 32.7273 1.36364L32.7273 15.6364C32.7273 16.3895 32.1167 17 31.3636 17V17C30.6105 17 30 16.3895 30 15.6364L30 1.36364C30 0.610521 30.6105 -9.25261e-08 31.3636 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M41.3636 -5.96064e-08C42.1167 -2.66867e-08 42.7273 0.610521 42.7273 1.36364L42.7273 15.6364C42.7273 16.3895 42.1167 17 41.3636 17V17C40.6105 17 40 16.3895 40 15.6364L40 1.36364C40 0.610521 40.6105 -9.25261e-08 41.3636 -5.96064e-08V-5.96064e-08Z",
        fill: "#fff"
      }))
    }];
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
      blockCssY.items[loopItemSelector] = blockCssY.items[loopItemSelector] != undefined ? blockCssY.items[loopItemSelector] : {};
      blockCssY.items[paginationWrapSelector] = blockCssY.items[paginationWrapSelector] != undefined ? blockCssY.items[paginationWrapSelector] : {};
      var wordBreak = blockCssY.items[loopItemSelector]['word-break'] != undefined ? blockCssY.items[loopItemSelector]['word-break'] : {};
      wordBreak[breakPointX] = 'break-word';
      blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
        'word-break': wordBreak
      };
      blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
        'text-align': {
          "Desktop": "center"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'display': {
          "Desktop": "inline-block"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'cursor': {
          "Desktop": "pointer"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'color': {
          "Desktop": "#18978F"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'background-color': {
          "Desktop": "#9DD6DF"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'margin-left': {
          "Desktop": "5px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'margin-right': {
          "Desktop": "5px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'padding-top': {
          "Desktop": "10px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'padding-right': {
          "Desktop": "10px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'padding-bottom': {
          "Desktop": "10px"
        }
      };
      blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
        'padding-left': {
          "Desktop": "10px"
        }
      };
      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });

      if (pagination.options.type.length == 0) {
        var paginationOptons = { ...pagination.options,
          type: 'normal'
        };
        setAttributes({
          pagination: { ...pagination,
            options: paginationOptons
          }
        });
      }
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      blockCssY.items[loopItemsWrapSelector] = blockCssY.items[loopItemsWrapSelector] != undefined ? blockCssY.items[loopItemsWrapSelector] : {};
      var display = blockCssY.items[loopItemsWrapSelector]['display'] != undefined ? blockCssY.items[loopItemsWrapSelector]['display'] : {};
      display[breakPointX] = 'grid';
      blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
        'display': display
      };

      if (grid.styles.gridTemplateColumns[breakPointX] != undefined) {
        var gridTemplateColumns = blockCssY.items[loopItemsWrapSelector]['grid-template-columns'] != undefined ? blockCssY.items[loopItemsWrapSelector]['grid-template-columns'] : {};
        gridTemplateColumns[breakPointX] = grid.styles.gridTemplateColumns[breakPointX].map(item => {
          return item.val + item.unit + ' ';
        }).join(' ');
        blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
          'grid-template-columns': gridTemplateColumns
        };
      }

      if (grid.styles.gridTemplateRows[breakPointX] != undefined) {
        var gridTemplateRows = blockCssY.items[loopItemsWrapSelector]['grid-template-rows'] != undefined ? blockCssY.items[loopItemsWrapSelector]['grid-template-rows'] : {};
        gridTemplateRows[breakPointX] = grid.styles.gridTemplateRows[breakPointX].map(item => {
          return item.val + item.unit + ' ';
        }).join(' ');
        blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
          'grid-template-rows': gridTemplateRows
        };
      }

      if (grid.styles.colGap[breakPointX] != undefined) {
        var colGap = blockCssY.items[loopItemsWrapSelector]['column-gap'] != undefined ? blockCssY.items[loopItemsWrapSelector]['column-gap'] : {};
        colGap[breakPointX] = grid.styles.colGap[breakPointX].val + grid.styles.colGap[breakPointX].unit;
        blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
          'column-gap': colGap
        };
      }

      if (grid.styles.rowGap[breakPointX] != undefined) {
        var rowGap = blockCssY.items[loopItemsWrapSelector]['row-gap'] != undefined ? blockCssY.items[loopItemsWrapSelector]['row-gap'] : {};
        rowGap[breakPointX] = grid.styles.rowGap[breakPointX].val + grid.styles.rowGap[breakPointX].unit;
        blockCssY.items[loopItemsWrapSelector] = { ...blockCssY.items[loopItemsWrapSelector],
          'row-gap': rowGap
        };
      }

      var nthItemsResponsive = [];
      var itemX = { ...blockCssY.items
      };
      Object.entries(grid.options.itemCss).map(args => {
        /****breakPoint****/
        var breakPoint = args[0];
        var nthItems = args[1];
        nthItems.length > 0 && nthItems.map((x, i) => {
          /****nthItems****/
          Object.entries(x).map(attr => {
            var attrId = attr[0];
            var attrVal = attr[1];

            if (nthItemsResponsive[i] != undefined) {//nthItemsResponsive[i] = [];
            } else {
              nthItemsResponsive[i] = [];
            }

            if (nthItemsResponsive[i][attrId] != undefined) {//nthItemsResponsive[i][attrId] = [];
            } else {
              nthItemsResponsive[i][attrId] = [];
            }

            if (nthItemsResponsive[i][attrId][breakPoint] != undefined) {
              nthItemsResponsive[i][attrId][breakPoint] = attrVal;
            } else {
              nthItemsResponsive[i][attrId][breakPoint] = attrVal;
            }
          });
        });
      });

      for (var i = 0; i < 10; i++) {
        var selector = `${blockClass} .item:nth-child(${i})`;

        if (blockCssY.items[selector] != undefined) {
          delete blockCssY.items[selector];
        }
      }

      var imtasdas = {};
      nthItemsResponsive.length > 0 && nthItemsResponsive.map((nth, i) => {
        var selector = `${blockClass} .item:nth-child(${i + 1})`;
        Object.entries(nth).map(attr => {
          var attrId = attr[0];
          var attrVal = attr[1];

          if (imtasdas[selector] != undefined) {} else {
            imtasdas[selector] = {};
          }

          if (imtasdas[selector][attrId] != undefined) {} else {
            imtasdas[selector][attrId] = {};
          }

          imtasdas[selector][attrId] = attrVal;
        });
      });
      var asdsd = { ...blockCssY.items,
        ...imtasdas
      };
      setAttributes({
        blockCssY: {
          items: asdsd
        }
      });
    }, [grid]);
    var [layoutImporting, setlayoutImporting] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Using the hook.

    function importLayout(postData) {
      setTimeout(() => {
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_5___default()({
          path: '/post-grid/v2/import_post_grid_template',
          method: 'POST',
          data: {
            postData: postData
          }
        }).then(res => {
          setlayoutImporting(false);
        });
      }, 2000);
    } // const paginationTypes = {
    //   none: { label: 'None', value: 'none', isPro: false },
    //   normal: { label: 'Normal Pagination', value: 'normal', isPro: false },
    //   ajax: { label: 'Ajax Pagination', value: 'ajax', isPro: true },
    //   next_previous: { label: 'Next-Previous', value: 'next_previous', isPro: true },
    //   loadmore: { label: 'Load More', value: 'loadmore', isPro: true },
    //   infinite: { label: 'Infinite Load', value: 'infinite', isPro: true },
    // };
    // [
    //       { label: 'None', value: 'none', isPro: false },
    //       { label: 'Normal Pagination', value: 'normal', isPro: false },
    //       { label: 'Ajax Pagination', value: 'ajax', isPro: true },
    //       { label: 'Next-Previous', value: 'next_previous', isPro: true },
    //       { label: 'Load More', value: 'loadmore', isPro: true },
    //       { label: 'Infinite Load', value: 'infinite', isPro: true },
    //     ]
    // var ItemNthCssadasd2 = grid.options.itemCss.map((x, i) => {
    //   return (
    //     `<style>.item:nth-child(${i + 1}){grid-column-start: ${x['grid-column-start']};grid-column-end: ${x['grid-column-end']};grid-row-start: ${x['grid-row-start']};grid-row-end: ${x['grid-row-end']};}</style>`
    //   )
    // });


    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function addQueryPreset(option, index) {
      queryArgs.items = option.value.items;
      setAttributes({
        queryArgs: {
          items: queryArgs.items
        }
      });
      fetchPosts();
    }

    var postTypes = [];
    const postTypesData = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_8__.useSelect)(select => select(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_9__.store).getPostTypes({
      per_page: -1
    }), []);
    postTypesData !== null && postTypesData.map(x => {
      postTypes.push({
        value: x.slug,
        label: x.name
      });
    });
    const TEMPLATE = [['core/post-title'], ['core/post-date'], ['core/post-excerpt']];
    const TEMPLATE1 = [['core/post-date'], ['core/post-title'], ['core/post-excerpt']];
    var blocks = select.getBlocks(clientId);
    var defaultBloicks = [];
    var [blocksX, setBlocksX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(blocks); // Using the hook.

    var [TEMPLATEX, setTEMPLATEX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(TEMPLATE); // Using the hook.

    function PostTemplateInnerBlocks(_ref) {
      let {
        attsx
      } = _ref;
      const innerBlocksProps = (0,_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__.useInnerBlocksProps)({
        className: 'item'
      }, {
        template: attsx
      });
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", innerBlocksProps);
    }

    function PostTemplateBlockPreview(_ref2) {
      let {
        blocks,
        blockContextId,
        isHidden,
        setActiveBlockContextId
      } = _ref2;
      const blockPreviewProps = (0,_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__.__experimentalUseBlockPreview)({
        blocks,
        props: {
          className: 'item'
        }
      });

      const handleOnClick = () => {
        setActiveBlockContextId(blockContextId);
      };

      const style = {
        display: isHidden ? 'none' : undefined
      };
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, blockPreviewProps, {
        tabIndex: 0 // eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role
        ,
        role: "button",
        onClick: handleOnClick,
        onKeyPress: handleOnClick,
        style: style
      }));
    }

    const MemoizedPostTemplateBlockPreview = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.memo)(PostTemplateBlockPreview);
    const [activeBlockContextId, setActiveBlockContextId] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)();

    function PostLoopItem() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, " ");
    }

    function generateDateQueryArgs(_args) {}

    function onChangeBreakPoint(x, _index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    function containerPaddingControl(nextValues) {
      var responsive = container.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...container.styles,
        padding: responsive
      };
      setAttributes({
        container: { ...container,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[containerSelector] = blockCssY.items[containerSelector] != undefined ? blockCssY.items[containerSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[containerSelector]['padding-top'] != undefined ? blockCssY.items[containerSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[containerSelector]['padding-right'] != undefined ? blockCssY.items[containerSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[containerSelector]['padding-bottom'] != undefined ? blockCssY.items[containerSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[containerSelector]['padding-left'] != undefined ? blockCssY.items[containerSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function containerMarginControl(nextValues) {
      var responsive = container.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...container.styles,
        margin: responsive
      };
      setAttributes({
        container: { ...container,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[containerSelector] = blockCssY.items[containerSelector] != undefined ? blockCssY.items[containerSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[containerSelector]['margin-top'] != undefined ? blockCssY.items[containerSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[containerSelector]['margin-right'] !== undefined ? blockCssY.items[containerSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[containerSelector]['margin-bottom'] !== undefined ? blockCssY.items[containerSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[containerSelector]['margin-left'] !== undefined ? blockCssY.items[containerSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[containerSelector] = { ...blockCssY.items[containerSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function paginationPaddingControl(nextValues) {
      var responsive = pagination.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...pagination.styles,
        padding: responsive
      };
      setAttributes({
        pagination: { ...pagination,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[paginationWrapSelector] = blockCssY.items[paginationWrapSelector] != undefined ? blockCssY.items[paginationWrapSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[paginationWrapSelector]['padding-top'] != undefined ? blockCssY.items[paginationWrapSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'padding-top': paddingTop
        }; //itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[paginationWrapSelector]['padding-right'] != undefined ? blockCssY.items[paginationWrapSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'padding-right': paddingRight
        }; //itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[paginationWrapSelector]['padding-bottom'] != undefined ? blockCssY.items[paginationWrapSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[paginationWrapSelector]['padding-left'] != undefined ? blockCssY.items[paginationWrapSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'padding-left': paddingLeft
        }; //itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function paginationItemPaddingControl(nextValues) {
      var responsive = paginationItem.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...paginationItem.styles,
        padding: responsive
      };
      setAttributes({
        paginationItem: { ...paginationItem,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[paginationItemSelector] = blockCssY.items[paginationItemSelector] != undefined ? blockCssY.items[paginationItemSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[paginationItemSelector]['padding-top'] != undefined ? blockCssY.items[paginationItemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'padding-top': paddingTop
        }; //itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[paginationItemSelector]['padding-right'] != undefined ? blockCssY.items[paginationItemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'padding-right': paddingRight
        }; //itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[paginationItemSelector]['padding-bottom'] != undefined ? blockCssY.items[paginationItemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[paginationItemSelector]['padding-left'] != undefined ? blockCssY.items[paginationItemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'padding-left': paddingLeft
        }; //itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function onChangeItemBorder(nextValues) {
      var width = nextValues.width == undefined ? '0px' : nextValues.width;
      var style = nextValues.style == undefined ? 'solid' : nextValues.style;
      var color = nextValues.color == undefined ? '#ddd' : nextValues.color;
      var responsive = itemWrap.styles.border;
      responsive[breakPointX] = width + ' ' + style + ' ' + color;
      var styles = { ...itemWrap.styles,
        border: responsive
      };
      setAttributes({
        itemWrap: { ...itemWrap,
          styles: styles
        }
      });
    }

    function itemwrapPaddingControl(nextValues) {
      var responsive = itemWrap.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...itemWrap.styles,
        padding: responsive
      };
      setAttributes({
        itemWrap: { ...itemWrap,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[loopItemSelector] = blockCssY.items[loopItemSelector] != undefined ? blockCssY.items[loopItemSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[loopItemSelector]['padding-top'] != undefined ? blockCssY.items[loopItemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[loopItemSelector]['padding-right'] != undefined ? blockCssY.items[loopItemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[loopItemSelector]['padding-bottom'] != undefined ? blockCssY.items[loopItemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[loopItemSelector]['padding-left'] != undefined ? blockCssY.items[loopItemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function paginationMarginControl(nextValues) {
      var responsive = pagination.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...pagination.styles,
        margin: responsive
      };
      setAttributes({
        pagination: { ...pagination,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[paginationWrapSelector] = blockCssY.items[paginationWrapSelector] != undefined ? blockCssY.items[paginationWrapSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[paginationWrapSelector]['margin-top'] != undefined ? blockCssY.items[paginationWrapSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'margin-top': marginTop
        }; //itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[paginationWrapSelector]['margin-right'] !== undefined ? blockCssY.items[paginationWrapSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'margin-right': marginRight
        }; //itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[paginationWrapSelector]['margin-bottom'] !== undefined ? blockCssY.items[paginationWrapSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'margin-bottom': marginBottom
        }; //itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[paginationWrapSelector]['margin-left'] !== undefined ? blockCssY.items[paginationWrapSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'margin-left': marginLeft
        }; //itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function paginationItemMarginControl(nextValues) {
      var responsive = paginationItem.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...paginationItem.styles,
        margin: responsive
      };
      setAttributes({
        paginationItem: { ...paginationItem,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[paginationItemSelector] = blockCssY.items[paginationItemSelector] != undefined ? blockCssY.items[paginationItemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[paginationItemSelector]['margin-top'] != undefined ? blockCssY.items[paginationItemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[paginationItemSelector]['margin-right'] !== undefined ? blockCssY.items[paginationItemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[paginationItemSelector]['margin-bottom'] !== undefined ? blockCssY.items[paginationItemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[paginationItemSelector]['margin-left'] !== undefined ? blockCssY.items[paginationItemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function itemwrapMarginControl(nextValues) {
      var responsive = itemWrap.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...itemWrap.styles,
        margin: responsive
      };
      setAttributes({
        itemWrap: { ...itemWrap,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      blockCssY.items[loopItemSelector] = blockCssY.items[loopItemSelector] != undefined ? blockCssY.items[loopItemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[loopItemSelector]['margin-top'] != undefined ? blockCssY.items[loopItemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[loopItemSelector]['margin-right'] !== undefined ? blockCssY.items[loopItemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[loopItemSelector]['margin-bottom'] !== undefined ? blockCssY.items[loopItemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[loopItemSelector]['margin-left'] !== undefined ? blockCssY.items[loopItemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', "");
        setTimeout(() => {
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 100);
      }
    }

    const [posts, setPosts] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [postsQuery, setPostsQuery] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Using the hook.

    const [paginationItems, setPaginationItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    function fetchPosts() {
      setPostsQuery(true);
      setIsBusy(true);
      var arg = queryArgs.items.map(item => {
        return {
          id: item.id,
          val: item.val
        };
      });
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_5___default()({
        path: '/post-grid/v2/get_posts',
        method: 'POST',
        data: {
          queryArgs: arg,
          rawData: layout.rawData
        }
      }).then(res => {
        setPostsQuery(false);
        setPosts(res.posts);
        setPaginationItems(res.pagination);
        setIsBusy(false);
      });
    }

    function generateLayout(x, _i) {
      var savedBlocks = layout.data;
      var content = "<!-- wp:paragraph --><p>paragraph one</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>then two</p><!-- /wp:paragraph -->"; // Parse the serialized content into valid blocks using parse from @wordpress/block-serialization-default-parser

      var blocks = savedBlocks.length > 0 ? savedBlocks : parse(content);
      var sss = blocks.map((block, i) => {
        if (block.blockName !== null) {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, block.innerBlocks.length > 0 ? recursInnerBlocksHtml(block.innerBlocks, i) : block.innerHTML);
        }
      });
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "bg-gray-400 p-3 "
      }, x.post_title, sss);
    }

    function recursInnerBlocksHtml(blocks) {
      let _index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var xx = blocks.map((block, i) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, "2nd Block", block.innerBlocks.length > 0 ? block.innerHTML + recursInnerBlocksHtml(block.innerBlocks, i) : block.innerHTML);
      });
      return xx;
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      fetchPosts();
    }, [layout]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      fetchPosts();
    }, [queryArgs]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      fetchLayouts();
      fetchLayoutData();
    }, [container]);

    function onChangePaginationTypo(typoX) {
      setAttributes({
        paginationItem: { ...paginationItem,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[paginationItemSelector]['font-size'] != undefined ? blockCssY.items[paginationItemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[paginationItemSelector]['line-height'] != undefined ? blockCssY.items[paginationItemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[paginationItemSelector]['letter-spacing'] != undefined ? blockCssY.items[paginationItemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeItemWrapTypo(typoX) {
      setAttributes({
        itemWrap: { ...itemWrap,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[loopItemSelector]['font-size'] != undefined ? blockCssY.items[loopItemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[loopItemSelector]['line-height'] != undefined ? blockCssY.items[loopItemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[loopItemSelector]['letter-spacing'] != undefined ? blockCssY.items[loopItemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'text-transform': typoX.textTransform
        };
      }

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function flatObject(block, flatObj, flatObjCss) {
      flatObj.push(block);
      var items = block.attrs.blockCssY != undefined ? block.attrs.blockCssY.items : [];

      if (Object.entries(items).length > 0) {
        Object.entries(items).map(data => {
          var handle = data[0];
          var css = data[1]; //flatObjCss[handle] = css;
        });
      }

      if (block.innerBlocks != undefined) {
        block.innerBlocks.map(block => {
          flatObject(block, flatObj);
        });
      }

      return flatObj;
    }

    function selectLayout(id, postContent) {
      var srcServer = layoutData.source;

      if (srcServer == 'library') {
        var blocks = parse(postContent);
        setAttributes({
          layout: {
            id: null,
            srcServer: srcServer,
            data: blocks,
            rawData: postContent
          }
        });
        var allStyle = {};
        blocks.map((block, i) => {
          var items = block.attrs.blockCssY != undefined ? block.attrs.blockCssY.items : [];

          if (Object.entries(items).length > 0) {
            Object.entries(items).map(data => {
              var handle = data[0];
              var css = data[1];
              allStyle[handle] = css;
            });
          }
        });
        var xxx = { ...blockCssY.items,
          ...allStyle
        };
        setAttributes({
          blockCssY: {
            items: xxx
          }
        });
      } else {
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_5___default()({
          path: '/post-grid/v2/get_post_data',
          method: 'POST',
          data: {
            postId: id
          }
        }).then(res => {
          var postContent = res.post_content.replace(/(^[ \t]*\n)/gm, "");
          var blocks = parse(postContent);
          setAttributes({
            layout: {
              id: id,
              srcServer: srcServer,
              data: blocks,
              rawData: postContent
            }
          });
          var allStyle = {};
          var flatObj = [];
          var flatObjCss = [];
          var flatData = flatObject(blocks[0], flatObj, flatObjCss);
          flatData.map((block, i) => {
            var items = block.attrs.blockCssY != undefined ? block.attrs.blockCssY.items : [];

            if (Object.entries(items).length > 0) {
              Object.entries(items).map(data => {
                var handle = data[0];
                var css = data[1];
                allStyle[handle] = css;
              });
            }
          });
          var xxx = { ...blockCssY.items,
            ...allStyle
          };
          setAttributes({
            blockCssY: {
              items: xxx
            }
          });
        });
      } //console.log(wp.data.select('core/block-editor').getBlocks());
      //wp.data.dispatch('core/block-editor').insertBlocks(wp.blocks.parse(post_content));
      //wp.data.dispatch('core/notices').createNotice('success', 'Here is our notice!');
      //var content = "<!-- wp:paragraph --><p>paragraph one</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>then two</p><!-- /wp:paragraph -->";
      //Parse the serialized content into valid blocks using parse from @wordpress/block-serialization-default-parser
      // var gutblock = wp.blocks.rawHandler({
      //   HTML: post_content,
      // });
      //setBlocksX(gutblock)
      // setAttributes({ layout: { id: id, data: blocks, rawData: post_content } })

    }

    const [queryLayouts, setQueryLayouts] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
      keyword: '',
      page: 1,
      category: ''
    });
    var [layoutList, setLayoutList] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
      items: []
    });
    var [layoutData, setLayoutData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
      source: 'library'
    });
    var [layoutLoading, setLayoutLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    var [layoutCats, setLayoutCats] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var keywordLength = queryLayouts.keyword.length;

      if (keywordLength != 0) {
        if (keywordLength >= 4) {
          fetchLayouts();
        } else {}
      } else {
        fetchLayouts();
      }
    }, [layoutData]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var keywordLength = queryLayouts.keyword.length;

      if (keywordLength != 0) {
        if (keywordLength >= 4) {
          fetchLayouts();
        } else {}
      } else {
        fetchLayouts();
      }
    }, [queryLayouts]);

    function fetchLayouts() {
      setLayoutLoading(true);

      if (layoutData.source == 'saved') {
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_5___default()({
          path: '/post-grid/v2/get_posts_layout',
          method: 'POST',
          data: {
            category: queryLayouts.category,
            page: queryLayouts.page,
            keyword: queryLayouts.keyword
          }
        }).then(res => {
          setLayoutList({
            items: res.posts
          });
          setLayoutCats(res.terms);
          setLayoutLoading(false);
        });
      } else {
        fetch("https://getpostgrid.com/wp-json/postlayout/v2/get_post_layouts?category=" + queryLayouts.category + "&page=" + queryLayouts.page + "&keyword=" + queryLayouts.keyword, {
          method: "GET",
          headers: {
            "Content-Type": "application/json;charset=utf-8"
          }
        }).then(response => {
          if (response.ok && response.status < 400) {
            response.json().then(data => {
              setLayoutList({
                items: data.posts
              });
              setLayoutCats(data.terms);
              setLayoutLoading(false);
            });
          }
        }).catch(_error => {//this.saveAsStatus = 'error';
          // handle the error
        });
      }
    }

    function fetchLayoutData() {
      setQueryLayouts({
        keyword: queryLayouts.keyword,
        page: queryLayouts.page,
        category: queryLayouts.category
      });
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_5___default()({
        path: '/post-grid/v2/get_posts_layout',
        method: 'POST',
        data: {
          category: queryLayouts.category,
          source: queryLayouts.source,
          page: queryLayouts.page,
          keyword: queryLayouts.keyword
        }
      }).then(_res => {
        setLayoutData({
          source: layoutData.source
        });
        setQueryLayouts({
          keyword: queryLayouts.keyword,
          page: queryLayouts.page,
          category: queryLayouts.category
        });
      });
    }

    function generateQueryFieldAuthorIn(_xx) {
      var xxts = [12, 24, 32];
      var xxt = [1, 2, 3].concat(xxts);
      return xxt.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, x);
      });
    }

    function updateQueryPram(newVal, index) {
      var itemData = queryArgs.items[index];
      itemData.val = newVal;
      queryArgs.items[index] = itemData;
      setAttributes({
        queryArgs: {
          items: queryArgs.items
        }
      });
      fetchPosts(); // if (itemData.id == 's' || itemData.id == 'order'  ) {
      //     itemData.val = newVal;
      //     queryArgs.items[index] = itemData;
      //     setAttributes({ queryArgs: { items: queryArgs.items } });
      // }
      // if (itemData.id == 'postType' || itemData.id == 'orderby' || itemData.id == 'postStatus') {
      //     itemData.val = newVal;
      //     queryArgs.items[index] = itemData;
      //     setAttributes({ queryArgs: { items: queryArgs.items } });
      // }
      //queryArgs.items.splice(i, 1);
    }

    function generateQueryArgOptions(item, index) {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: " "
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
        title: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RemoveQueryPram, {
          title: item.label,
          index: index
        }),
        initialOpen: false
      }, item.id == 'postType' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'postType' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_input_select__WEBPACK_IMPORTED_MODULE_25__["default"], {
        val: item.val,
        options: postTypes,
        multiple: true,
        onChange: newVal => {
          updateQueryPram(newVal, index);
        }
      })), item.id == 'postStatus' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'postStatus' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_input_select__WEBPACK_IMPORTED_MODULE_25__["default"], {
        val: item.val,
        options: [{
          label: 'Publish',
          value: 'publish'
        }, {
          label: 'Pending',
          value: 'pending'
        }, {
          label: 'Draft',
          value: 'draft'
        }, {
          label: 'Auto draft',
          value: 'auto-draft'
        }, {
          label: 'Future',
          value: 'future'
        }, {
          label: 'Private',
          value: 'private'
        }, {
          label: 'Inherit',
          value: 'inherit'
        }, {
          label: 'Trash',
          value: 'trash'
        }, {
          label: 'Any',
          value: 'any'
        }],
        multiple: true,
        onChange: newVal => {
          updateQueryPram(newVal, index);
        }
      })), item.id == 'order' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'order' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val,
        options: [{
          label: 'Ascending',
          value: 'ASC'
        }, {
          label: 'Descending',
          value: 'DESC'
        }],
        onChange: newVal => updateQueryPram(newVal, index)
      })), item.id == 'orderby' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'orderby' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_input_select__WEBPACK_IMPORTED_MODULE_25__["default"], {
        val: item.val,
        options: [{
          label: 'None',
          value: 'none'
        }, {
          label: 'ID',
          value: 'ID'
        }, {
          label: 'Author',
          value: 'author'
        }, {
          label: 'Title',
          value: 'title'
        }, {
          label: 'Name',
          value: 'name'
        }, {
          label: 'Type',
          value: 'type'
        }, {
          label: 'Date',
          value: 'date'
        }, {
          label: 'Modified',
          value: 'modified'
        }, {
          label: 'Parent',
          value: 'parent'
        }, {
          label: 'Random',
          value: 'rand'
        }, {
          label: 'Comment Count',
          value: 'comment_count'
        }, {
          label: 'Relevance',
          value: 'relevance'
        }, {
          label: 'Menu Order',
          value: 'menu_order'
        }, {
          label: 'Meta Value(String)',
          value: 'meta_value'
        }, {
          label: 'Meta Value(Number)',
          value: 'meta_value_num'
        }, {
          label: 'post__in',
          value: 'post__in'
        }, {
          label: 'post_name__in',
          value: 'post_name__in'
        }, {
          label: 'post_parent__in',
          value: 'post_parent__in'
        }],
        multiple: true,
        onChange: newVal => {
          updateQueryPram(newVal, index);
        }
      })), item.id == 'taxQueryRelation' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'taxQueryRelation' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val,
        options: [{
          label: 'OR',
          value: 'OR'
        }, {
          label: 'AND',
          value: 'AND'
        }],
        onChange: newVal => updateQueryPram(newVal, index)
      })), item.id == 'metaQuery' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: proInfo.status != 'active' ? '' : ''
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer inline-block mb-2 px-3 py-1 text-white bg-blue-600 text-sm",
        onClick: _ev => {
          var itemData = queryArgs.items[index];
          var xx = itemData.val.concat({
            fields: [{
              key: '',
              value: '',
              type: '',
              compare: ''
            }],
            relation: 'OR'
          });
          queryArgs.items[index].val = xx;
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      }, "Add"), item.val.map((x, j) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
          title: "Meta Field",
          initialOpen: false
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "cursor-pointer inline-block mb-2 px-3 py-1 text-white bg-red-600 text-sm",
          onClick: _ev => {
            var itemData = queryArgs.items[index];
            var xx = itemData.val.splice(j, 1);
            queryArgs.items[index].val = itemData.val;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Remove"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, "Relation"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
          style: {
            margin: 0
          },
          label: "",
          value: x.relation,
          options: [{
            label: 'OR',
            value: 'OR'
          }, {
            label: 'AND',
            value: 'AND'
          }],
          onChange: newVal => {
            var itemData = queryArgs.items[index]; //itemData.val.relation = newVal;

            itemData.val[j].relation = newVal; //var term = itemData.val[j].fields[k]
            //term.taxonomy = newVal;

            queryArgs.items[index].val = itemData.val;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), x.fields.map((y, k) => {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "border-b border-solid border-gray-300 py-3"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "cursor-pointer block text-right mb-2 px-3 py-1 text-white bg-red-600 text-sm",
            onClick: _ev => {
              var itemData = queryArgs.items[index];
              var fields = itemData.val[j].fields;
              var xx = itemData.val[j].fields.splice(k, 1);
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }, "Remove"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
            label: "Custom field key",
            value: y.key,
            placeholder: "meta_key",
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].fields[k];
              term.key = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
            label: "Meta Value ",
            value: y.value,
            placeholder: "25",
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].fields[k];
              term.value = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
            style: {
              margin: 0
            },
            label: "Custom field type",
            value: y.type,
            options: [{
              label: 'NUMERIC',
              value: 'NUMERIC'
            }, {
              label: 'BINARY',
              value: 'BINARY'
            }, {
              label: 'CHAR',
              value: 'CHAR'
            }, {
              label: 'DATE',
              value: 'DATE'
            }, {
              label: 'DATETIME',
              value: 'DATETIME'
            }, {
              label: 'DECIMAL',
              value: 'DECIMAL'
            }, {
              label: 'SIGNED',
              value: 'SIGNED'
            }, {
              label: 'TIME',
              value: 'TIME'
            }, {
              label: 'UNSIGNED',
              value: 'UNSIGNED'
            }],
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].fields[k];
              term.type = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
            style: {
              margin: 0
            },
            label: "compare ",
            value: y.compare,
            options: [{
              label: '=',
              value: '='
            }, {
              label: '!=',
              value: '!='
            }, {
              label: '>',
              value: '>'
            }, {
              label: '>=',
              value: '>='
            }, {
              label: '<',
              value: '<'
            }, {
              label: '<=',
              value: '<='
            }, {
              label: 'LIKE',
              value: 'LIKE'
            }, {
              label: 'NOT LIKE',
              value: 'NOT LIKE'
            }, {
              label: 'IN',
              value: 'IN'
            }, {
              label: 'NOT IN',
              value: 'NOT IN'
            }, {
              label: 'BETWEEN',
              value: 'BETWEEN'
            }, {
              label: 'NOT BETWEEN',
              value: 'NOT BETWEEN'
            }, {
              label: 'EXISTS',
              value: 'EXISTS'
            }, {
              label: 'NOT EXISTS',
              value: 'NOT EXISTS'
            }],
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].fields[k];
              term.compare = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          })));
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "cursor-pointer text-center px-3 py-1 text-white bg-blue-600 text-sm",
          onClick: _ev => {
            var itemData = queryArgs.items[index];
            var xx = itemData.val[j].fields.concat({
              key: '',
              value: '',
              type: '',
              compare: ''
            });
            queryArgs.items[index].val[j].fields = xx;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Add")));
      }))), item.id == 'dateQuery' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
        className: "my-3"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Add Arguments"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
        options: [{
          "value": "",
          "label": "Select..."
        }, {
          "value": "year",
          "label": "Year"
        }, {
          "value": "month",
          "label": "Month"
        }, {
          "value": "week",
          "label": "Week"
        }, {
          "value": "day",
          "label": "Day"
        }, {
          "value": "hour",
          "label": "Hour"
        }, {
          "value": "minute",
          "label": "Minute"
        }, {
          "value": "second",
          "label": "Second"
        }, {
          "value": "after",
          "label": "After"
        }, {
          "value": "before",
          "label": "Before"
        }, {
          "value": "inclusive",
          "label": "Inclusive"
        }, {
          "value": "compare",
          "label": "Compare"
        }, {
          "value": "column",
          "label": "Column"
        }, {
          "value": "relation",
          "label": "Relation"
        }],
        onChange: newVal => {
          var itemData = queryArgs.items[index];

          if (newVal == 'year') {
            var xx = itemData.val.concat({
              id: 'year',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'month') {
            var xx = itemData.val.concat({
              id: 'month',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'week') {
            var xx = itemData.val.concat({
              id: 'week',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'day') {
            var xx = itemData.val.concat({
              id: 'day',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'hour') {
            var xx = itemData.val.concat({
              id: 'hour',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'minute') {
            var xx = itemData.val.concat({
              id: 'minute',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'second') {
            var xx = itemData.val.concat({
              id: 'second',
              value: '',
              compare: ''
            });
          }

          if (newVal == 'inclusive') {
            var xx = itemData.val.concat({
              id: 'inclusive',
              value: true
            });
          }

          if (newVal == 'compare') {
            var xx = itemData.val.concat({
              id: 'compare',
              value: ''
            });
          }

          if (newVal == 'column') {
            var xx = itemData.val.concat({
              id: 'column',
              value: ''
            });
          }

          if (newVal == 'relation') {
            var xx = itemData.val.concat({
              id: 'relation',
              value: ''
            });
          }

          if (newVal == 'before') {
            var xx = itemData.val.concat({
              id: 'before',
              value: '',
              year: '',
              month: '',
              day: ''
            });
          }

          if (newVal == 'after') {
            var xx = itemData.val.concat({
              id: 'after',
              value: '',
              year: '',
              month: '',
              day: ''
            });
          }

          queryArgs.items[index].val = xx;
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      })), item.val.map((x, j) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
          title: x.id,
          initialOpen: false
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "cursor-pointer px-3 py-1 text-white bg-red-600 text-sm my-2 inline-block",
          onClick: _ev => {
            queryArgs.items[index].val.splice(j, 1);
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Delete"), (x.id == 'after' || x.id == 'before') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Year"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
          placeholder: "",
          onChange: newVal => {
            //clearTimeout(debounce);
            // debounce = setTimeout(() => {
            queryArgs.items[index].val[j].year = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            }); //}, 1000);
          }
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Month"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
          placeholder: "",
          onChange: newVal => {
            // clearTimeout(debounce);
            //debounce = setTimeout(() => {
            queryArgs.items[index].val[j].month = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            }); //}, 1000);
          }
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Day"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
          placeholder: "",
          onChange: newVal => {
            clearTimeout(debounce);
            debounce = setTimeout(() => {
              queryArgs.items[index].val[j].day = newVal;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }, 1000);
          }
        }))), x.id == 'inclusive' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
          style: {
            margin: 0
          },
          options: [{
            label: 'True',
            value: true
          }, {
            label: 'False',
            value: false
          }],
          onChange: newVal => {
            queryArgs.items[index].val[j].value = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), x.id == 'compare' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
          style: {
            margin: 0
          },
          options: [{
            label: '=',
            value: '='
          }, {
            label: '!=',
            value: '!='
          }, {
            label: '>',
            value: '>'
          }, {
            label: '>=',
            value: '>='
          }, {
            label: '<',
            value: '<'
          }, {
            label: '<=',
            value: '<='
          }, {
            label: 'IN',
            value: 'IN'
          }, {
            label: 'NOT IN',
            value: 'NOT IN'
          }, {
            label: 'EXISTS',
            value: 'EXISTS'
          }, {
            label: 'NOT EXISTS',
            value: 'NOT EXISTS'
          }, {
            label: 'BETWEEN',
            value: 'BETWEEN'
          }, {
            label: 'NOT BETWEEN',
            value: 'NOT BETWEEN'
          }],
          onChange: newVal => {
            queryArgs.items[index].val[j].value = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), x.id == 'column' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
          placeholder: "",
          onChange: newVal => {
            clearTimeout(debounce);
            debounce = setTimeout(() => {
              queryArgs.items[index].val[j].value = newVal;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }, 1000);
          }
        })), x.id == 'relation' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
          style: {
            margin: 0
          },
          options: [{
            label: 'OR',
            value: 'OR'
          }, {
            label: 'AND',
            value: 'AND'
          }],
          onChange: newVal => {
            queryArgs.items[index].val[j].value = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), (x.id == 'year' || x.id == 'month' || x.id == 'week' || x.id == 'day' || x.id == 'hour' || x.id == 'minute' || x.id == 'second') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
          label: "Value",
          placeholder: "",
          onChange: newVal => {
            //clearTimeout(debounce);
            //debounce = setTimeout(() => {
            queryArgs.items[index].val[j].value = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            }); //}, 1000);
          }
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
          style: {
            margin: 0
          },
          label: "compare ",
          options: [{
            label: '=',
            value: '='
          }, {
            label: '!=',
            value: '!='
          }, {
            label: '>',
            value: '>'
          }, {
            label: '>=',
            value: '>='
          }, {
            label: '<',
            value: '<'
          }, {
            label: '<=',
            value: '<='
          }, {
            label: 'IN',
            value: 'IN'
          }, {
            label: 'NOT IN',
            value: 'NOT IN'
          }, {
            label: 'EXISTS',
            value: 'EXISTS'
          }, {
            label: 'NOT EXISTS',
            value: 'NOT EXISTS'
          }, {
            label: 'BETWEEN',
            value: 'BETWEEN'
          }, {
            label: 'NOT BETWEEN',
            value: 'NOT BETWEEN'
          }],
          onChange: newVal => {
            queryArgs.items[index].val[j].compare = newVal;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }))));
      })), item.id == 'taxQuery' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: proInfo.status != 'active' ? '' : ''
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer inline-block mb-2 px-3 py-1 text-white bg-blue-600 text-sm",
        onClick: _ev => {
          var itemData = queryArgs.items[index];
          var xx = itemData.val.concat({
            terms: [{
              taxonomy: '',
              field: '',
              terms: [],
              operator: ''
            }],
            relation: 'OR'
          });
          queryArgs.items[index].val = xx;
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      }, "Add"), item.val.map((x, j) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
          title: "Term",
          initialOpen: false
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "cursor-pointer inline-block mb-2 px-3 py-1 text-white bg-red-600 text-sm",
          onClick: _ev => {
            var itemData = queryArgs.items[index];
            var xx = itemData.val.splice(j, 1);
            queryArgs.items[index].val = itemData.val;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Remove"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, "Terms Relation"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
          style: {
            margin: 0
          },
          label: "",
          value: x.relation,
          options: [{
            label: 'OR',
            value: 'OR'
          }, {
            label: 'AND',
            value: 'AND'
          }],
          onChange: newVal => {
            var itemData = queryArgs.items[index]; //itemData.val.relation = newVal;

            itemData.val[j].relation = newVal; //var term = itemData.val[j].terms[k]
            //term.taxonomy = newVal;

            queryArgs.items[index].val = itemData.val;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        })), x.terms.map((y, k) => {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "border-b border-solid border-gray-300 py-3"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
            label: "Taxonomy",
            value: y.taxonomy,
            placeholder: "Taxonomy",
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].terms[k];
              term.taxonomy = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
            label: "Terms",
            value: y.terms.join(','),
            placeholder: "Comma separated",
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].terms[k];
              term.terms = newVal.split(',');
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
            style: {
              margin: 0
            },
            label: "Fields",
            value: y.field,
            options: [{
              label: 'Choose...',
              value: ''
            }, {
              label: 'Term ID',
              value: 'term_id'
            }, {
              label: 'Name',
              value: 'name'
            }, {
              label: 'Slug',
              value: 'slug'
            }, {
              label: 'Term taxonomy id',
              value: 'term_taxonomy_id'
            }],
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].terms[k];
              term.field = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
            style: {
              margin: 0
            },
            label: "Operator",
            value: y.operator,
            options: [{
              label: 'Choose...',
              value: ''
            }, {
              label: 'IN',
              value: 'IN'
            }, {
              label: 'NOT IN',
              value: 'NOT IN'
            }, {
              label: 'AND',
              value: 'AND'
            }, {
              label: 'EXISTS',
              value: 'EXISTS'
            }, {
              label: 'NOT EXISTS',
              value: 'NOT EXISTS'
            }],
            onChange: newVal => {
              var itemData = queryArgs.items[index];
              var term = itemData.val[j].terms[k];
              term.operator = newVal;
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "cursor-pointer block text-center my-2 px-3 py-1 text-white bg-red-600 text-sm",
            onClick: _ev => {
              var itemData = queryArgs.items[index];
              var terms = itemData.val[j].terms;
              var xx = itemData.val[j].terms.splice(k, 1);
              queryArgs.items[index].val = itemData.val;
              setAttributes({
                queryArgs: {
                  items: queryArgs.items
                }
              });
            }
          }, "Remove"));
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "cursor-pointer text-center px-3 py-1 text-white bg-blue-600 text-sm",
          onClick: _ev => {
            var itemData = queryArgs.items[index];
            var xx = itemData.val[j].terms.concat({
              taxonomy: '',
              field: '',
              terms: [],
              operator: ''
            });
            queryArgs.items[index].val[j].terms = xx;
            setAttributes({
              queryArgs: {
                items: queryArgs.items
              }
            });
          }
        }, "Add")));
      }))), (item.id == 'metaKey' || item.id == 's' || item.id == 'metaValue' || item.id == 'metaValueNum' || item.id == 'year' || item.id == 'monthnum' || item.id == 'w' || item.id == 'day' || item.id == 'hour' || item.id == 'minute' || item.id == 'second' || item.id == 'm' || item.id == 'author' || item.id == 'authorName' || item.id == 'tag' || item.id == 'tagId' || item.id == 'cat' || item.id == 'categoryName' || item.id == 'p' || item.id == 'name' || item.id == 'pageId' || item.id == 'pagename' || item.id == 'postParent' || item.id == 'postsPerPage' || item.id == 'paged' || item.id == 'offset' || item.id == 'postsPerArchivePage' || item.id == 'perm') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: item.val,
        onChange: newVal => {
          clearTimeout(debounce);
          debounce = setTimeout(() => {
            updateQueryPram(newVal, index);
          }, 1000);
        }
      })), item.id == 'metaCompare' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val,
        options: [{
          label: '=',
          value: '='
        }, {
          label: '!=',
          value: '!='
        }, {
          label: '>',
          value: '>'
        }, {
          label: '>=',
          value: '>='
        }, {
          label: '<',
          value: '<'
        }, {
          label: '<=',
          value: '<='
        }, {
          label: 'LIKE',
          value: 'LIKE'
        }, {
          label: 'NOT LIKE',
          value: 'NOT LIKE'
        }, {
          label: 'IN',
          value: 'IN'
        }, {
          label: 'NOT IN',
          value: 'NOT IN'
        }, {
          label: 'BETWEEN',
          value: 'BETWEEN'
        }, {
          label: 'NOT BETWEEN',
          value: 'NOT BETWEEN'
        }, {
          label: 'NOT EXISTS',
          value: 'NOT EXISTS'
        }, {
          label: 'REGEXP',
          value: 'REGEXP'
        }, {
          label: 'NOT REGEXP',
          value: 'NOT REGEXP'
        }, {
          label: 'RLIKE',
          value: 'RLIKE'
        }],
        onChange: newVal => {
          updateQueryPram(newVal, index);
        }
      })), item.id == 'postPassword' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: item.val,
        onChange: newVal => updateQueryPram(newVal, index)
      })), (item.id == 'postNameIn' || item.id == 'authorIn' || item.id == 'authorNotIn' || item.id == 'postNotIn' || item.id == 'postIn' || item.id == 'postParentNotIn' || item.id == 'tagNotIn' || item.id == 'tagAnd' || item.id == 'tagIn' || item.id == 'postParentIn' || item.id == 'tagSlugIn' || item.id == 'tagSlugAnd' || item.id == 'categoryNotIn' || item.id == 'categoryIn' || item.id == 'categoryAnd') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: item.val,
        placeholder: "Comma separated",
        onChange: newVal => updateQueryPram(newVal, index)
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: item.id == 'postNameIndd' ? '' : 'hidden'
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer text-center px-3 py-1 text-white bg-blue-600 text-sm",
        onClick: _ev => {
          var itemData = queryArgs.items[index];
          var val = itemData.val.concat({
            slug: ''
          });
          itemData.val = val;
          queryArgs.items[index] = itemData;
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      }, "Add")), item.id == 'commentCount' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: item.val.value,
        placeholder: "Comment Count, Ex: 25",
        onChange: newVal => updateQueryPram({
          value: newVal,
          compare: item.val.compare
        }, index)
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val.compare,
        options: [{
          label: '=',
          value: '='
        }, {
          label: '!=',
          value: '!='
        }, {
          label: '>',
          value: '>'
        }, {
          label: '>=',
          value: '>='
        }, {
          label: '<',
          value: '<'
        }, {
          label: '<=',
          value: '<='
        }],
        onChange: newVal => updateQueryPram({
          value: item.val.value,
          compare: newVal
        }, index)
      })), item.id == 'postMimeType' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_input_select__WEBPACK_IMPORTED_MODULE_25__["default"], {
        val: item.val,
        options: [{
          label: 'image/jpeg',
          value: 'jpg|jpeg|jpe'
        }, {
          label: 'image/gif',
          value: 'gif'
        }, {
          label: 'image/png',
          value: 'png'
        }, {
          label: 'image/bmp',
          value: 'bmp'
        }],
        multiple: true,
        onChange: newVal => {
          updateQueryPram(newVal, index);
        }
      })), (item.id == 'cacheResults' || item.id == 'nopaging' || item.id == 'hasPassword' || item.id == 'updatePostMetaCache' || item.id == 'updatePostTermCache') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val,
        options: [{
          label: 'True',
          value: true
        }, {
          label: 'False',
          value: false
        }],
        onChange: newVal => updateQueryPram(newVal, index)
      })), item.id == 'ignoreStickyPosts' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: item.val,
        options: [{
          label: 'True',
          value: true
        }, {
          label: 'False',
          value: false
        }],
        onChange: newVal => updateQueryPram(newVal, index)
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, item.description)));
    }

    function addQueryPramX(_option, index) {
      var attrExist = false;
      var data = _queryprams__WEBPACK_IMPORTED_MODULE_29__["default"][index];
      var multiple = data.multiple;
      var isExist = queryArgs.items.map(item => {
        if (item.id == index) {
          return true;
        }
      });
      var items = queryArgs.items.concat([data]);
      setAttributes({
        queryArgs: {
          items: items
        }
      });
    }

    var RemoveQueryPram = function (_ref3) {
      let {
        title,
        index
      } = _ref3;
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "cursor-pointer hover:bg-red-500 hover:text-white px-1 py-1",
        onClick: ev => {
          queryArgs.items.splice(index, 1);
          setAttributes({
            queryArgs: {
              items: queryArgs.items
            }
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_34__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_35__["default"]
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "mx-2"
      }, title));
    };

    function deleteGridColumn(i) {
      grid.styles.gridTemplateColumns[breakPointX].splice(i, 1);
      var styles = { ...grid.styles,
        gridTemplateColumns: grid.styles.gridTemplateColumns
      };
      setAttributes({
        grid: { ...grid,
          styles: styles
        }
      });
    }

    function deleteGridRow(i) {
      grid.styles.gridTemplateRows[breakPointX].splice(i, 1);
      var styles = { ...grid.styles,
        gridTemplateRows: grid.styles.gridTemplateRows
      };
      setAttributes({
        grid: { ...grid,
          styles: styles
        }
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "post-grid "
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Layouts",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "text-white cursor-pointer"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: layoutData.source == 'library' ? 'bg-blue-500 w-1/2 inline-block px-3 py-2 text-[14px] font-bold' : 'bg-blue-300 text-[14px] font-bold inline-block px-3 py-2 w-1/2',
      onClick: _ev => {
        setLayoutData({
          source: 'library'
        });
      }
    }, "Library"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: layoutData.source == 'saved' ? 'bg-blue-500 w-1/2 inline-block px-3 py-2 text-[14px] font-bold' : 'bg-blue-300 inline-block px-3 py-2 w-1/2 text-[14px] font-bold',
      onClick: _ev => {
        setLayoutData({
          source: 'saved'
        });
      }
    }, "Saved")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: queryLayouts.keyword,
      type: "text",
      placeholder: "Search Layouts...",
      onChange: newVal => {
        clearTimeout(debounce);
        debounce = setTimeout(() => {
          setQueryLayouts({
            keyword: newVal,
            page: queryLayouts.page,
            category: queryLayouts.category
          });
        }, 1000); //fetchLayouts();
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      className: "w-full",
      style: {
        margin: 0
      },
      label: "",
      value: queryLayouts.category,
      options: layoutCats,
      onChange: newVal => {
        setQueryLayouts({
          keyword: queryLayouts.keyword,
          page: queryLayouts.page,
          category: newVal
        }); //fetchLayouts();
      }
    })), layoutData.source == 'saved' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "flex gap-2\t"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "w-full rounded-sm  py-2 bg-blue-500 text-[14px] font-bold text-white cursor-pointer my-3 text-center "
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: " ",
      target: "_blank",
      href: clientData.siteAdminurl + 'edit.php?post_type=post_grid_template'
    }, "All Layouts")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "w-full rounded-sm  py-2 bg-blue-500 text-[14px] font-bold text-white cursor-pointer my-3 text-center "
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      className: "",
      target: "_blank",
      href: clientData.siteAdminurl + 'post-new.php?post_type=post_grid_template'
    }, "Create Layout"))), layoutLoading == true && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "text-center"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Spinner, null)), layoutLoading == false && layoutList.items.length > 0 && layoutList.items.map(x => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-4 border bg-gray-200 "
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "relative cursor-pointer",
        onClick: _ev => {
          selectLayout(x.post_id, x.post_content);
        }
      }, layout.id == x.post_id && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "absolute bg-amber-500 text-white px-2 py-1 top-0 right-0"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        class: "dashicons dashicons-saved"
      }), " Selected"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
        className: "w-full",
        src: x.thumb_url
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "text-[14px] p-1 bg-gray-500 text-white bg-opacity-80 text-bold  text-center"
      }, x.post_title)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "py-3 flex justify-items-stretch"
      }, layoutData.source != 'library' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "mx-1 inline-block bg-blue-500 hover:bg-blue-400 px-2 py-1 text-white rounded-sm cursor-pointer"
      }, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        target: "_blank",
        href: clientData.siteAdminurl + 'post.php?post=' + x.post_id + '&action=edit'
      }, "Edit"), " "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "mx-1 inline-block bg-blue-500 hover:bg-blue-400 px-2 py-1 text-white rounded-sm cursor-pointer"
      }, "#", x.post_id), layoutData.source == 'library' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "mx-1 relative inline-block bg-blue-500 hover:bg-blue-400 px-2 py-1 text-white rounded-sm cursor-pointer",
        onClick: ev => {
          if (proInfo.status == 'active') {
            if (!importLayoutOpen.isOpen) {
              setlayoutImporting(true);
              importLayout(x);
            }
          }

          setimportLayoutOpen({
            id: x.post_id,
            isOpen: !importLayoutOpen.isOpen
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        class: "dashicons dashicons-download"
      }), " Import"), importLayoutOpen.id == x.post_id && importLayoutOpen.isOpen && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Popover, {
        position: "bottom left p-2 "
      }, proInfo.status != 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "w-48 bg-amber-100 px-3 py-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: ""
      }, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "underline"
      }, "Importing Layouts"), " Only avilable in Premium"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: ""
      }, "After import the layout you customize and make your own.")), proInfo.status == 'active' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "w-48 bg-sky-300 px-3 py-2"
      }, layoutImporting && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Spinner, null), " Importing"), !layoutImporting && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
        className: ""
      }, "Layout imported and saved under ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        target: "_blank",
        className: "font-bold underline ",
        href: postGridData.siteAdminurl + 'edit.php?post_type=post_grid_template'
      }, "Saved Templates")))))));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "w-full rounded-sm  py-2 bg-blue-500 text-[14px] font-bold text-white cursor-pointer my-3 text-center",
      onClick: _ev => {
        var page = queryLayouts.page + 1;
        setQueryLayouts({
          keyword: queryLayouts.keyword,
          page: page,
          category: queryLayouts.category
        });
      }
    }, layoutLoading.loading == true && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "text-center"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Spinner, null)), "Load More")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Query Post",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Add Query Parameters"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: queryPramsX,
      buttonTitle: "Choose",
      onChange: addQueryPramX,
      values: ""
    })), queryArgs.items.map((item, index) => {
      return generateQueryArgOptions(item, index);
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Query Presets"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: _query_presets__WEBPACK_IMPORTED_MODULE_27__["default"],
      buttonTitle: "Choose",
      onChange: addQueryPreset,
      values: ''
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Grid Settings",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      onClick: _ev => {
        var gridTemplateColumns = grid.styles.gridTemplateColumns;

        if (Object.keys(grid.styles.gridTemplateColumns).length == 0) {
          gridTemplateColumns[breakPointX] = [{
            val: 1,
            unit: 'fr'
          }];
        } else {
          var sds = gridTemplateColumns[breakPointX] != undefined ? gridTemplateColumns[breakPointX].concat({
            val: 1,
            unit: 'fr'
          }) : [{
            val: 1,
            unit: 'fr'
          }];
          gridTemplateColumns[breakPointX] = sds;
        }

        var styles = { ...grid.styles,
          gridTemplateColumns: gridTemplateColumns
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      },
      className: "my-3 !bg-blue-600 !text-white"
    }, "Add Column"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), grid.styles.gridTemplateColumns[breakPointX] != undefined && grid.styles.gridTemplateColumns[breakPointX].map((item, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: item.val,
        type: "number",
        onChange: newVal => {
          var newValuesObj = {};

          if (Object.keys(grid.styles.gridTemplateColumns).length == 0) {
            newValuesObj[breakPointX] = {
              val: newVal,
              unit: 'em'
            };
          } else {
            var gridTemplateColumns = grid.styles.gridTemplateColumns;
            var sds = gridTemplateColumns[breakPointX].map((x, i) => {
              return index == i ? {
                val: newVal,
                unit: x.unit
              } : x;
            });
            newValuesObj[breakPointX] = sds;
          }

          var styles = { ...grid.styles,
            gridTemplateColumns: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
        className: "mb-0",
        value: item.unit,
        options: [{
          label: 'fr',
          value: 'fr'
        }, {
          label: 'px',
          value: 'px'
        }, {
          label: '%',
          value: '%'
        }, {
          label: 'em',
          value: 'em'
        }],
        onChange: newVal => {
          var newValuesObj = {};

          if (Object.keys(grid.styles.gridTemplateColumns).length == 0) {
            newValuesObj[breakPointX] = {
              val: newVal,
              unit: 'em'
            };
          } else {
            var gridTemplateColumns = grid.styles.gridTemplateColumns;
            var sds = gridTemplateColumns[breakPointX].map((x, i) => {
              return index == i ? {
                val: x.val,
                unit: newVal
              } : x;
            });
            newValuesObj[breakPointX] = sds;
          }

          var styles = { ...grid.styles,
            gridTemplateColumns: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
        icon: "no-alt",
        onClick: _ev => {
          deleteGridColumn(index);
        }
      }));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      onClick: _ev => {
        var gridTemplateRows = grid.styles.gridTemplateRows;

        if (Object.keys(grid.styles.gridTemplateRows).length == 0) {
          gridTemplateRows[breakPointX] = [{
            val: 1,
            unit: 'fr'
          }];
        } else {
          var sds = gridTemplateRows[breakPointX] != undefined ? gridTemplateRows[breakPointX].concat({
            val: 1,
            unit: 'fr'
          }) : [{
            val: 1,
            unit: 'fr'
          }];
          gridTemplateRows[breakPointX] = sds;
        }

        var styles = { ...grid.styles,
          gridTemplateRows: gridTemplateRows
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      },
      className: "my-3 !bg-blue-600 !text-white"
    }, "Add Row"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), grid.styles.gridTemplateRows[breakPointX] != undefined && grid.styles.gridTemplateRows[breakPointX].map((item, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: item.val,
        type: "number",
        onChange: newVal => {
          var newValuesObj = {};

          if (Object.keys(grid.styles.gridTemplateRows).length == 0) {
            newValuesObj[breakPointX] = {
              val: newVal,
              unit: 'em'
            };
          } else {
            var gridTemplateRows = grid.styles.gridTemplateRows;
            var sds = gridTemplateRows[breakPointX].map((x, i) => {
              return index == i ? {
                val: newVal,
                unit: x.unit
              } : x;
            });
            newValuesObj[breakPointX] = sds;
          }

          var styles = { ...grid.styles,
            gridTemplateRows: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
        className: "mb-0",
        value: item.unit,
        options: [{
          label: 'fr',
          value: 'fr'
        }, {
          label: 'px',
          value: 'px'
        }, {
          label: '%',
          value: '%'
        }, {
          label: 'em',
          value: 'em'
        }],
        onChange: newVal => {
          var newValuesObj = {};

          if (Object.keys(grid.styles.gridTemplateRows).length == 0) {
            newValuesObj[breakPointX] = {
              val: newVal,
              unit: 'em'
            };
          } else {
            var gridTemplateRows = grid.styles.gridTemplateRows;
            var sds = gridTemplateRows[breakPointX].map((x, i) => {
              return index == i ? {
                val: x.val,
                unit: newVal
              } : x;
            });
            newValuesObj[breakPointX] = sds;
          }

          var styles = { ...grid.styles,
            gridTemplateRows: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
        icon: "no-alt",
        onClick: _ev => {
          deleteGridRow(index);
        }
      }));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Column Gap"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: grid.styles.colGap[breakPointX] != undefined ? grid.styles.colGap[breakPointX].val : 1,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(grid.styles.colGap).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'em'
          };
        } else {
          newValuesObj = grid.styles.colGap;
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'em';
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...grid.styles,
          colGap: newValuesObj
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      className: "mb-0",
      value: grid.styles.colGap[breakPointX] != undefined ? grid.styles.colGap[breakPointX].unit : 'em',
      options: [{
        label: 'fr',
        value: 'fr'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(grid.styles.colGap).length == 0) {
          newValuesObj[breakPointX] = {
            val: 1,
            unit: newVal
          };
        } else {
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 1;
          newValuesObj = grid.styles.colGap;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...grid.styles,
          colGap: newValuesObj
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Row Gap"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: grid.styles.rowGap[breakPointX] != undefined ? grid.styles.rowGap[breakPointX].val : 1,
      type: "number",
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(grid.styles.rowGap).length == 0) {
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: 'em'
          };
        } else {
          var unit = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].unit : 'em';
          newValuesObj = grid.styles.rowGap;
          newValuesObj[breakPointX] = {
            val: newVal,
            unit: unit
          };
        }

        var styles = { ...grid.styles,
          rowGap: newValuesObj
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      className: "mb-0",
      value: grid.styles.rowGap[breakPointX] != undefined ? grid.styles.rowGap[breakPointX].unit : 'em',
      options: [{
        label: 'fr',
        value: 'fr'
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(grid.styles.rowGap).length == 0) {
          newValuesObj[breakPointX] = {
            val: 1,
            unit: newVal
          };
        } else {
          var val = newValuesObj[breakPointX] != undefined ? newValuesObj[breakPointX].val : 'em';
          newValuesObj = grid.styles.rowGap;
          newValuesObj[breakPointX] = {
            val: val,
            unit: newVal
          };
        }

        var styles = { ...grid.styles,
          rowGap: newValuesObj
        };
        setAttributes({
          grid: { ...grid,
            styles: styles
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "N'th Item CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
      className: "my-3",
      variant: "secondary",
      onClick: _newVal => {
        if (proInfo.status == 'active') {
          if (grid.options.itemCss[breakPointX] != undefined) {
            var ssd = grid.options.itemCss[breakPointX].concat({
              'grid-column-start': '',
              'grid-column-end': '',
              'grid-row-start': '',
              'grid-row-end': ''
            });
          } else {
            grid.options.itemCss[breakPointX] = [];
            var ssd = grid.options.itemCss[breakPointX].concat({
              'grid-column-start': '',
              'grid-column-end': '',
              'grid-row-start': '',
              'grid-row-end': ''
            });
          }

          var newValuesObj = {};

          if (Object.keys(grid.options.itemCss).length == 0) {
            newValuesObj[breakPointX] = ssd;
          } else {
            newValuesObj = grid.options.itemCss;
            newValuesObj[breakPointX] = ssd;
          }

          var options = { ...grid.options,
            itemCss: newValuesObj
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      }
    }, "Add", !proInfo.proInstalled && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "bg-amber-400 mx-2 rounded-sm px-3  text-white hover:text-white"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
      target: "_blank",
      href: 'https://pickplugins.com/post-grid/?utm_source=nthItemCSS&utm_term=blockPostgrid&utm_campaign=pluginPostGrid&utm_medium=nthItemCSS'
    }, "Pro")))), JSON.stringify(proInfo), grid.options.itemCss[breakPointX] != undefined && grid.options.itemCss[breakPointX].map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
        title: i + 1 + '\'th Item',
        initialOpen: false
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
        icon: "no-alt",
        variant: "secondary",
        onClick: _ev => {
          grid.options.itemCss[breakPointX].splice(i, 1);
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      }, "Delete"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "grid-column-start"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: x['grid-column-start'],
        type: "number",
        onChange: newVal => {
          grid.options.itemCss[breakPointX][i]['grid-column-start'] = newVal;
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "grid-column-end"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: x['grid-column-end'],
        type: "number",
        onChange: newVal => {
          grid.options.itemCss[breakPointX][i]['grid-column-end'] = newVal;
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "grid-row-start"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: x['grid-row-start'],
        type: "number",
        onChange: newVal => {
          grid.options.itemCss[breakPointX][i]['grid-row-start'] = newVal;
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
        for: ""
      }, "grid-row-end"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        value: x['grid-row-end'],
        type: "number",
        onChange: newVal => {
          grid.options.itemCss[breakPointX][i]['grid-row-end'] = newVal;
          var options = { ...grid.options,
            itemCss: grid.options.itemCss
          };
          setAttributes({
            grid: { ...grid,
              options: options
            }
          });
        }
      })));
    }), _grid_layouts__WEBPACK_IMPORTED_MODULE_28__["default"].map((x, _i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer relative hover:bg-blue-200 my-3",
        onClick: _ev => {
          if (x.isPro) {//setAttributes({ grid: x.data })
          } else {
            setAttributes({
              grid: x.data
            });
          }
        }
      }, x.isPro && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "bg-amber-400 absolute top-2 left-0 rounded-sm px-3 mx-2  text-white hover:text-white"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
        target: "_blank",
        href: 'https://pickplugins.com/post-grid/?utm_source=dropdownComponent&utm_term=proFeature&utm_campaign=pluginPostGrid&utm_medium=' + x.label
      }, "Pro")), x.icon != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "w-full grid-layout-prewview"
      }, x.icon), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "text-[16px] p-2 bg-blue-600 text-white bg-opacity-90 text-bold  w-full text-center"
      }, x.title));
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Loop Item",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Text Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      color: itemWrap.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_32__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(itemWrap.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = itemWrap.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...itemWrap.styles,
          color: newValuesObj
        };
        setAttributes({
          itemWrap: { ...itemWrap,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      color: itemWrap.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_32__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(itemWrap.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = itemWrap.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...itemWrap.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          itemWrap: { ...itemWrap,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: itemWrap.styles.padding[breakPointX],
      onChange: nextValues => {
        itemwrapPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Border"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_border__WEBPACK_IMPORTED_MODULE_23__["default"], {
      val: itemWrap.styles.border != undefined ? itemWrap.styles.border[breakPointX] : '',
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(itemWrap.styles.border).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = itemWrap.styles.border;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...itemWrap.styles,
          border: newValuesObj
        };
        setAttributes({
          itemWrap: { ...itemWrap,
            styles: styles
          }
        });
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'border': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Box Shadow"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_box_shadow__WEBPACK_IMPORTED_MODULE_24__["default"], {
      val: itemWrap.styles.boxShadow != undefined ? itemWrap.styles.boxShadow[breakPointX] : '',
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(itemWrap.styles.boxShadow).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = itemWrap.styles.boxShadow;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...itemWrap.styles,
          boxShadow: newValuesObj
        };
        setAttributes({
          itemWrap: { ...itemWrap,
            styles: styles
          }
        });
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'box-shadow': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Border Radius"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: itemWrap.styles.borderRadius != undefined ? itemWrap.styles.borderRadius[breakPointX] : '',
      onChange: nextValues => {
        var newValuesObj = {};

        if (Object.keys(itemWrap.styles.borderRadius).length == 0) {
          newValuesObj[breakPointX] = nextValues.top + ' ' + nextValues.right + ' ' + nextValues.bottom + ' ' + nextValues.left;
        } else {
          newValuesObj = itemWrap.styles.borderRadius;
          newValuesObj[breakPointX] = nextValues.top + ' ' + nextValues.right + ' ' + nextValues.bottom + ' ' + nextValues.left;
          ;
        }

        var styles = { ...itemWrap.styles,
          borderRadius: newValuesObj
        };
        setAttributes({
          itemWrap: { ...itemWrap,
            styles: styles
          }
        });
        blockCssY.items[loopItemSelector] = { ...blockCssY.items[loopItemSelector],
          'border-radius': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_10__["default"], {
      typo: itemWrap.styles,
      breakPointX: breakPointX,
      onChange: onChangeItemWrapTypo,
      setAttributes: setAttributes,
      obj: itemWrap
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Container",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: container.styles.padding[breakPointX],
      onChange: nextValues => {
        containerPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: container.styles.margin[breakPointX],
      onChange: nextValues => {
        containerMarginControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: container.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_32__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(container.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = container.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...container.styles,
          color: newValuesObj
        };
        setAttributes({
          container: { ...container,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[containerSelector] = { ...blockCssY.items[containerSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: container.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_32__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(container.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = container.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...container.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          container: { ...container,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[containerSelector] = { ...blockCssY.items[containerSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: container.styles.backgroundImage[breakPointX] != undefined ? container.styles.backgroundImage[breakPointX].url : '',
      alt: ""
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__.MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__.MediaUpload, {
      onSelect: media => {
        var newValuesObj = {};

        if (Object.keys(container.styles.backgroundImage).length == 0) {
          newValuesObj[breakPointX] = {
            id: media.id,
            url: media.url
          };
        } else {
          newValuesObj = container.styles.backgroundImage;
          newValuesObj[breakPointX] = {
            id: media.id,
            url: media.url
          };
        }

        var styles = { ...container.styles,
          backgroundImage: newValuesObj
        };
        setAttributes({
          container: { ...container,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[containerSelector] = { ...blockCssY.items[containerSelector],
          'background-image': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      },
      onClose: () => {},
      allowedTypes: ALLOWED_MEDIA_TYPES,
      value: container.styles.backgroundImage[breakPointX],
      render: _ref4 => {
        let {
          open
        } = _ref4;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
          onClick: open
        }, "Open Media Library");
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Pagination",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "mb-4"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Pagination Type"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_12__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: _pagination_types__WEBPACK_IMPORTED_MODULE_30__["default"],
      buttonTitle: "Choose",
      onChange: (arg, index) => {
        var options = { ...pagination.options,
          type: arg.value
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      },
      values: ''
    })), pagination.options.type.length != 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-500 text-white px-3 py-2 my-5"
    }, _pagination_types__WEBPACK_IMPORTED_MODULE_30__["default"][pagination.options.type] != undefined ? _pagination_types__WEBPACK_IMPORTED_MODULE_30__["default"][pagination.options.type].label : ''), (pagination.options.type == 'normal' || pagination.options.type == 'ajax') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Max Number of Pagination"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: pagination.options.maxPageNum,
      onChange: newVal => {
        var options = { ...pagination.options,
          maxPageNum: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    })), (pagination.options.type == 'normal' || pagination.options.type == 'ajax' || pagination.options.type == 'next_previous') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Previous Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: pagination.options.prevText,
      onChange: newVal => {
        var options = { ...pagination.options,
          prevText: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Next Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: pagination.options.nextText,
      onChange: newVal => {
        var options = { ...pagination.options,
          nextText: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    })), (pagination.options.type == 'loadmore' || pagination.options.type == 'infinite') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Load More Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: pagination.options.loadMoreText,
      onChange: newVal => {
        var options = { ...pagination.options,
          loadMoreText: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "No Posts Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: pagination.options.noMorePosts,
      onChange: newVal => {
        var options = { ...pagination.options,
          noMorePosts: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Loading Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: pagination.options.loadingText,
      onChange: newVal => {
        var options = { ...pagination.options,
          loadingText: newVal
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Loading Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_14__["default"], {
      library: pagination.options.loadingIcon.library,
      srcType: pagination.options.loadingIcon.srcType,
      iconSrc: pagination.options.loadingIcon.iconSrc,
      onChange: arg => {
        var options = { ...pagination.options,
          loadingIcon: {
            srcType: arg.srcType,
            library: arg.library,
            iconSrc: arg.iconSrc
          }
        };
        setAttributes({
          pagination: { ...pagination,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Pagination Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Text Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      color: pagination.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_32__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(pagination.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = pagination.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...pagination.styles,
          color: newValuesObj
        };
        setAttributes({
          pagination: { ...pagination,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      color: pagination.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_32__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(pagination.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = pagination.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...pagination.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          pagination: { ...pagination,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Text Align"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_text_align__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: pagination.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(pagination.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = pagination.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...pagination.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          pagination: { ...pagination,
            styles: styles
          }
        });
        blockCssY.items[paginationWrapSelector] = { ...blockCssY.items[paginationWrapSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: pagination.styles.padding[breakPointX],
      onChange: nextValues => {
        paginationPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: pagination.styles.margin[breakPointX],
      onChange: nextValues => {
        paginationMarginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Pagination Items",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Text Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      color: paginationItem.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_32__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(paginationItem.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = paginationItem.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...paginationItem.styles,
          color: newValuesObj
        };
        setAttributes({
          paginationItem: { ...paginationItem,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      color: paginationItem.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_32__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(paginationItem.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = paginationItem.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...paginationItem.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          paginationItem: { ...paginationItem,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Active Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      color: paginationItemActive.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_32__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(paginationItemActive.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = paginationItemActive.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...paginationItemActive.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          paginationItemActive: { ...paginationItemActive,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[paginationItemActiveSelector] = { ...blockCssY.items[paginationItemActiveSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_19__["default"], {
      val: paginationItem.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(paginationItem.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = paginationItem.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...paginationItem.styles,
          display: newValuesObj
        };
        setAttributes({
          paginationItem: { ...paginationItem,
            styles: styles
          }
        });
        blockCssY.items[paginationItemSelector] = { ...blockCssY.items[paginationItemSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: paginationItem.styles.padding[breakPointX],
      onChange: nextValues => {
        paginationItemPaddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: paginationItem.styles.margin[breakPointX],
      onChange: nextValues => {
        paginationItemMarginControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_26__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_10__["default"], {
      typo: paginationItem.styles,
      breakPointX: breakPointX,
      onChange: onChangePaginationTypo,
      setAttributes: setAttributes,
      obj: paginationItem
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Lazy load",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "Enable",
      value: lazyLoad.options.enable,
      options: [{
        label: 'Yes',
        value: 'yes'
      }, {
        label: 'No',
        value: 'no'
      }],
      onChange: newVal => {
        var options = { ...lazyLoad.options,
          enable: newVal
        };
        setAttributes({
          lazyLoad: { ...lazyLoad,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Lazyload Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_14__["default"], {
      library: lazyLoad.options.icon != undefined ? lazyLoad.options.icon.library : 'fontAwesome',
      srcType: lazyLoad.options.icon != undefined ? lazyLoad.options.icon.srcType : 'class',
      iconSrc: lazyLoad.options.icon != undefined ? lazyLoad.options.icon.iconSrc : '',
      onChange: arg => {
        var options = { ...lazyLoad.options,
          icon: {
            srcType: arg.srcType,
            library: arg.library,
            iconSrc: arg.iconSrc
          }
        };
        setAttributes({
          lazyLoad: { ...lazyLoad,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Lazy Load Image"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("img", {
      src: lazyLoad.options.srcUrl,
      alt: ""
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__.MediaUploadCheck, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_6__.MediaUpload, {
      onSelect: media => {
        // media.id
        var options = { ...lazyLoad.options,
          srcUrl: media.url,
          srcId: media.id
        };
        setAttributes({
          lazyLoad: { ...lazyLoad,
            options: options
          }
        });
      },
      onClose: () => {},
      allowedTypes: ALLOWED_MEDIA_TYPES,
      value: lazyLoad.options.srcId,
      render: _ref5 => {
        let {
          open
        } = _ref5;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
          onClick: open
        }, "Open Media Library");
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      className: "hidden",
      title: "Search",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "Enable",
      value: search.enable,
      options: [{
        label: 'No',
        value: 'no'
      }, {
        label: 'Yes',
        value: 'yes'
      }],
      onChange: newVal => setAttributes({
        search: {
          enable: newVal,
          type: search.type,
          placeholder: search.placeholder,
          icon: search.icon,
          busyIcon: search.busyIcon
        }
      })
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "Search action",
      value: search.type,
      options: [{
        label: 'Ajax - On change form data',
        value: 'ajax'
      }, {
        label: 'On form submit - GET method',
        value: 'form_submit'
      }],
      onChange: newVal => setAttributes({
        search: {
          enable: search.type,
          type: newVal,
          placeholder: search.placeholder,
          icon: search.icon,
          busyIcon: search.busyIcon
        }
      })
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      label: "Placeholder text",
      value: search.placeholder,
      onChange: newVal => setAttributes({
        search: {
          enable: search.type,
          type: search.type,
          placeholder: newVal,
          icon: search.icon,
          busyIcon: search.busyIcon
        }
      })
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      label: "Search icon",
      value: search.icon,
      onChange: newVal => setAttributes({
        search: {
          enable: search.type,
          type: search.type,
          placeholder: search.placeholder,
          icon: newVal,
          busyIcon: search.busyIcon
        }
      })
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      label: "Loading icon",
      value: search.busyIcon,
      onChange: newVal => setAttributes({
        search: {
          enable: search.type,
          type: search.type,
          placeholder: search.placeholder,
          icon: search.icon,
          busyIcon: newVal
        }
      })
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_15__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_16__["default"], {
      utm: {
        utm_source: 'BlockPostGrid',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      className: "",
      title: "Tutorials",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_tutorials__WEBPACK_IMPORTED_MODULE_20__["default"], {
      links: _tutorials_links__WEBPACK_IMPORTED_MODULE_31__["default"]
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, grid.styles.gridTemplateColumns[breakPointX] == undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-5"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "text-center my-5"
    }, "Please set the column number"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "grid grid-cols-4 gap-4"
    }, columnPresets.map(x => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "cursor-pointer text-center bg-slate-400 hover:bg-slate-500",
        onClick: ev => {
          var gridTemplateColumns = grid.styles.gridTemplateColumns;
          var colGap = grid.styles.colGap;
          var rowGap = grid.styles.rowGap;
          gridTemplateColumns[breakPointX] = x.args;
          colGap[breakPointX] = {
            val: 1,
            unit: 'em'
          };
          rowGap[breakPointX] = {
            val: 1,
            unit: 'em'
          };
          var styles = { ...grid.styles,
            gridTemplateColumns: gridTemplateColumns,
            colGap: colGap,
            rowGap: rowGap
          };
          setAttributes({
            grid: { ...grid,
              styles: styles
            }
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "p-3 py-4 inline-block"
      }, x.icon));
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, lazyLoad.options.enable == 'yes' && isBusy && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: lazyLoad.options.class
    }), search.enable == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: search.options.class
    }, "search form"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, postsQuery == false && posts == null && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: noPostsWrap.options.class
    }, "No Post found"), postsQuery && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: spinnerWrap.options.class
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Spinner, null)), isBusy && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "text-center"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Spinner, null)), postsQuery == false && posts != null && posts.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: itemsWrap.options.class
    }, posts.map((x, _i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: itemWrap.options.class
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, x.html));
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: pagination.options.class
    }, pagination.options.type == 'normal' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, paginationItems != undefined && paginationItems.map(item => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, {
        className: "inline-block"
      }, item.replace("page-numbers", paginationItem.options.class));
    })), pagination.options.type == 'ajax' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, paginationItems != undefined && paginationItems.map(item => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, {
        className: "inline-block"
      }, item.replace("page-numbers", paginationItem.options.class));
    })), pagination.options.type == 'next_previous' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "flex justify-between"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pagination-prev page-numbers"
    }, pagination.options.prevText), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "pagination-next page-numbers"
    }, pagination.options.nextText)), pagination.options.type == 'loadmore' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "page-numbers"
    }, pagination.options.loadMoreText)), pagination.options.type == 'infinite' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null))))];
  },
  save: function (_props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    var attributes = _props.attributes;
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-grid/pagination-types.js":
/*!**************************************************!*\
  !*** ./src/blocks/post-grid/pagination-types.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/hooks */ "@wordpress/hooks");
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_hooks__WEBPACK_IMPORTED_MODULE_0__);

const paginationTypesBasic = {
  none: {
    label: 'None',
    value: 'none',
    isPro: false
  },
  normal: {
    label: 'Normal Pagination',
    value: 'normal',
    isPro: false
  },
  ajax: {
    label: 'Ajax Pagination',
    value: 'ajax',
    isPro: true
  },
  next_previous: {
    label: 'Next-Previous',
    value: 'next_previous',
    isPro: true
  },
  loadmore: {
    label: 'Load More',
    value: 'loadmore',
    isPro: true
  },
  infinite: {
    label: 'Infinite Load',
    value: 'infinite',
    isPro: true
  }
};
let paginationTypes = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_0__.applyFilters)('paginationTypes', paginationTypesBasic);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (paginationTypes);

/***/ }),

/***/ "./src/blocks/post-grid/query-presets.js":
/*!***********************************************!*\
  !*** ./src/blocks/post-grid/query-presets.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/hooks */ "@wordpress/hooks");
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_hooks__WEBPACK_IMPORTED_MODULE_0__);

const queryPresetsBasic = [{
  label: 'Latest Posts by Publish Date',
  key: 'preset1',
  isPro: false,
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["date"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Oldest Posts by Publish Date',
  key: 'preset2',
  isPro: true,
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "ASC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["date"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Latest Posts by Modified Date',
  key: 'preset3',
  isPro: false,
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["modified"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Oldest Posts by Modified Date',
  key: 'preset4',
  isPro: true,
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "ASC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["modified"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Alphabetical Order A-Z',
  key: 'preset5',
  isPro: false,
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "ASC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["name"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Alphabetical Order Z-A',
  key: 'preset6',
  isPro: true,
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["name"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Most Commented Posts',
  key: 'preset7',
  isPro: true,
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["name"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}, {
  label: 'Random 10 Posts',
  key: 'preset8',
  isPro: true,
  value: {
    "items": [{
      "val": ["post"],
      "multiple": false,
      "id": "postType",
      "label": "Post Types",
      "description": "Select Post Types to Query"
    }, {
      "val": ["publish"],
      "multiple": false,
      "id": "postStatus",
      "label": "Post status",
      "description": "Query post by post status"
    }, {
      "val": "DESC",
      "multiple": false,
      "id": "order",
      "label": "Order",
      "description": "Post query order"
    }, {
      "val": ["rand"],
      "multiple": false,
      "id": "orderby",
      "label": "Orderby",
      "description": "Post query orderby"
    }, {
      "val": "10",
      "multiple": false,
      "id": "postsPerPage",
      "label": "Posts Per Page",
      "description": ""
    }]
  }
}];
let queryPresets = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_0__.applyFilters)('queryPresets', queryPresetsBasic);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (queryPresets);

/***/ }),

/***/ "./src/blocks/post-grid/queryprams.js":
/*!********************************************!*\
  !*** ./src/blocks/post-grid/queryprams.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/hooks */ "@wordpress/hooks");
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_hooks__WEBPACK_IMPORTED_MODULE_0__);

const queryPramsBasic = [{
  val: ['post'],
  multiple: false,
  id: 'postType',
  label: 'Post Types',
  description: "Select Post Types to Query"
}, {
  val: '',
  multiple: false,
  id: 's',
  label: 'Keyword',
  description: "Search keyword, ex: hello"
}, {
  val: [],
  multiple: false,
  id: 'postStatus',
  label: 'Post status',
  description: "Query post by post status"
}, {
  val: '',
  multiple: false,
  id: 'order',
  label: 'Order',
  description: "Post query order"
}, {
  val: [],
  multiple: false,
  id: 'orderby',
  label: 'Orderby',
  description: "Post query orderby"
}, {
  val: '',
  multiple: false,
  id: 'metaKey',
  label: 'Meta fields key',
  description: "Post query by meta fields key"
}, // Category Parameters
{
  val: '',
  multiple: false,
  id: 'cat',
  label: 'Category ID',
  description: "Post query by Category ID"
}, {
  val: '',
  multiple: false,
  id: 'categoryName',
  label: 'Category Name',
  description: "Post query by Category Name"
}, {
  val: [],
  multiple: false,
  id: 'categoryAnd',
  label: 'Category And',
  description: "Post query by Category IDs",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'categoryIn',
  label: 'Category In',
  description: "Post query by Category IDs",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'categoryNotIn',
  label: 'Category Not In',
  description: "Post query by excluded Category IDs",
  isPro: true
}, // Tag Parameters
{
  val: '',
  multiple: false,
  id: 'tag',
  label: 'Tags',
  description: "Post query by Tag slug"
}, {
  val: '',
  multiple: false,
  id: 'tagId',
  label: 'Tag Id',
  description: "Post query by Tag ID"
}, {
  val: [],
  multiple: false,
  id: 'tagAnd',
  label: 'Tag And',
  description: "Post query by Tag Ids",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'tagIn',
  label: 'Tag In',
  description: "Post query by Tag ids",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'tagNotIn',
  label: 'Tag Not In',
  description: "Post query by excluded Tag ids"
}, {
  val: [],
  multiple: false,
  id: 'tagSlugAnd',
  label: 'Tag Slug And',
  description: "Post query by Tags slug",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'tagSlugIn',
  label: 'Tag Slug In',
  description: "Post query by excluded Tags slug",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'taxQuery',
  label: 'Tax Query',
  description: "Taxonomies query arguments",
  isPro: true
}, {
  val: 'OR',
  multiple: false,
  id: 'taxQueryRelation',
  label: 'Tax Query Relation',
  description: "Taxonomies query relation"
}, // Date Parameters
{
  val: [],
  multiple: false,
  id: 'dateQuery',
  label: 'Date Query',
  description: "Post query by date",
  isPro: true
}, {
  val: '',
  multiple: false,
  id: 'year',
  label: 'Year',
  description: "Post query by year"
}, {
  val: '',
  multiple: false,
  id: 'monthnum',
  label: 'Month',
  description: "Post query by month"
}, {
  val: '',
  multiple: false,
  id: 'w',
  label: 'Week',
  description: "Post query by week"
}, {
  val: '',
  multiple: false,
  id: 'day',
  label: 'Day',
  description: "Post query by day"
}, {
  val: '',
  multiple: false,
  id: 'hour',
  label: 'Hour',
  description: "Post query by hour"
}, {
  val: '',
  multiple: false,
  id: 'minute',
  label: 'Miniute',
  description: "Post query by miniute"
}, {
  val: '',
  multiple: false,
  id: 'second',
  label: 'Second',
  description: "Post query by second"
}, {
  val: '',
  multiple: false,
  id: 'm',
  label: 'Month',
  description: "Post query by month"
}, // Author Parameters
{
  val: '',
  multiple: false,
  id: 'author',
  label: 'Author',
  description: "Post query by Author ID"
}, {
  val: '',
  multiple: false,
  id: 'authorName',
  label: 'Author Name',
  description: "Post query by Author Name"
}, {
  val: [],
  multiple: false,
  id: 'authorIn',
  label: 'Author In',
  description: "Post query by Author IDs",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'authorNotIn',
  label: 'Author Not In',
  description: "Post query by exluded Author IDs",
  isPro: true
}, {
  val: '',
  multiple: false,
  id: 'p',
  label: 'Post id',
  description: "Post query by single post id"
}, {
  val: '',
  multiple: false,
  id: 'name',
  label: 'Name',
  description: "Post query by post slug"
}, {
  val: '',
  multiple: false,
  id: 'pageId',
  label: 'Page Id',
  description: "Post query by single page id"
}, {
  val: '',
  multiple: false,
  id: 'pagename',
  label: 'Page name',
  description: "Post query by page slug"
}, {
  val: '',
  multiple: false,
  id: 'postParent',
  label: 'Post Parent',
  description: "Post query by post parent id",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'postParentIn',
  label: 'Post Parent In',
  description: "Post query by post parent ids",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'postParentNotIn',
  label: 'Post Parent Not In',
  description: "Post query by excluded post parent ids"
}, {
  val: [],
  multiple: false,
  id: 'postIn',
  label: 'Post In',
  description: "Post query by multiple post ids, comma separated.",
  isPro: true
}, {
  val: [],
  multiple: false,
  id: 'postNotIn',
  label: 'Post Not In',
  description: "Post query by excluded post ids",
  isPro: true
}, {
  val: [{
    slug: ''
  }],
  multiple: false,
  id: 'postNameIn',
  label: 'Post Name In',
  description: "Post query by post slugs",
  isPro: true
}, {
  val: '',
  multiple: false,
  id: 'hasPassword',
  label: 'Has Password',
  description: "Post query for posts with passwords"
}, {
  val: '',
  multiple: false,
  id: 'postPassword',
  label: 'Post Password',
  description: "Post query for posts with particular passwords",
  isPro: true
}, {
  val: {
    compare: '='
  },
  multiple: false,
  id: 'commentCount',
  label: 'Comment Count',
  description: "Post query by comment count"
}, {
  val: '',
  multiple: false,
  id: 'nopaging',
  label: 'No Paging',
  description: "Enable show all posts or use pagination"
}, {
  val: '',
  multiple: false,
  id: 'postsPerPage',
  label: 'Posts Per Page',
  description: "Number of post to show per page"
}, {
  val: '',
  multiple: false,
  id: 'paged',
  label: 'Paged',
  description: "Pagination start with"
}, {
  val: '',
  multiple: false,
  id: 'offset',
  label: 'Offset',
  description: "Number of post to displace or pass over"
}, {
  val: '',
  multiple: false,
  id: 'postsPerArchivePage',
  label: 'Posts Per Archive Page',
  description: ""
}, {
  val: '',
  multiple: false,
  id: 'ignoreStickyPosts',
  label: 'Ignore Sticky Posts',
  description: "Ignore post from post query",
  isPro: true
}, {
  val: '',
  multiple: false,
  id: 'metaKey',
  label: 'Meta Key',
  description: "Post query by custom field key"
}, {
  val: '',
  multiple: false,
  id: 'metaValue',
  label: 'Meta Value',
  description: "Post query by custom field value"
}, {
  val: '',
  multiple: false,
  id: 'metaValueNum',
  label: 'Meta Value Num',
  description: "Post query by custom field value for number types"
}, {
  val: '',
  multiple: false,
  id: 'metaCompare',
  label: 'Meta Compare',
  description: "Meta query compare"
}, {
  val: [],
  multiple: false,
  id: 'metaQuery',
  label: 'Meta Query',
  description: "Advance meta fields query",
  isPro: true
}, {
  val: 'readable',
  multiple: false,
  id: 'perm',
  label: 'Perm',
  description: "User permission parameter"
}, {
  val: [],
  multiple: false,
  id: 'postMimeType',
  label: 'Post Mime Type',
  description: "Post query by allwed post mime types"
}, {
  val: false,
  multiple: false,
  id: 'cacheResults',
  label: 'Cache Results',
  description: "Enable Post information cache"
}, {
  val: false,
  multiple: false,
  id: 'updatePostMetaCache',
  label: 'Update Post Meta Cache',
  description: "Enable Post meta information cache"
}, {
  val: false,
  multiple: false,
  id: 'updatePostTermCache',
  label: 'Update Post Term Cache',
  description: "Enable Post term information cache"
}];
let queryPrams = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_0__.applyFilters)('queryPrams', queryPramsBasic);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (queryPrams);

/***/ }),

/***/ "./src/blocks/post-grid/tutorials-links.js":
/*!*************************************************!*\
  !*** ./src/blocks/post-grid/tutorials-links.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var tutorialsLinks = [];
fetch("https://getpostgrid.com/wp-json/wp/v2/docs", {
  method: "GET",
  headers: {
    "Content-Type": "application/json;charset=utf-8"
  }
}).then(response => {
  if (response.ok && response.status < 400) {
    response.json().then(data => {
      data.map(x => {
        tutorialsLinks.push({
          label: x.title.rendered,
          url: x.link,
          isVideo: false
        });
      });
    });
  }
}).catch(_error => {//this.saveAsStatus = 'error';
  // handle the error
}); // const tutorialsLinks = [
//     { label: 'How to add columns?', url: '', isVideo: false, },
//     { label: 'How to disable pagination?', url: '', isVideo: false, },
//     { label: 'How to customize pagination style?', url: '', isVideo: false, },
//     { label: 'How to display normal pagination?', url: '', isVideo: false, },
//     { label: 'How to display next-previous pagination?', url: '', isVideo: false, },
//     { label: 'How to display ajax pagination?', url: '', isVideo: false, },
//     { label: 'How to enable infinte loading?', url: '', isVideo: false, },
//     { label: 'How to query post by post status?', url: '', isVideo: false, },
//     { label: 'How to add rows?', url: '', isVideo: false, },
//     { label: 'How to enable load more?', url: '', isVideo: false, },
//     { label: 'How to enable lazy loading?', url: '', isVideo: true, },
//     { label: 'How to custoize post grid container', url: '', isVideo: false, },
//     { label: 'How to customize post grid loop wrapper?', url: '', isVideo: false, },
//     { label: 'How to query post by post types?', url: '', isVideo: false, },
//     { label: 'How to query posts by custom post types?', url: '', isVideo: false, },
//     { label: 'How to query post by categories?', url: '', isVideo: false, },
//     { label: 'How to query post by tags?', url: '', isVideo: false, },
//     { label: 'How to query post by custom taxonomies & terms?', url: '', isVideo: false, },
//     { label: 'How to query post by custom meta fields?', url: '', isVideo: false, },
//     { label: 'How to query post by search parameter?', url: '', isVideo: false, },
//     { label: 'How to query post by order & orderby?', url: '', isVideo: false, },
//     { label: 'How to query post by date?', url: '', isVideo: false, },
//     { label: 'How to query post by author?', url: '', isVideo: false, },
//     { label: 'How to query post by post ids?', url: '', isVideo: false, },
//     { label: 'How to query post by post parents?', url: '', isVideo: false, },
//     { label: 'How to query post by post passwords?', url: '', isVideo: false, },
//     { label: 'How to customize layouts?', url: '', isVideo: false, },
//     { label: 'How to customize grid layout?', url: '', isVideo: false, },
//     { label: 'How to create complex grid layout?', url: '', isVideo: false, },
// ];

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (tutorialsLinks);

/***/ }),

/***/ "./src/blocks/post-meta/index.js":
/*!***************************************!*\
  !*** ./src/blocks/post-meta/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");













const {
  RawHTML
} = wp.element;





var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_3__.registerBlockType)("post-grid/post-meta", {
  title: "Post Meta",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      "aria-hidden": "true",
      focusable: "false"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M20 4H4v1.5h16V4zm-2 9h-3c-1.1 0-2 .9-2 2v3c0 1.1.9 2 2 2h3c1.1 0 2-.9 2-2v-3c0-1.1-.9-2-2-2zm.5 5c0 .3-.2.5-.5.5h-3c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v3zM4 9.5h9V8H4v1.5zM9 13H6c-1.1 0-2 .9-2 2v3c0 1.1.9 2 2 2h3c1.1 0 2-.9 2-2v-3c0-1.1-.9-2-2-2zm.5 5c0 .3-.2.5-.5.5H6c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v3z",
      "fill-rule": "evenodd",
      "clip-rule": "evenodd"
    }))
  },
  attributes: {
    template: {
      "type": "string",
      "default": '<div>Output HTML: {metaValue}</div>'
    },
    wrapper: {
      type: 'object',
      default: {
        options: {
          class: 'inline-block',
          tag: 'div'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    meta: {
      type: 'object',
      default: {
        options: {
          key: '',
          type: 'string',

          /*string, acfImage, acfFile, , , , acfUser*/
          prefix: '',
          postfix: ''
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var meta = attributes.meta;
    var template = attributes.template;
    var wrapper = attributes.wrapper;
    var items = attributes.items;
    var blockCssY = attributes.blockCssY;
    var customCss = attributes.customCss;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    const [metaValue, setMetaValue] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
    const [metaHtml, setMetaHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('');
    const [metaArgs, setMetaArgs] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(null); // Wrapper CSS Class Selectors

    const itemWrapSelector = blockClass;
    const itemSelector = blockClass + ' .item';
    const postCountSelector = blockClass + ' .postCount';
    const [filterArgs, setfilterArgs] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({
      string: {
        label: 'String',
        value: 'string'
      },
      acfImage: {
        label: 'ACF Image',
        value: 'acfImage',
        isPro: true
      },
      acfFile: {
        label: 'ACF File',
        value: 'acfFile',
        isPro: true
      },
      acfTaxonomy: {
        label: 'ACF Taxonomy',
        value: 'acfTaxonomy',
        isPro: true
      },
      acfPostObject: {
        label: 'ACF Post Object',
        value: 'acfPostObject',
        isPro: true
      },
      acfPageLink: {
        label: 'ACF Page Link',
        value: 'acfPageLink',
        isPro: true
      },
      acfLink: {
        label: 'ACF Link',
        value: 'acfLink',
        isPro: true
      },
      acfUser: {
        label: 'ACF User',
        value: 'acfUser',
        isPro: true
      },
      acfButtonGroup: {
        label: 'ACF Button Group',
        value: 'acfButtonGroup'
      }
    });
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default()({
        path: '/post-grid/v2/get_post_meta',
        method: 'POST',
        data: {
          postId: postId,
          meta_key: meta.options.key,
          type: meta.options.type,
          template: template
        }
      }).then(res => {
        if (meta.options.type == 'acfImage' || meta.options.type == 'acfFile') {
          setMetaHtml(res.html);
          setMetaArgs(res.args);
        } else {
          setMetaHtml(res.html);
          setMetaArgs(res.args);
        }
      });
    }, [meta, template]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      if (metaValue != null) {
        if (meta.options.type == 'string') {
          setMetaValue(res.meta_value);
        } else if (meta.options.type == 'acfImage') {
          setMetaHtml(res.html);
        }
      }
    }, [template]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ postTitle: postTitle });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
    }, [clientId]);
    var breakPointList = [];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    const CustomTag = `${wrapper.options.tag}`;

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [items]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    const post = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_5__.useSelect)(select => select('core').getEntityRecord('postType', context['postType'], context['postId']));
    const termstaxonomy = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_5__.useSelect)(select => select('core').getEntityRecords('taxonomy', 'category', [4, 5]));

    const MyDropdown = () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
          title: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].name : '',
          variant: "secondary",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, {
          className: "text-lg "
        }, _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon : '<span class="icon-responsive font-bold"></span>'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, breakPointList.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: ' text-lg font-bold border-b inline-block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            setPreviewDeviceType(x.value);
            var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
            asdsdsd.then(res => {
              setBreakPointX(res.breakpoint);
              generateBlockCssY();
            });
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          class: "icon-close"
        })), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, null, x.icon));
      }))
    }));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.textAlign,
      onChange: nextAlign => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = nextAlign;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = nextAlign;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-3"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: {
            styles: wrapper.styles,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: wrapper.options.class,
      onChange: newVal => {
        var options = { ...wrapper.options,
          class: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Meta Key",
      initialOpen: true
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Meta Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      placeholder: "Meta key",
      value: meta.options.key,
      onChange: newVal => {
        var options = { ...meta.options,
          key: newVal
        };
        setAttributes({
          meta: { ...meta,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Meta Key Type "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: filterArgs,
      buttonTitle: "Choose",
      onChange: (option, index) => {
        var options = { ...meta.options,
          type: option.value
        };
        setAttributes({
          meta: { ...meta,
            options: options
          }
        });
      },
      values: "",
      value: meta.options.type
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      className: "my-3",
      for: ""
    }, "Template"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      value: template,
      onChange: newVal => {
        setAttributes({
          template: newVal
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Parameters"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: ""
    }, metaArgs != undefined && Object.entries(metaArgs).map((arg, i) => {
      var key = arg[0];
      var val = arg[1];
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2 bg-gray-300"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        onClick: ev => {
          var target = ev.target;
        },
        className: "bg-gray-500 px-3 py-2 text-white"
      }, key), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "px-3 py-2"
      }, val));
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Items Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, itemWrapSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, meta.options.key.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      placeholder: "Meta key",
      value: meta.options.key,
      onChange: newVal => {
        var options = { ...meta.options,
          key: newVal
        };
        setAttributes({
          meta: { ...meta,
            options: options
          }
        });
      }
    }), wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(CustomTag, {
      className: [blockId]
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, null, metaHtml)), wrapper.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: [blockId]
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, null, metaHtml)))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-tags/index.js":
/*!***************************************!*\
  !*** ./src/blocks/post-tags/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");














const {
  RawHTML
} = wp.element;









var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__.registerBlockType)("post-grid/post-tags", {
  title: "Post Tags",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M38 209.5C38 206.739 40.2386 204.5 43 204.5H483C485.761 204.5 488 206.739 488 209.5V259.5C488 262.261 485.761 264.5 483 264.5H43C40.2386 264.5 38 262.261 38 259.5V209.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M38 315.5C38 312.739 40.2386 310.5 43 310.5H365C367.761 310.5 370 312.739 370 315.5V365.5C370 368.261 367.761 370.5 365 370.5H43C40.2386 370.5 38 368.261 38 365.5V315.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M129.861 115.454C128.257 117.058 127.356 119.233 127.356 121.501C127.356 123.769 128.257 125.944 129.861 127.548C131.465 129.151 133.64 130.052 135.908 130.052C138.176 130.052 140.351 129.151 141.955 127.548C143.558 125.944 144.459 123.769 144.459 121.501C144.459 119.233 143.558 117.058 141.955 115.454C140.351 113.85 138.176 112.949 135.908 112.949C133.64 112.949 131.465 113.85 129.861 115.454ZM71.4472 153.066C68.5447 153.066 65.6018 151.977 63.3443 149.72C61.1271 147.503 59.9983 144.6 60.0386 141.657V101.344C60.0386 98.4418 61.1271 95.4989 63.3443 93.2817C65.5615 91.0645 68.4641 89.9357 71.4472 89.9357L127.805 89.9357C130.788 89.9357 133.69 91.0645 135.908 93.2817L156.064 113.438C160.539 117.913 160.539 125.089 156.064 129.563L135.908 149.72C133.69 151.937 130.788 153.066 127.885 153.066H71.4472ZM110.712 161.128V169.191H55.322C52.3792 169.231 49.4363 168.062 47.2191 165.845C45.0019 163.628 43.8731 160.725 43.8731 157.823L43.8731 114.446L51.9357 114.446L52.2582 160.806L110.712 161.128Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    items: {
      type: 'object',
      default: {
        options: {
          prefix: '',
          postfix: '',
          maxCount: 99,
          postCount: false,
          class: ' item',
          linkTarget: '',
          linkAttr: []
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: '',
          position: 'beforeFronttext',

          /*before, after, prefix, postfix */
          class: 'icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    separator: {
      type: 'object',
      default: {
        options: {
          class: 'inline-block',
          text: ', '
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    frontText: {
      type: 'object',
      default: {
        options: {
          text: 'Tags: ',
          class: 'inline-block'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var items = attributes.items;
    var separator = attributes.separator;
    var frontText = attributes.frontText;
    var icon = attributes.icon;
    var blockCssY = attributes.blockCssY;
    var customCss = attributes.customCss;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint()); // Wrapper CSS Class Selectors

    const itemWrapSelector = blockClass;
    const itemSelector = blockClass + ' .item';
    const itemTitleSelector = blockClass + ' .termTitle';
    const itemSeparatorSelector = blockClass + ' .separator';
    const frontTextSelector = blockClass + ' .frontText';
    const postCountSelector = blockClass + ' .postCount';
    const iconSelector = blockClass + ' .icon';
    var breakPointList = [];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    var dummyCats = [{
      "id": 1,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Tag 1",
      "slug": "tag-1",
      "taxonomy": "tag_tax"
    }, {
      "id": 2,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Tag 2",
      "slug": "tag-2",
      "taxonomy": "tag_tax"
    }, {
      "id": 3,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Tag 3",
      "slug": "tag-3",
      "taxonomy": "tag_tax"
    }, {
      "id": 4,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Tag 4",
      "slug": "tag-4",
      "taxonomy": "tag_tax"
    }, {
      "id": 5,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Tag 5",
      "slug": "tag-5",
      "taxonomy": "tag_tax"
    }, {
      "id": 6,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Tag 6",
      "slug": "tag-6",
      "taxonomy": "tag_tax"
    }];
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ postTitle: postTitle });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
    }, [clientId]);
    const [categoryCount, setcategoryCount] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(0); // Using the hook.

    const [postCategoriesData, setPostCategoriesData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [categories, setCategories] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [postCategoriesX, setPostCategoriesX] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__.useEntityProp)('postType', postType, 'tags', postId);
    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setPostCategoriesData([]);
      setCategories([]);
      setcategoryCount(categories.length - 1);

      if (postCategoriesX != undefined) {
        for (x in postCategoriesX) {
          var catId = postCategoriesX[x];
          var assd = x;

          if (x) {
            _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
              path: '/wp/v2/tags/' + catId,
              method: 'GET'
            }).then(res => {
              setPostCategoriesData(current => [...current, res]);
              setCategories(current => [...current, res]);
            });
          }
        }
      } else {
        setPostCategoriesData(dummyCats);
        setCategories(dummyCats);
      }
    }, [postCategoriesX]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var asdasd = postCategoriesData.slice(0, items.options.maxCount);
      setCategories(asdasd);
    }, [postCategoriesData]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      if (postCategoriesX != undefined && postCategoriesX.length > 0) {
        var maxCount = items.options.maxCount.length > 0 ? items.options.maxCount : 99;
        setcategoryCount(categories.length - 1);
        var asdasd = postCategoriesData.slice(0, maxCount);
        setCategories(asdasd);
      } else {
        var asdasd = dummyCats.slice(0, maxCount);
        setCategories(asdasd);
      }
    }, [items]);

    function paddingControlItems(nextValues) {
      var responsive = items.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...items.styles,
        padding: responsive
      };
      setAttributes({
        items: { ...items,
          styles: styles
        }
      });
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[itemSelector]['padding-top'] != undefined ? blockCssY.items[itemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[itemSelector]['padding-right'] != undefined ? blockCssY.items[itemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[itemSelector]['padding-bottom'] != undefined ? blockCssY.items[itemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[itemSelector]['padding-left'] != undefined ? blockCssY.items[itemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};

        if (fontSizeX[breakPointX] == undefined) {
          fontSizeX[breakPointX] = '';
        }

        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function marginControlItems(nextValues) {
      var responsive = items.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...items.styles,
        margin: responsive
      };
      setAttributes({
        items: { ...items,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[itemSelector]['margin-top'] != undefined ? blockCssY.items[itemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[itemSelector]['margin-right'] !== undefined ? blockCssY.items[itemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[itemSelector]['margin-bottom'] !== undefined ? blockCssY.items[itemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[itemSelector]['margin-left'] !== undefined ? blockCssY.items[itemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypo(typoX) {
      setAttributes({
        items: { ...items,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[itemSelector]['font-size'] != undefined ? blockCssY.items[itemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[itemSelector]['line-height'] != undefined ? blockCssY.items[itemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[itemSelector]['letter-spacing'] != undefined ? blockCssY.items[itemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypoFrontText(typoX) {
      setAttributes({
        items: { ...items,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[itemSelector]['font-size'] != undefined ? blockCssY.items[itemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[itemSelector]['line-height'] != undefined ? blockCssY.items[itemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[itemSelector]['letter-spacing'] != undefined ? blockCssY.items[itemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
      generateBlockCssY();
    }, [items]);

    var linkAttrObj = () => {
      var sdsd = {};
      items.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    const post = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_6__.useSelect)(select => select('core').getEntityRecord('postType', context['postType'], context['postId']));
    const termstaxonomy = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_6__.useSelect)(select => select('core').getEntityRecords('taxonomy', 'category', [4, 5]));

    const MyDropdown = () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
          title: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].name : '',
          variant: "secondary",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, {
          className: "text-lg "
        }, _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon : '<span class="icon-responsive font-bold"></span>'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, breakPointList.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: ' text-lg font-bold border-b inline-block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            setPreviewDeviceType(x.value);
            var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
            asdsdsd.then(res => {
              setBreakPointX(res.breakpoint);
              generateBlockCssY();
            });
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          class: "icon-close"
        })), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, x.icon));
      }))
    }));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var styles = { ...postfix.styles,
          textAlign: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            styles: styles
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: wrapper.options.class,
      onChange: newVal => {
        var options = { ...wrapper.options,
          class: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_17__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[itemWrapSelector] = { ...blockCssY.items[itemWrapSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      label: "Display Post Count",
      help: items.options.postCount ? 'Post Count Enabled' : 'Post Count Disabled',
      checked: items.options.postCount ? true : false,
      onChange: e => {
        var options = { ...items.options,
          postCount: items.options.postCount ? false : true
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Item Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.class,
      onChange: newVal => {
        var options = { ...items.options,
          class: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Max Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.maxCount,
      onChange: newVal => {
        var options = { ...items.options,
          maxCount: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...items.options,
          linkTarget: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.prefix,
      onChange: newVal => {
        var options = { ...items.options,
          prefix: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.postfix,
      onChange: newVal => {
        var options = { ...items.options,
          postfix: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = items.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...items.options,
          linkAttr: sdsd
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), items.options.linkAttr.length > 0 && items.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: items.options.linkAttr[i].id,
        onChange: newVal => {
          items.options.linkAttr[i].id = newVal;
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          items.options.linkAttr[i].val = newVal;
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          items.options.linkAttr.splice(i, 1);
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      })));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: items.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          color: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            color: newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            color: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: items.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'background-color': newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'background-color': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: items.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: items.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: items.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: items
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_18__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon position"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Front text',
        value: 'beforeFronttext'
      }, {
        label: 'After Front text',
        value: 'afterFronttext'
      }, {
        label: 'Before Items',
        value: 'beforeItems'
      }, {
        label: 'After Items',
        value: 'afterItems'
      }, {
        label: 'Before Each Items',
        value: 'beforeItem'
      }, {
        label: 'After Each Items',
        value: 'afterItem'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Front Text",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: frontText.options.text,
      onChange: newVal => {
        var options = { ...frontText.options,
          text: newVal
        };
        setAttributes({
          frontText: { ...frontText,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: frontText.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          color: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[frontTextSelector] == undefined) {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            color: newValuesObj
          };
        } else {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            color: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            frontText: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: frontText.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[frontTextSelector] == undefined) {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            'background-color': newValuesObj
          };
        } else {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            'background-color': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            frontText: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: frontText.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypoFrontText,
      setAttributes: setAttributes,
      obj: frontText
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Separator",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Separator"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: separator.options.text,
      onChange: newVal => {
        var options = { ...separator.options,
          text: newVal
        };
        setAttributes({
          separator: { ...separator,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: ""
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Items Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemWrapSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Caetgory Items"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemSelector, '{}', " ")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, ".pg-postCategories a", '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Separator"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemSeparatorSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, frontTextSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Post Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postCountSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_15__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_16__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, categories.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, "No Tags Found"), categories.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, icon.options.position == 'beforeFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "frontText inline-block"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, frontText.options.text)), icon.options.position == 'afterFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), icon.options.position == 'beforeItems' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), categories.map((x, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        onClick: ev => ev.preventDefault(),
        target: items.options.linkTarget,
        title: x.name
      }, linkAttrItems, {
        className: items.options.class,
        href: x.link
      }), icon.options.position == 'beforeItem' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: icon.options.class,
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "termTitle"
      }, items.options.prefix, x.name, items.options.postfix), items.options.postCount == true && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "postCount"
      }, "(", x.count, ")"), icon.options.position == 'afterItem' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: icon.options.class,
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), categories.length > index + 1 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "separator",
        dangerouslySetInnerHTML: {
          __html: separator.options.text
        }
      }));
    }), icon.options.position == 'afterItems' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-taxonomies/index.js":
/*!*********************************************!*\
  !*** ./src/blocks/post-taxonomies/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");














const {
  RawHTML
} = wp.element;










var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__.registerBlockType)("post-grid/post-taxonomies", {
  title: "Post Taxonomies",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M38 209.5C38 206.739 40.2386 204.5 43 204.5H483C485.761 204.5 488 206.739 488 209.5V259.5C488 262.261 485.761 264.5 483 264.5H43C40.2386 264.5 38 262.261 38 259.5V209.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M38 315.5C38 312.739 40.2386 310.5 43 310.5H365C367.761 310.5 370 312.739 370 315.5V365.5C370 368.261 367.761 370.5 365 370.5H43C40.2386 370.5 38 368.261 38 365.5V315.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M129.861 115.454C128.257 117.058 127.356 119.233 127.356 121.501C127.356 123.769 128.257 125.944 129.861 127.548C131.465 129.151 133.64 130.052 135.908 130.052C138.176 130.052 140.351 129.151 141.955 127.548C143.558 125.944 144.459 123.769 144.459 121.501C144.459 119.233 143.558 117.058 141.955 115.454C140.351 113.85 138.176 112.949 135.908 112.949C133.64 112.949 131.465 113.85 129.861 115.454ZM71.4472 153.066C68.5447 153.066 65.6018 151.977 63.3443 149.72C61.1271 147.503 59.9983 144.6 60.0386 141.657V101.344C60.0386 98.4418 61.1271 95.4989 63.3443 93.2817C65.5615 91.0645 68.4641 89.9357 71.4472 89.9357L127.805 89.9357C130.788 89.9357 133.69 91.0645 135.908 93.2817L156.064 113.438C160.539 117.913 160.539 125.089 156.064 129.563L135.908 149.72C133.69 151.937 130.788 153.066 127.885 153.066H71.4472ZM110.712 161.128V169.191H55.322C52.3792 169.231 49.4363 168.062 47.2191 165.845C45.0019 163.628 43.8731 160.725 43.8731 157.823L43.8731 114.446L51.9357 114.446L52.2582 160.806L110.712 161.128Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          class: ''
        },
        styles: {
          display: {},
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    taxonomies: {
      type: 'object',
      default: {
        options: {
          taxName: ''
        }
      }
    },
    items: {
      type: 'object',
      default: {
        options: {
          prefix: '',
          postfix: '',
          maxCount: 99,
          postCount: false,
          class: ' item',
          linkTarget: '',
          linkAttr: []
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: '',
          position: 'beforeFronttext',

          /*before, after, prefix, postfix */
          class: 'icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    separator: {
      type: 'object',
      default: {
        options: {
          class: 'inline-block',
          text: ', '
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    frontText: {
      type: 'object',
      default: {
        options: {
          text: 'Tags: ',
          class: 'inline-block'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var items = attributes.items;
    var separator = attributes.separator;
    var frontText = attributes.frontText;
    var icon = attributes.icon;
    var blockCssY = attributes.blockCssY;
    var customCss = attributes.customCss;
    var taxonomies = attributes.taxonomies;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [postObjects, setPostObjects] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Wrapper CSS Class Selectors

    const itemWrapSelector = blockClass;
    const itemSelector = blockClass + ' .item';
    const itemTitleSelector = blockClass + ' .termTitle';
    const itemSeparatorSelector = blockClass + ' .separator';
    const frontTextSelector = blockClass + ' .frontText';
    const postCountSelector = blockClass + ' .postCount';
    const iconSelector = blockClass + ' .icon';
    var breakPointList = [];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    const [categoryCount, setcategoryCount] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(0); // Using the hook.

    const [postCategoriesData, setPostCategoriesData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [categories, setCategories] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [postCategoriesX, setPostCategoriesX] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__.useEntityProp)('postType', postType, taxonomies.options.taxName, postId);
    var dummyCats = [{
      "id": 1,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 1",
      "slug": "category-1",
      "taxonomy": "category_tax"
    }, {
      "id": 2,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 2",
      "slug": "category-2",
      "taxonomy": "category_tax"
    }, {
      "id": 3,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 3",
      "slug": "category-3",
      "taxonomy": "category_tax"
    }, {
      "id": 4,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 4",
      "slug": "category-4",
      "taxonomy": "category_tax"
    }, {
      "id": 5,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 5",
      "slug": "category-5",
      "taxonomy": "category_tax"
    }, {
      "id": 6,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 6",
      "slug": "category-6",
      "taxonomy": "category_tax"
    }];
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setPostCategoriesData([]);
      setCategories([]);
      setcategoryCount(categories.length - 1);

      if (postCategoriesX != undefined) {
        for (x in postCategoriesX) {
          var catId = postCategoriesX[x];
          var assd = x;

          if (x) {
            _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
              path: '/wp/v2/' + taxonomies.options.taxName + '/' + catId,
              method: 'GET'
            }).then(res => {
              setPostCategoriesData(current => [...current, res]);
              setCategories(current => [...current, res]);
            });
          }
        }
      } else {
        setPostCategoriesData(dummyCats);
        setCategories(dummyCats);
      }
    }, [postCategoriesX]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var asdasd = postCategoriesData.slice(0, items.options.maxCount);
      setCategories(asdasd);
    }, [postCategoriesData]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var maxCount = items.options.maxCount.length > 0 ? items.options.maxCount : 99;

      if (postCategoriesX != undefined && postCategoriesX.length > 0) {
        setcategoryCount(categories.length - 1);
        var asdasd = postCategoriesData.slice(0, maxCount);
        setCategories(asdasd);
      } else {
        var asdasd = dummyCats.slice(0, maxCount);
        setCategories(asdasd);
      }
    }, [items]);
    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);

    function setTaxonomy(option, index) {
      var options = { ...taxonomies.options,
        taxName: option.id
      };
      setAttributes({
        taxonomies: { ...taxonomies,
          options: options
        }
      }); // var attrExist = false;
      // var data = queryPrams[index];
      // var multiple = data.multiple;
      // var isExist = queryArgs.items.map((item) => {
      //   if (item.id == index) {
      //     return true;
      //   }
      // })
      // var items = queryArgs.items.concat([data])
      // setAttributes({ queryArgs: { items: items } });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ postTitle: postTitle });
      // setAttributes({ wrapper: wrapper });

      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
        path: '/post-grid/v2/post_type_objects',
        method: 'POST',
        data: {
          postTypes: [postType]
        }
      }).then(res => {
        setPostObjects(res);
      });
      generateBlockCssY();
    }, [clientId]);

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};

        if (fontSizeX[breakPointX] == undefined) {
          fontSizeX[breakPointX] = '';
        }

        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControlItems(nextValues) {
      var responsive = items.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...items.styles,
        padding: responsive
      };
      setAttributes({
        items: { ...items,
          styles: styles
        }
      });
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[itemSelector]['padding-top'] != undefined ? blockCssY.items[itemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[itemSelector]['padding-right'] != undefined ? blockCssY.items[itemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[itemSelector]['padding-bottom'] != undefined ? blockCssY.items[itemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[itemSelector]['padding-left'] != undefined ? blockCssY.items[itemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlItems(nextValues) {
      var responsive = items.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...items.styles,
        margin: responsive
      };
      setAttributes({
        items: { ...items,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[itemSelector]['margin-top'] != undefined ? blockCssY.items[itemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[itemSelector]['margin-right'] !== undefined ? blockCssY.items[itemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[itemSelector]['margin-bottom'] !== undefined ? blockCssY.items[itemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[itemSelector]['margin-left'] !== undefined ? blockCssY.items[itemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypo(typoX) {
      setAttributes({
        items: { ...items,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[itemSelector]['font-size'] != undefined ? blockCssY.items[itemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[itemSelector]['line-height'] != undefined ? blockCssY.items[itemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[itemSelector]['letter-spacing'] != undefined ? blockCssY.items[itemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypoFrontText(typoX) {
      setAttributes({
        items: { ...items,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[itemSelector]['font-size'] != undefined ? blockCssY.items[itemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[itemSelector]['line-height'] != undefined ? blockCssY.items[itemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[itemSelector]['letter-spacing'] != undefined ? blockCssY.items[itemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
      generateBlockCssY();
    }, [items]);

    var linkAttrObj = () => {
      var sdsd = {};
      items.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    const post = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_6__.useSelect)(select => select('core').getEntityRecord('postType', context['postType'], context['postId']));
    const termstaxonomy = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_6__.useSelect)(select => select('core').getEntityRecords('taxonomy', 'category', [4, 5]));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var styles = { ...postfix.styles,
          textAlign: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            styles: styles
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Select Taxonomy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: postObjects,
      buttonTitle: "Choose",
      onChange: setTaxonomy,
      values: taxonomies.options.taxName
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Taxonomy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: taxonomies.options.taxName,
      onChange: newVal => {
        var options = { ...taxonomies.options,
          taxName: newVal
        };
        setAttributes({
          taxonomies: { ...taxonomies,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: wrapper.options.class,
      onChange: newVal => {
        var options = { ...wrapper.options,
          class: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[itemWrapSelector] = { ...blockCssY.items[itemWrapSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      label: "Display Post Count",
      help: items.options.postCount ? 'Post Count Enabled' : 'Post Count Disabled',
      checked: items.options.postCount ? true : false,
      onChange: e => {
        var options = { ...items.options,
          postCount: items.options.postCount ? false : true
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Item Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.class,
      onChange: newVal => {
        var options = { ...items.options,
          class: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Max Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.maxCount,
      onChange: newVal => {
        var options = { ...items.options,
          maxCount: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...items.options,
          linkTarget: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.prefix,
      onChange: newVal => {
        var options = { ...items.options,
          prefix: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.postfix,
      onChange: newVal => {
        var options = { ...items.options,
          postfix: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = items.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...items.options,
          linkAttr: sdsd
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), items.options.linkAttr.length > 0 && items.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: items.options.linkAttr[i].id,
        onChange: newVal => {
          items.options.linkAttr[i].id = newVal;
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          items.options.linkAttr[i].val = newVal;
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          items.options.linkAttr.splice(i, 1);
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      })));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: items.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          color: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            color: newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            color: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: items.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'background-color': newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'background-color': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: items.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: items.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: items.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: items
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_19__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon position"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Front text',
        value: 'beforeFronttext'
      }, {
        label: 'After Front text',
        value: 'afterFronttext'
      }, {
        label: 'Before Items',
        value: 'beforeItems'
      }, {
        label: 'After Items',
        value: 'afterItems'
      }, {
        label: 'Before Each Items',
        value: 'beforeItem'
      }, {
        label: 'After Each Items',
        value: 'afterItem'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Front Text",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: frontText.options.text,
      onChange: newVal => {
        var options = { ...frontText.options,
          text: newVal
        };
        setAttributes({
          frontText: { ...frontText,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: frontText.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          color: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[frontTextSelector] == undefined) {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            color: newValuesObj
          };
        } else {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            color: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            frontText: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: frontText.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[frontTextSelector] == undefined) {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            'background-color': newValuesObj
          };
        } else {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            'background-color': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            frontText: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: frontText.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypoFrontText,
      setAttributes: setAttributes,
      obj: frontText
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Separator",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Separator"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: separator.options.text,
      onChange: newVal => {
        var options = { ...separator.options,
          text: newVal
        };
        setAttributes({
          separator: { ...separator,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: ""
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Items Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemWrapSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Caetgory Items"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemSelector, '{}', " ")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, ".pg-postCategories a", '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Separator"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemSeparatorSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, frontTextSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Post Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postCountSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_17__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, taxonomies.options.taxName.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Select Taxonomy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: postObjects,
      buttonTitle: "Choose",
      onChange: setTaxonomy,
      values: taxonomies.options.taxName
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Taxonomy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: taxonomies.options.taxName,
      onChange: newVal => {
        var options = { ...taxonomies.options,
          taxName: newVal
        };
        setAttributes({
          taxonomies: { ...taxonomies,
            options: options
          }
        });
      }
    }))), taxonomies.options.taxName.length > 0 && categories.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, "No Terms Found"), taxonomies.options.taxName.length > 0 && categories.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, icon.options.position == 'beforeFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "frontText inline-block"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, frontText.options.text)), icon.options.position == 'afterFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), icon.options.position == 'beforeItems' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), categories.map((x, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        onClick: ev => ev.preventDefault(),
        target: items.options.linkTarget,
        title: x.name
      }, linkAttrItems, {
        className: items.options.class,
        href: x.link
      }), icon.options.position == 'beforeItem' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: icon.options.class,
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "termTitle"
      }, items.options.prefix, x.name, items.options.postfix), items.options.postCount == true && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "postCount"
      }, "(", x.count, ")"), categories.length > index + 1 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "separator"
      }, separator.options.text, " "), icon.options.position == 'afterItem' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: icon.options.class,
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), categories.length > index + 1 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "separator",
        dangerouslySetInnerHTML: {
          __html: separator.options.text
        }
      }));
    }), icon.options.position == 'afterItems' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/post-title/index.js":
/*!****************************************!*\
  !*** ./src/blocks/post-title/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/hooks */ "@wordpress/hooks");
/* harmony import */ var _wordpress_hooks__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_hooks__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _components_pro_wrapper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/pro-wrapper */ "./src/components/pro-wrapper/index.js");
/* harmony import */ var _components_css_text_align__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/css-text-align */ "./src/components/css-text-align/index.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");














const {
  RawHTML
} = wp.element;












var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/post-title", {
  title: "Post Title",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 95C25 92.2386 27.2386 90 30 90H470C472.761 90 475 92.2386 475 95V145C475 147.761 472.761 150 470 150H30C27.2386 150 25 147.761 25 145V95Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 234C25 231.239 27.2386 229 30 229H470C472.761 229 475 231.239 475 234V254C475 256.761 472.761 259 470 259H30C27.2386 259 25 256.761 25 254V234Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 298C25 295.239 27.2386 293 30 293H470C472.761 293 475 295.239 475 298V318C475 320.761 472.761 323 470 323H30C27.2386 323 25 320.761 25 318V298Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 362C25 359.239 27.2386 357 30 357H366C368.761 357 371 359.239 371 362V382C371 384.761 368.761 387 366 387H30C27.2386 387 25 384.761 25 382V362Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'h2',
          class: ''
        },
        styles: {
          display: {},
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    postTitle: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          limitBy: '',

          /*word, character*/
          limitCount: 99,
          isLink: true,
          linkTo: 'postUrl',

          /*postUrl, homeUrl, authorUrl, authorLink, mailTo, custom, customField */
          linkToAuthorMeta: '',
          linkToCustomMeta: '',
          linkTarget: '_blank',
          linkAttr: [],
          customUrl: '',
          class: ''
        },
        styles: {
          textAlign: {},
          display: {},
          width: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontFamily: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontWeight: {},
          textTransform: {},
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    prefix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    postfix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    let postTitle = attributes.postTitle;
    var wrapper = attributes.wrapper;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var prefix = attributes.prefix;
    var postfix = attributes.postfix;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [customTags, setCustomTags] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [linkPickerPosttitle, setLinkPickerPosttitle] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    var linkToArgsBasic = {
      postUrl: {
        label: 'Post URL',
        value: 'postUrl'
      },
      homeUrl: {
        label: 'Home URL',
        value: 'homeUrl'
      },
      authorUrl: {
        label: 'Author URL',
        value: 'authorUrl'
      },
      authorLink: {
        label: 'Author Link',
        value: 'authorLink'
      },
      authorMail: {
        label: 'Author Mail',
        value: 'authorMail',
        isPro: true
      },
      authorMeta: {
        label: 'Author Meta',
        value: 'authorMeta',
        isPro: true
      },
      customField: {
        label: 'Custom Field',
        value: 'customField',
        isPro: true
      },
      customUrl: {
        label: 'Custom URL',
        value: 'customUrl',
        isPro: true
      }
    };
    let linkToArgs = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_7__.applyFilters)('linkToArgs', linkToArgsBasic);
    var limitByArgsBasic = {
      none: {
        label: 'Choose..',
        value: ''
      },
      word: {
        label: 'Word',
        value: 'word'
      },
      character: {
        label: 'Character',
        value: 'character',
        isPro: true
      }
    };
    let limitByArgs = (0,_wordpress_hooks__WEBPACK_IMPORTED_MODULE_7__.applyFilters)('limitByArgs', limitByArgsBasic);
    const [currentPostTitle, setCurrentPostTitle] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'title', postId);
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ postTitle: postTitle });
      // setAttributes({ wrapper: wrapper });

      generateBlockCssY();
      customTags['currentYear'] = '2022';
      customTags['currentMonth'] = '07';
      customTags['currentDay'] = '27';
      customTags['currentDate'] = '27';
      customTags['currentTime'] = '27';
      customTags['postPublishDate'] = '123';
      customTags['postModifiedDate'] = '123';
      customTags['termId'] = '';
      customTags['termTitle'] = '';
      customTags['termDescription'] = '';
      customTags['termPostCount'] = '';
      customTags['postTagTitle'] = 'First Tag Title';
      customTags['postTagsTitle'] = 'First Tag Title';
      customTags['postCategoryTitle'] = 'First Category Title';
      customTags['postCategoriesTitle'] = 'First Categories Title';
      customTags['postTermTitle'] = 'First Term Title';
      customTags['postTermsTitle'] = 'List of all terms title';
      customTags['postId'] = '123';
      customTags['postStatus'] = '123';
      customTags['authorId'] = '123';
      customTags['authorName'] = 'Nur Hasan';
      customTags['authorFirstName'] = 'Nur';
      customTags['authorLastName'] = 'Hasan';
      customTags['authorDescription'] = 'Hasan';
      customTags['excerpt'] = 'Here is the post excerpt';
      customTags['rankmathTitle'] = 'Hasan';
      customTags['rankmathPermalink'] = 'Hasan';
      customTags['rankmathExcerpt'] = 'Hasan';
      customTags['rankmathFocusKeyword'] = 'Hasan';
      customTags['rankmathFocusKeywords'] = 'Hasan';
      customTags['rankmathOrgname'] = 'Hasan';
      customTags['rankmathOrgurl'] = 'Hasan';
      customTags['rankmathOrglogo'] = 'Hasan';
      customTags['siteTitle'] = '';
      customTags['siteDescription'] = '';
      customTags['siteTagline'] = '';
      customTags['postMeta'] = '';
      customTags['separator'] = '';
      customTags['searchTerms'] = '';
      customTags['counter'] = '1';
    }, [clientId]); // Wrapper CSS Class Selectors

    const titleWrapperSelector = blockClass; //const titleLinkSelector = postTitle.options.isLink ? blockClass + ' a' : blockClass;

    var titleLinkSelector = '';

    if (wrapper.options.tag.length != 0) {
      if (postTitle.options.isLink) {
        titleLinkSelector = blockClass + ' a';
      } else {
        titleLinkSelector = blockClass;
      }
    } else {
      titleLinkSelector = blockClass;
    }

    function setFieldLinkTo(option, index) {
      var options = { ...postTitle.options,
        linkTo: option.value
      };
      setAttributes({
        postTitle: { ...postTitle,
          options: options
        }
      });
    }

    function setLimitBy(option, index) {
      var options = { ...postTitle.options,
        limitBy: option.value
      };
      setAttributes({
        postTitle: { ...postTitle,
          options: options
        }
      });
    }

    const titlePrefixSelector = blockClass + ' .prefix';
    const titlePostfixSelector = blockClass + ' .postfix';
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    const [postTitleEdited, setpostTitleEdited] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(currentPostTitle);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var count = postTitle.options.limitCount > 0 ? postTitle.options.limitCount : 999;

      if (postTitle.options.limitBy == 'character') {
        setpostTitleEdited(currentPostTitle.substring(0, count));
      } else {
        setpostTitleEdited(currentPostTitle.split(" ").splice(0, count).join(" "));
      }
    }, [postTitle]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var count = postTitle.options.limitCount > 0 ? postTitle.options.limitCount : 0;
      var currentPostTitleX = currentPostTitle.length > 0 ? currentPostTitle : 'What is Lorem Ipsum?';

      if (postTitle.options.limitBy == 'character') {
        setpostTitleEdited(currentPostTitleX.substring(0, count));
      } else {
        setpostTitleEdited(currentPostTitleX.split(" ").splice(0, count).join(" "));
      }
    }, [currentPostTitle]);

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function paddingControl(nextValues) {
      var responsive = postTitle.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...postTitle.styles,
        padding: responsive
      };
      setAttributes({
        postTitle: { ...postTitle,
          styles: styles
        }
      });
      blockCssY.items[titleLinkSelector] = blockCssY.items[titleLinkSelector] != undefined ? blockCssY.items[titleLinkSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[titleLinkSelector]['padding-top'] != undefined ? blockCssY.items[titleLinkSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[titleLinkSelector]['padding-right'] != undefined ? blockCssY.items[titleLinkSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[titleLinkSelector]['padding-bottom'] != undefined ? blockCssY.items[titleLinkSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[titleLinkSelector]['padding-left'] != undefined ? blockCssY.items[titleLinkSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControl(nextValues) {
      var responsive = postTitle.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...postTitle.styles,
        margin: responsive
      };
      setAttributes({
        postTitle: { ...postTitle,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[titleLinkSelector] = blockCssY.items[titleLinkSelector] != undefined ? blockCssY.items[titleLinkSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[titleLinkSelector]['margin-top'] != undefined ? blockCssY.items[titleLinkSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[titleLinkSelector]['margin-right'] !== undefined ? blockCssY.items[titleLinkSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[titleLinkSelector]['margin-bottom'] !== undefined ? blockCssY.items[titleLinkSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[titleLinkSelector]['margin-left'] !== undefined ? blockCssY.items[titleLinkSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function paddingControlWrapper(nextValues) {
      var responsive = wrapper.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...wrapper.styles,
        padding: responsive
      };
      setAttributes({
        wrapper: { ...wrapper,
          styles: styles
        }
      });
      blockCssY.items[titleWrapperSelector] = blockCssY.items[titleWrapperSelector] != undefined ? blockCssY.items[titleWrapperSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[titleWrapperSelector]['padding-top'] != undefined ? blockCssY.items[titleWrapperSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[titleWrapperSelector]['padding-right'] != undefined ? blockCssY.items[titleWrapperSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[titleWrapperSelector]['padding-bottom'] != undefined ? blockCssY.items[titleWrapperSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[titleWrapperSelector]['padding-left'] != undefined ? blockCssY.items[titleWrapperSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlWrapper(nextValues) {
      var responsive = wrapper.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...wrapper.styles,
        margin: responsive
      };
      setAttributes({
        wrapper: { ...wrapper,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[titleWrapperSelector] = blockCssY.items[titleWrapperSelector] != undefined ? blockCssY.items[titleWrapperSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[titleWrapperSelector]['margin-top'] != undefined ? blockCssY.items[titleWrapperSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[titleWrapperSelector]['margin-right'] !== undefined ? blockCssY.items[titleWrapperSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[titleWrapperSelector]['margin-bottom'] !== undefined ? blockCssY.items[titleWrapperSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[titleWrapperSelector]['margin-left'] !== undefined ? blockCssY.items[titleWrapperSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        //reponsiveCssDesktop += '@media only screen and (min-width: 781px){';
        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        } //reponsiveCssDesktop += '}';

      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        //reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';
        reponsiveCssTablet += '@media(max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        //reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';
        reponsiveCssMobile += '@media(max-width:360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCss = reponsiveCssDesktop + reponsiveCssTablet + reponsiveCssMobile;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
    }, [postTitle]);

    var linkAttrObj = () => {
      var sdsd = {};
      postTitle.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = postTitle.options.customUrl != undefined && postTitle.options.customUrl.length > 0 ? postTitle.options.customUrl : currentPostUrl;
    const CustomTag = `${wrapper.options.tag}`;
    const CustomTagPostTitle = `${postTitle.options.tag}`;

    function onChangeTypo(typoX) {
      setAttributes({
        postTitle: { ...postTitle,
          styles: typoX
        }
      });

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var styles = blockCssY.items[titleLinkSelector] == undefined ? {} : blockCssY.items[titleLinkSelector];
        var fontSizeX = styles['font-size'] == undefined ? {} : styles['font-size'];
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var styles = blockCssY.items[titleLinkSelector] == undefined ? {} : blockCssY.items[titleLinkSelector];
        var lineHeightX = styles['line-height'] == undefined ? {} : styles['line-height'];
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var styles = blockCssY.items[titleLinkSelector] == undefined ? {} : blockCssY.items[titleLinkSelector];
        var letterSpacingX = styles['letter-spacing'] == undefined ? {} : styles['letter-spacing'];
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.AlignmentToolbar, {
      value: wrapper.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: {
            options: wrapper.options,
            styles: styles
          }
        });
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: {
            styles: wrapper.styles,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_19__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[titleWrapperSelector] = { ...blockCssY.items[titleWrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlWrapper(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: wrapper.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlWrapper(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Post Title",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ToggleControl, {
      label: "Linked?",
      help: postTitle.options.isLink ? 'Linked to URL' : 'Not linked to URL.',
      checked: postTitle.options.isLink ? true : false,
      onChange: e => {
        var options = { ...postTitle.options,
          isLink: postTitle.options.isLink ? false : true
        };
        setAttributes({
          postTitle: { ...postTitle,
            options: options
          }
        });
      }
    }), !postTitle.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: postTitle.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...postTitle.options,
          tag: newVal
        };
        setAttributes({
          postTitle: { ...postTitle,
            options: options
          }
        });
      }
    })), postTitle.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link To"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_20__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: linkToArgs,
      buttonTitle: "Choose",
      onChange: setFieldLinkTo,
      values: []
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-500 p-2 my-3 text-white"
    }, linkToArgs[postTitle.options.linkTo] != undefined ? linkToArgs[postTitle.options.linkTo].label : ''), postTitle.options.linkTo == 'authorMeta' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Author Meta Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: postTitle.options.linkToAuthorMeta,
      onChange: newVal => {
        var options = { ...postTitle.options,
          linkToAuthorMeta: newVal
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    })), postTitle.options.linkTo == 'customField' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Meta Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: postTitle.options.linkToAuthorMeta,
      onChange: newVal => {
        var options = { ...postTitle.options,
          linkToAuthorMeta: newVal
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: postTitle.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...postTitle.options,
          linkTarget: newVal
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    }))), postTitle.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, postTitle.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_pro_wrapper__WEBPACK_IMPORTED_MODULE_11__["default"], {
      utmUrl: "?utm_source=dashboard&utm_term=postTitleBlock&utm_campaign=pluginPostGrid&utm_medium=postTitleBlock-customUrl"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, " ", (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "underline"
    }, "Custom Url"), " Only avilable in Premium")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Url"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerPosttitle ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"],
      onClick: ev => {
        setLinkPickerPosttitle(prev => !prev);
      }
    }), postTitle.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__["default"],
      onClick: ev => {
        var options = { ...postTitle.options,
          customUrl: ''
        };
        setAttributes({
          postTitle: { ...postTitle,
            options: options
          }
        });
        setLinkPickerPosttitle(false);
      }
    }), linkPickerPosttitle && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.__experimentalLinkControl, {
      settings: [],
      value: postTitle.options.customUrl,
      onChange: newVal => {
        var options = { ...postTitle.options,
          customUrl: newVal.url
        };
        setAttributes({
          postTitle: { ...postTitle,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", postTitle.options.customUrl.length != 0 ? postTitle.options.customUrl : 'No link', " ")))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = postTitle.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...postTitle.options,
          linkAttr: sdsd
        };
        setAttributes({
          postTitle: { ...postTitle,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), postTitle.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: postTitle.options.linkAttr[i].id,
        onChange: newVal => {
          postTitle.options.linkAttr[i].id = newVal;
          var ssdsd = postTitle.options.linkAttr.concat([]);
          var options = { ...postTitle.options,
            linkAttr: ssdsd
          };
          setAttributes({
            postTitle: { ...postTitle,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          postTitle.options.linkAttr[i].val = newVal;
          var ssdsd = postTitle.options.linkAttr.concat([]);
          var options = { ...postTitle.options,
            linkAttr: ssdsd
          };
          setAttributes({
            postTitle: { ...postTitle,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          postTitle.options.linkAttr.splice(i, 1);
          var ssdsd = postTitle.options.linkAttr.concat([]);
          var options = { ...postTitle.options,
            linkAttr: ssdsd
          };
          setAttributes({
            postTitle: { ...postTitle,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Limit By"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_20__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: limitByArgs,
      buttonTitle: "Choose",
      onChange: setLimitBy,
      values: []
    })), postTitle.options.limitBy.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "bg-gray-500 my-3 text-white p-2"
    }, limitByArgs[postTitle.options.limitBy].label), (postTitle.options.limitBy == 'word' || postTitle.options.limitBy == 'character') && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Limit Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: postTitle.options.limitCount,
      onChange: newVal => {
        var options = { ...postTitle.options,
          limitCount: newVal
        };
        setAttributes({
          postTitle: { ...postTitle,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: postTitle.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_18__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postTitle.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postTitle.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postTitle.styles,
          color: newValuesObj
        };
        setAttributes({
          postTitle: { ...postTitle,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[titleLinkSelector] == undefined) {
          newValuesObjX[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
            color: newValuesObj
          };
        } else {
          newValuesObjX[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
            color: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        }); // blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector], 'color': newValuesObj };
        // setAttributes({ blockCssY: { items: blockCssY.items } });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: postTitle.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_18__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postTitle.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postTitle.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postTitle.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          postTitle: { ...postTitle,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[titleLinkSelector] == undefined) {
          newValuesObjX[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
            'background-color': newValuesObj
          };
        } else {
          newValuesObjX[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
            'background-color': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        }); //blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector], 'background-color': newValuesObj };
        //setAttributes({ blockCssY: { items: blockCssY.items } });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: postTitle.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: postTitle
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: postTitle.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }, {
        label: 'none',
        value: 'none'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postTitle.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postTitle.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postTitle.styles,
          display: newValuesObj
        };
        setAttributes({
          postTitle: { ...postTitle,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[titleLinkSelector] == undefined) {
          newValuesObjX[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
            display: newValuesObj
          };
        } else {
          newValuesObjX[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
            display: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Text Align"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_text_align__WEBPACK_IMPORTED_MODULE_12__["default"], {
      val: postTitle.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(postTitle.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = postTitle.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...postTitle.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          postTitle: { ...postTitle,
            styles: styles
          }
        });
        blockCssY.items[titleLinkSelector] = { ...blockCssY.items[titleLinkSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: postTitle.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: postTitle.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Prefix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: prefix.options.text,
      onChange: newVal => {
        var options = { ...prefix.options,
          text: newVal
        };
        setAttributes({
          prefix: {
            styles: prefix.styles,
            options: options
          }
        }); // setAttributes({ prefix: { text: newVal, class: prefix.options.class, color: prefix.color, bgColor: prefix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Postfix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: postfix.options.text,
      onChange: newVal => {
        var options = { ...postfix.options,
          text: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            options: options
          }
        }); // setAttributes({ postfix: { text: newVal, class: prefix.options.class, color: postfix.color, bgColor: postfix.bgColor } })
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, titleWrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Title link"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, titleLinkSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, titlePrefixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, titlePostfixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_15__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_16__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId]
    }, postTitle.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      onClick: handleLinkClick
    }, linkAttrItems, {
      href: postUrl,
      target: postTitle.options.linkTarget
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), postTitleEdited, postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text)), !postTitle.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), postTitleEdited, postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text))), wrapper.options.tag.length == 0 && postTitle.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      onClick: handleLinkClick,
      className: [blockId]
    }, linkAttrItems, {
      href: postUrl,
      target: postTitle.options.linkTarget
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), postTitleEdited, postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text)), wrapper.options.tag.length == 0 && !postTitle.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, postTitle.options.tag.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTagPostTitle, {
      className: blockId
    }, prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), postTitleEdited, postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text)), postTitle.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: blockId
    }, prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), postTitleEdited, postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text))))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/read-more/index.js":
/*!***************************************!*\
  !*** ./src/blocks/read-more/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link-off.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");














const {
  RawHTML
} = wp.element;










var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_2__.registerBlockType)("post-grid/read-more", {
  title: "Read More",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 109C25 106.239 27.2386 104 30 104H470C472.761 104 475 106.239 475 109V159C475 161.761 472.761 164 470 164H30C27.2386 164 25 161.761 25 159V109Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M25 218C25 215.239 27.2386 213 30 213H470C472.761 213 475 215.239 475 218V268C475 270.761 472.761 273 470 273H30C27.2386 273 25 270.761 25 268V218Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M393.013 353.889H153.733C141.78 353.889 132 363.652 132 375.585C132 387.518 141.78 397.282 153.733 397.282H393.013V436.119C393.013 445.882 404.748 450.655 411.486 443.712L471.903 383.179C476.032 378.84 476.032 372.114 471.903 367.775L411.486 307.241C404.748 300.299 393.013 305.289 393.013 314.835V353.889V353.889Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    readMore: {
      type: 'object',
      default: {
        options: {
          text: 'Read More',
          isLink: true,
          linkTarget: '_blank',
          customUrl: '',
          linkAttr: [],
          class: ''
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: '',
          position: '',

          /*before, after, prefix, postfix */
          class: 'readmore-icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    prefix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'prefix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    postfix: {
      type: 'object',
      default: {
        options: {
          text: '',
          class: 'postfix'
        },
        styles: {
          color: {},
          bgColor: {}
        }
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    linkAttr: {
      "type": "array",
      "default": []
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var readMore = attributes.readMore;
    var icon = attributes.icon;
    var linkAttr = attributes.linkAttr;
    var prefix = attributes.prefix;
    var postfix = attributes.postfix;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [isLoading, setisLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(window.PostGridPluginData);
    const [currentPostContent, setCurrentpostContent] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'content', postId);
    const [customFields, setCustomFields] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_5__.useEntityProp)('postType', postType, 'link', postId);
    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(''); // Wrapper CSS Class Selectors

    const redmoreWrapperSelector = blockClass;
    const redmoreSelector = blockClass + ' .readmore';
    const iconSelector = blockClass + ' .readmore-icon';
    const prefixSelector = blockClass + ' .prefix';
    const postfixSelector = blockClass + ' .postfix';

    function getMetaField(metaKey) {
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_7___default()({
        path: '/post-grid/v2/get_post_meta',
        method: 'POST',
        data: {
          postId: postId,
          meta_key: metaKey
        }
      }).then(res => {
        if (res['meta_value'] != undefined && res['meta_value'].length > 0) {
          customFields[metaKey] = res['meta_value'];
          setCustomFields({});
          setCustomFields(customFields);
        }
      });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    const [linkPickerExcerpt, setLinkPickerExcerpt] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    const [linkPickerReadmore, setLinkPickerReadmore] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector]['font-size'] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function onChangeReadmoreTypo(typoX) {
      setAttributes({
        readMore: { ...readMore,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontFamily[breakPointX] != undefined) {
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'font-family': typoX.fontFamily
        };
      } else {
        //typoX.fontFamily[breakPointX] = {};
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[redmoreSelector]['font-size'] != undefined ? blockCssY.items[redmoreSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector], 'font-size': fontSizeX };

        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[redmoreSelector]['line-height'] != undefined ? blockCssY.items[redmoreSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector], 'line-height': lineHeightX };

        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[redmoreSelector]['letter-spacing'] != undefined ? blockCssY.items[redmoreSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit; //blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector], 'letter-spacing': letterSpacingX };

        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'text-transform': typoX.textTransform
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControlReadmore(nextValues) {
      var responsive = readMore.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...readMore.styles,
        padding: responsive
      };
      setAttributes({
        readMore: { ...readMore,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[redmoreSelector] = blockCssY.items[redmoreSelector] != undefined ? blockCssY.items[redmoreSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[redmoreSelector]['padding-top'] != undefined ? blockCssY.items[redmoreSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[redmoreSelector]['padding-right'] != undefined ? blockCssY.items[redmoreSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[redmoreSelector]['padding-bottom'] != undefined ? blockCssY.items[redmoreSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[redmoreSelector]['padding-left'] != undefined ? blockCssY.items[redmoreSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlReadmore(nextValues) {
      var responsive = readMore.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...readMore.styles,
        margin: responsive
      };
      setAttributes({
        readMore: { ...readMore,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[redmoreSelector] = blockCssY.items[redmoreSelector] != undefined ? blockCssY.items[redmoreSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[redmoreSelector]['margin-top'] != undefined ? blockCssY.items[redmoreSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[redmoreSelector]['margin-right'] !== undefined ? blockCssY.items[redmoreSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[redmoreSelector]['margin-bottom'] !== undefined ? blockCssY.items[redmoreSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[redmoreSelector]['margin-left'] !== undefined ? blockCssY.items[redmoreSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    var [linkAttrItemsReadmore, setlinkAttrItemsReadmore] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var sdsd = {};
      readMore.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItemsReadmore(sdsd);
    }, [readMore]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    var postUrl = readMore.options.customUrl != undefined && readMore.options.customUrl.length > 0 ? readMore.options.customUrl : currentPostUrl;
    const CustomTag = `${wrapper.options.tag}`;

    const MyDropdown = () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
          title: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].name : '',
          variant: "secondary",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, {
          className: "text-lg "
        }, _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon : '<span class="icon-responsive font-bold"></span>'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, breakPointList.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: ' text-lg font-bold border-b inline-block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            setPreviewDeviceType(x.value);
            var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
            asdsdsd.then(res => {
              setBreakPointX(res.breakpoint);
              generateBlockCssY();
            });
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          class: "icon-close"
        })), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, x.icon));
      }))
    }));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.AlignmentToolbar, {
      value: readMore.styles.textAlign,
      onChange: nextAlign => {
        var styles = { ...readMore.styles,
          textAlign: nextAlign
        };
        setAttributes({
          readMore: { ...readMore,
            styles: styles
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3",
      title: "General",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[redmoreWrapperSelector] = { ...blockCssY.items[redmoreWrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Read More",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Read More Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: readMore.options.text,
      onChange: newVal => {
        var options = { ...readMore.options,
          text: newVal
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ToggleControl, {
      label: "Linked with post?",
      help: readMore.options.isLink ? 'Linked with post URL' : 'Not linked to post URL.',
      checked: readMore.options.isLink ? true : false,
      onChange: e => {
        var options = { ...readMore.options,
          isLink: readMore.options.isLink ? false : true
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    }), readMore.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: readMore.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...readMore.options,
          linkTarget: newVal
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Url"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "relative"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerReadmore ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_19__["default"],
      onClick: ev => {
        setLinkPickerReadmore(prev => !prev);
      }
    }), readMore.options.customUrl.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: "!text-red-500 ml-2",
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"],
      onClick: ev => {
        var options = { ...readMore.options,
          customUrl: ''
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    }), linkPickerReadmore && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.__experimentalLinkControl, {
      settings: [],
      value: readMore.options.customUrl,
      onChange: newVal => {
        var options = { ...readMore.options,
          customUrl: newVal.url
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        }); //setLinkPickerReadmore(false)
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "p-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "font-bold"
    }, "Linked to:"), " ", readMore.options.customUrl.length != 0 ? readMore.options.customUrl : 'No link', " ")))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = readMore.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...readMore.options,
          linkAttr: sdsd
        };
        setAttributes({
          readMore: { ...readMore,
            options: options
          }
        });
      }
    }, "Add")), readMore.options.linkAttr != undefined && readMore.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: readMore.options.linkAttr[i].id,
        onChange: newVal => {
          readMore.options.linkAttr[i].id = newVal;
          var ssdsd = readMore.options.linkAttr.concat([]);
          var options = { ...readMore.options,
            linkAttr: ssdsd
          };
          setAttributes({
            readMore: { ...readMore,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          readMore.options.linkAttr[i].val = newVal;
          var ssdsd = readMore.options.linkAttr.concat([]);
          var options = { ...readMore.options,
            linkAttr: ssdsd
          };
          setAttributes({
            readMore: { ...readMore,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          readMore.options.linkAttr.splice(i, 1);
          var ssdsd = readMore.options.linkAttr.concat([]);
          var options = { ...readMore.options,
            linkAttr: ssdsd
          };
          setAttributes({
            readMore: { ...readMore,
              options: options
            }
          });
        }
      })));
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: readMore.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        // var responsive = readMore.styles.color;
        // responsive[breakPointX] = newVal;
        // var styles = { ...readMore.styles, color: responsive };
        // setAttributes({ readMore: { ...readMore, styles: styles } });
        var newValuesObj = {};

        if (Object.keys(readMore.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = readMore.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...readMore.styles,
          color: newValuesObj
        };
        setAttributes({
          readMore: { ...readMore,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: readMore.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(readMore.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = readMore.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...readMore.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          readMore: { ...readMore,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: readMore.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(readMore.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = readMore.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...readMore.styles,
          display: newValuesObj
        };
        setAttributes({
          readMore: { ...readMore,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[redmoreSelector] = { ...blockCssY.items[redmoreSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: readMore.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlReadmore(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: readMore.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlReadmore(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: readMore.styles,
      breakPointX: breakPointX,
      onChange: onChangeReadmoreTypo,
      setAttributes: setAttributes,
      obj: readMore
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_13__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Readmore Text',
        value: 'beforeRedmore'
      }, {
        label: 'After Readmore Text',
        value: 'afterRedmore'
      }, {
        label: 'Before Prefix',
        value: 'beforePrefix'
      }, {
        label: 'After Prefix',
        value: 'afterPrefix'
      }, {
        label: 'Before Postfix',
        value: 'beforePostfix'
      }, {
        label: 'After Postfix',
        value: 'afterPostfix'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_17__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_12__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Prefix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: prefix.options.text,
      onChange: newVal => {
        var options = { ...prefix.options,
          text: newVal
        };
        setAttributes({
          prefix: { ...prefix,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Postfix",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: postfix.options.text,
      onChange: newVal => {
        var options = { ...postfix.options,
          text: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Excerpt Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, redmoreWrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Read More"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, redmoreSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Prefix Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, prefixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Postfix Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postfixSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_14__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_15__["default"], {
      utm: {
        utm_source: 'BlockReadMore',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, wrapper.options.tag && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomTag, {
      className: [blockId]
    }, icon.options.position == 'beforePrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'afterPrefix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), readMore.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "readmore",
      onClick: handleLinkClick
    }, linkAttrItemsReadmore, {
      target: readMore.options.linkTarget,
      href: postUrl
    }), icon.options.position == 'beforeRedmore' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), readMore.options.text, icon.options.position == 'afterRedmore' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), !readMore.options.isLink && readMore.options.text, icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text), icon.options.position == 'afterPostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), wrapper.options.tag.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), prefix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: prefix.options.class
    }, prefix.options.text), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), readMore.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      className: "readmore",
      onClick: handleLinkClick
    }, linkAttrItemsReadmore, {
      target: readMore.options.linkTarget,
      href: postUrl
    }), icon.options.position == 'beforeRedmore' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), readMore.options.text, icon.options.position == 'afterRedmore' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), !readMore.options.isLink && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, icon.options.position == 'beforeRedmore' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), readMore.options.text, icon.options.position == 'afterRedmore' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), icon.options.position == 'beforePostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), postfix.options.text && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: postfix.options.class
    }, postfix.options.text), icon.options.position == 'afterPostfix' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/shortcode/index.js":
/*!***************************************!*\
  !*** ./src/blocks/shortcode/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/plus.js");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");














const {
  RawHTML
} = wp.element;





var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_3__.registerBlockType)("post-grid/shortcode", {
  title: "Shortcode",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      "aria-hidden": "true",
      focusable: "false"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M20 4H4v1.5h16V4zm-2 9h-3c-1.1 0-2 .9-2 2v3c0 1.1.9 2 2 2h3c1.1 0 2-.9 2-2v-3c0-1.1-.9-2-2-2zm.5 5c0 .3-.2.5-.5.5h-3c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v3zM4 9.5h9V8H4v1.5zM9 13H6c-1.1 0-2 .9-2 2v3c0 1.1.9 2 2 2h3c1.1 0 2-.9 2-2v-3c0-1.1-.9-2-2-2zm.5 5c0 .3-.2.5-.5.5H6c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v3z",
      "fill-rule": "evenodd",
      "clip-rule": "evenodd"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          class: 'inline-block'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    shortcodeClassic: {
      "type": "string",
      "default": ''
    },
    shortcode: {
      type: 'object',
      default: {
        options: {
          key: '',
          id: '',
          prefix: '',
          postfix: '',
          prams: []
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var shortcode = attributes.shortcode;
    var shortcodeClassic = attributes.shortcodeClassic;
    var wrapper = attributes.wrapper;
    var items = attributes.items;
    var blockCssY = attributes.blockCssY;
    var customCss = attributes.customCss;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    const [metaValue, setMetaValue] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
    const [metaHtml, setMetaHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('');
    const [metaArgs, setMetaArgs] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
    const [linkPickerText, setLinkPickerText] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [shortcodePrams, setShortcodePrams] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({
      id: '',
      label: '',
      val: ''
    }); // Wrapper CSS Class Selectors

    const itemWrapSelector = blockClass;
    const itemSelector = blockClass + ' .item';
    const postCountSelector = blockClass + ' .postCount';
    const [shortcodes, setshortcodes] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({
      yith_wcwl_add_to_wishlist: {
        label: 'YITH - Add to Wishlist',
        value: 'yith_wcwl_add_to_wishlist',
        args: [{
          id: 'product_id',
          label: 'Product Id',
          val: '{currentPostId}'
        }]
      },
      yasr_overall_rating: {
        label: 'YASR- overall rating',
        value: 'yasr_overall_rating',
        args: [{
          id: 'size',
          label: 'Size',
          val: '15'
        }, {
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      yasr_visitor_votes: {
        label: 'YASR - visitor votes',
        value: 'yasr_visitor_votes',
        args: [{
          id: 'size',
          label: 'Size',
          val: '15'
        }, {
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      wp_postviews: {
        label: 'WP-PostViews',
        value: 'views',
        args: [{
          id: 'id',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      wp_postratings: {
        label: 'WP-PostRatings',
        value: 'wp_postratings',
        args: [{
          id: 'id',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      site_reviews_summary: {
        label: 'Site Reviews - Summary',
        value: 'site_reviews_summary',
        args: [{
          id: 'hide',
          label: 'Hide',
          val: ''
        }, {
          id: 'assigned_to',
          label: 'Assigned To',
          val: ''
        }, {
          id: 'class',
          label: 'Class',
          val: ''
        }]
      },
      ratingwidget: {
        label: 'Rating-Widget',
        value: 'ratingwidget',
        args: [{
          id: 'post_id',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      ratemypostresult: {
        label: 'Rate my Post - Result',
        value: 'ratemypost-result',
        args: [{
          id: 'post_id',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      ratemypost: {
        label: 'Rate my Post',
        value: 'ratemypost',
        args: [{
          id: 'id',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      postviews: {
        label: 'Post Views Counter',
        value: 'post-views',
        args: [{
          id: 'id',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      pvcp_1: {
        label: 'Page Visit Counter',
        value: 'pvcp_1',
        args: [{
          id: 'postid',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      pvc_stats: {
        label: 'Page Views Count',
        value: 'pvc_stats',
        args: [{
          id: 'postid',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      mr_rating_result: {
        label: 'Multi Rating - Result',
        value: 'mr_rating_result',
        args: [{
          id: 'post_id',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      mr_rating_form: {
        label: 'Multi Rating',
        value: 'mr_rating_form',
        args: [{
          id: 'post_id',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      },
      likebtn: {
        label: 'Like Button Rating',
        value: 'likebtn',
        args: {}
      },
      kkratings: {
        label: 'KK Star Ratings',
        value: 'kkratings',
        args: [{
          id: 'size',
          label: 'Size',
          val: '15'
        }, {
          id: 'id',
          label: 'Post Id',
          val: '{currentPostId}'
        }]
      }
    });
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_1___default()({
        path: '/post-grid/v2/get_shortcode',
        method: 'POST',
        data: {
          postId: postId,
          meta_key: shortcode.options.key,
          prams: shortcode.options.prams
        }
      }).then(res => {
        setMetaHtml(res.html); //setMetaArgs(res.args);
      });
    }, [shortcode]);
    var breakPointList = [];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [items]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    const post = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_5__.useSelect)(select => select('core').getEntityRecord('postType', context['postType'], context['postId']));
    const termstaxonomy = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_5__.useSelect)(select => select('core').getEntityRecords('taxonomy', 'category', [4, 5]));

    const MyDropdown = () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
          title: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].name : '',
          variant: "secondary",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, {
          className: "text-lg "
        }, _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX] != undefined ? _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon : '<span class="icon-responsive font-bold"></span>'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, breakPointList.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: ' text-lg font-bold border-b inline-block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            setPreviewDeviceType(x.value);
            var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
            asdsdsd.then(res => {
              setBreakPointX(res.breakpoint);
              generateBlockCssY();
            });
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          class: "icon-close"
        })), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, null, x.icon));
      }))
    }));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.textAlign,
      onChange: nextAlign => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = nextAlign;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = nextAlign;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-3"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Shortcode Key",
      initialOpen: true
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      className: "mb-3"
    }, "Choose Shortcode "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: shortcodes,
      buttonTitle: "Choose",
      onChange: (option, index) => {
        var options = { ...shortcode.options,
          id: option.id,
          key: option.value,
          prams: option.args
        };
        setAttributes({
          shortcode: { ...shortcode,
            options: options
          }
        });
      },
      values: "",
      value: shortcode.options.key
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Shortcode Key"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      placeholder: "Shortcode key",
      value: shortcode.options.key,
      onChange: newVal => {
        var options = { ...shortcode.options,
          key: newVal
        };
        setAttributes({
          shortcode: { ...shortcode,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Parameters"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      className: linkPickerText ? "!bg-gray-400" : '',
      icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_14__["default"],
      onClick: ev => {
        setLinkPickerText(prev => !prev);
      }
    }, "Add"), linkPickerText && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Popover, {
      position: "bottom right "
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "p-3 w-60"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "ID"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: shortcodePrams.id,
      onChange: newVal => {
        setShortcodePrams({ ...shortcodePrams,
          id: newVal
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Label"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: shortcodePrams.label,
      onChange: newVal => {
        setShortcodePrams({ ...shortcodePrams,
          label: newVal
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Value"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: shortcodePrams.val,
      onChange: newVal => {
        setShortcodePrams({ ...shortcodePrams,
          val: newVal
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.Button, {
      variant: "secondary",
      onClick: ev => {
        console.log(shortcodePrams);
        var options = { ...shortcode.options
        };
        options.prams.push(shortcodePrams);
        setAttributes({
          shortcode: { ...shortcode,
            options: options
          }
        }); // shortcodePrams.id = '';
        // shortcodePrams.label = '';
        // shortcodePrams.val = '';
      }
    }, "Add Parameter")))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: ""
    }, shortcode.options.prams != undefined && shortcode.options.prams.map((arg, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2 bg-gray-300"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "bg-gray-500 px-3 text-white"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, arg.label, " (", arg.id, ")"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "cursor-pointer hover:bg-red-500 hover:text-white px-1 py-1",
        onClick: ev => {
          var options = { ...shortcode.options
          };
          options.prams.splice(index, 1);
          setAttributes({
            shortcode: { ...shortcode,
              options: options
            }
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24",
        "aria-hidden": "true",
        focusable: "false"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
        d: "M13 11.8l6.1-6.3-1-1-6.1 6.2-6.1-6.2-1 1 6.1 6.3-6.5 6.7 1 1 6.5-6.6 6.5 6.6 1-1z"
      }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "px-3 py-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
        value: arg.val,
        onChange: newVal => {
          var options = { ...shortcode.options
          };
          options.prams[index].val = newVal;
          setAttributes({
            shortcode: { ...shortcode,
              options: options
            }
          });
        }
      })));
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.__experimentalInputControl, {
      value: wrapper.options.class,
      onChange: newVal => {
        var options = { ...wrapper.options,
          class: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Items Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, itemWrapSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Caetgory Items"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, itemSelector, '{}', " ")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, ".pg-postMeta a", '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Post Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, postCountSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_6__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, shortcode.options.key.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_13__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: shortcodes,
      buttonTitle: "Choose",
      onChange: (option, index) => {
        var options = { ...shortcode.options,
          key: option.value
        };
        setAttributes({
          shortcode: { ...shortcode,
            options: options
          }
        });
      },
      values: "",
      value: shortcode.options.key
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "pg-postMeta"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, null, metaHtml)))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/social-share/index.js":
/*!******************************************!*\
  !*** ./src/blocks/social-share/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-sortablejs */ "./node_modules/react-sortablejs/dist/index.js");
/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_sortablejs__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/icon/index.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/close.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/menu.js");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");















const {
  RawHTML
} = wp.element;










var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__.registerBlockType)("post-grid/social-share", {
  title: "Social Share",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M25 249.5C25 246.739 27.2386 244.5 30 244.5H470C472.761 244.5 475 246.739 475 249.5V299.5C475 302.261 472.761 304.5 470 304.5H30C27.2386 304.5 25 302.261 25 299.5V249.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M25 355.5C25 352.739 27.2386 350.5 30 350.5H470C472.761 350.5 475 352.739 475 355.5V405.5C475 408.261 472.761 410.5 470 410.5H30C27.2386 410.5 25 408.261 25 405.5V355.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M241 147C241 144.239 243.239 142 246 142H470C472.761 142 475 144.239 475 147V197C475 199.761 472.761 202 470 202H246C243.239 202 241 199.761 241 197V147Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M100 132.5C119.569 132.5 135.429 116.72 135.429 97.25C135.429 77.7799 119.569 62 100 62C80.4312 62 64.5714 77.7799 64.5714 97.25C64.5714 116.72 80.4312 132.5 100 132.5ZM124.8 141.312H120.178C114.033 144.121 107.196 145.719 100 145.719C92.8036 145.719 85.9946 144.121 79.8223 141.312H75.2C54.6625 141.312 38 157.891 38 178.325V189.781C38 197.079 43.9509 203 51.2857 203H148.714C156.049 203 162 197.079 162 189.781V178.325C162 157.891 145.337 141.312 124.8 141.312Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          class: 'icon',
          position: 'beforeLabel'
          /*beforeLabel, afterLabel, beforeCount, afterCount*/

        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    label: {
      type: 'object',
      default: {
        options: {
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    count: {
      type: 'object',
      default: {
        options: {
          class: ''
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    elements: {
      "type": "object",
      "default": {
        options: {
          linkTarget: '_blank',
          showLabel: false,
          showCount: false,
          showIcon: true,
          iconPositon: 'beforeLabel' // beforeLabel, afterLabel, beforeCount, afterCount

        },
        styles: {
          textAlign: {},
          color: {
            Desktop: '#18978F'
          },
          bgColor: {},
          padding: {},
          margin: {
            Desktop: {
              top: '5px',
              right: '5px',
              bottom: '5px',
              left: '5px'
            }
          },
          display: {},
          borderRadius: {},
          fontSize: {
            Desktop: {
              val: '35'
            }
          },
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        },
        items: [{
          id: 'facebook',
          label: 'Facebook',
          count: 125,
          url: 'https://www.facebook.com/sharer.php?u={URL}',
          siteIcon: {
            library: 'fontAwesome',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: 'fab fa-facebook-square'
          },
          styles: {
            textAlign: {},
            color: {},
            bgColor: {},
            padding: {},
            margin: {},
            display: {}
          }
        }, {
          id: 'twitter',
          label: 'Twitter',
          count: 125,
          url: 'https://twitter.com/intent/tweet?url={URL}',
          siteIcon: {
            library: 'fontAwesome',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: 'fab fa-twitter-square'
          },
          styles: {
            textAlign: {},
            color: {},
            bgColor: {},
            padding: {},
            margin: {},
            display: {}
          }
        }, {
          id: 'linkedin',
          label: 'Linkedin',
          count: 125,
          url: 'https://www.linkedin.com/shareArticle?mini=true&url={URL}&title={TITLE}',
          siteIcon: {
            library: 'fontAwesome',
            srcType: "class",

            /*class, html, img, svg */
            iconSrc: 'fab fa-linkedin'
          },
          styles: {
            textAlign: {},
            color: {},
            bgColor: {},
            padding: {},
            margin: {},
            display: {}
          }
        }]
      } // avatar, name, description, id

    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var elements = attributes.elements;
    var icon = attributes.icon;
    var label = attributes.label;
    var count = attributes.count;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    var wrapperSelector = blockClass; // Wrapper CSS Class Selectors

    var itemSelector = blockClass + ' .media-item';
    var iconSelector = blockClass + ' .media-item .icon';
    var labelSelector = blockClass + ' .media-item .media-label';
    var countSelector = blockClass + ' .media-item .media-count';
    var [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    var [loading, setLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    var [currentPostUrl, setCurrentPostUrl] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_6__.useEntityProp)('postType', postType, 'link', postId);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
      blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
        'font-size': {
          "Desktop": "30px"
        }
      };
      blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
        'margin-top': {
          "Desktop": "10px"
        }
      };
      blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
        'margin-right': {
          "Desktop": "10px"
        }
      };
      blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
        'margin-bottom': {
          "Desktop": "10px"
        }
      };
      blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
        'margin-left': {
          "Desktop": "10px"
        }
      };
      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      elements.items.map((x, index) => {
        var styles = x.styles;
        Object.entries(styles).map(y => {
          var attrId = y[0];
          var attrVal = y[1];

          if (Object.keys(attrVal).length != 0) {
            var attrIdX = '';

            if (attrId == 'bgColor') {
              attrIdX = 'background-color';
            } else if (attrId == 'textAlign') {
              attrIdX = 'text-align';
            } else {
              attrIdX = attrId;
            }

            if (blockCssY.items[itemSelector + '.item-' + index] == undefined) {
              blockCssY.items[itemSelector + '.item-' + index] = {};
              blockCssY.items[itemSelector + '.item-' + index][attrIdX] = attrVal;
            } else {
              blockCssY.items[itemSelector + '.item-' + index][attrIdX] = attrVal;
            }

            setAttributes({
              blockCssY: {
                items: blockCssY.items
              }
            });
          }
        });
      });
      setTimeout(x => {//setAttributes({ blockCssY: { items: newValuesObjX } });
      }, 2000);
    }, [elements]);
    var mediaSites = [{
      id: 'email',
      label: 'Mail',
      count: 125,
      url: 'mailto:?subject={TITLE}&body={URL}',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fas fa-envelope'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'skype',
      label: 'Skype',
      count: 125,
      url: 'https://web.skype.com/share?url={URL}',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fab fa-skype'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'whatsapp',
      label: 'WhatsApp',
      count: 125,
      url: 'https://api.whatsapp.com/send?text={URL} - {TITLE}',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fab fa-whatsapp-square'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'tumblr',
      label: 'Tumblr',
      count: 125,
      url: 'https://www.tumblr.com/share/link?url={URL}',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fas fa-square-tumblr'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'viber',
      label: 'Viber',
      count: 125,
      url: 'viber://chat?number=12345678',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fab fa-viber'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, // {
    //   id: 'instagram', label: 'Instagram', count: 125, url: 'https://www.facebook.com/sharer.php?u={URL}', siteIcon: { library: 'fontAwesome', srcType: "class", /*class, html, img, svg */ iconSrc: 'fab fa-square-instagram', },
    //   styles: {
    //     textAlign: {},
    //     color: {},
    //     bgColor: {},
    //     padding: {},
    //     margin: {},
    //     display: {},
    //   },
    // },
    {
      id: 'reddit',
      label: 'Reddit',
      count: 125,
      url: 'http://www.reddit.com/submit?title={TITLE}&url={URL}',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fab fa-square-reddit'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'facebook',
      label: 'Facebook',
      count: 125,
      url: 'https://www.facebook.com/sharer.php?u={URL}',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fas fa-square-facebook'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'twitter',
      label: 'Twitter',
      count: 125,
      url: 'https://twitter.com/intent/tweet?url={URL}',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fas fa-square-twitter'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'linkedin',
      label: 'Linkedin',
      count: 125,
      url: 'https://www.linkedin.com/shareArticle?mini=true&url={URL}&title={TITLE}',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fas fa-square-facebook'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }, {
      id: 'pinterest',
      label: 'Pinterest',
      count: 125,
      url: 'https://www.pinterest.com/pin/create/button/?url={URL}&media={IMAGE}',
      siteIcon: {
        library: 'fontAwesome',
        srcType: "class",

        /*class, html, img, svg */
        iconSrc: 'fab fa-pinterest-square'
      },
      styles: {
        textAlign: {},
        color: {},
        bgColor: {},
        padding: {},
        margin: {},
        display: {}
      }
    }];

    function addMedia(option, index) {
      //var isExist = elements.items.find(x => x.label === option.label);
      //if (isExist == undefined) {
      //}
      var elementsX = elements.items.push(option);
      setAttributes({
        elements: { ...elements,
          items: elements.items
        }
      });
    }

    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function paddingControlItems(nextValues) {
      var responsive = elements.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...elements.styles,
        padding: responsive
      };
      setAttributes({
        elements: { ...elements,
          styles: styles
        }
      });
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[itemSelector]['padding-top'] != undefined ? blockCssY.items[itemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[itemSelector]['padding-right'] != undefined ? blockCssY.items[itemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[itemSelector]['padding-bottom'] != undefined ? blockCssY.items[itemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[itemSelector]['padding-left'] != undefined ? blockCssY.items[itemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlItems(nextValues) {
      var responsive = elements.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...elements.styles,
        margin: responsive
      };
      setAttributes({
        elements: { ...elements,
          styles: styles
        }
      });
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[itemSelector]['margin-top'] != undefined ? blockCssY.items[itemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[itemSelector]['margin-right'] !== undefined ? blockCssY.items[itemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[itemSelector]['margin-bottom'] !== undefined ? blockCssY.items[itemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[itemSelector]['margin-left'] !== undefined ? blockCssY.items[itemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypo(typoX) {
      setAttributes({
        elements: { ...elements,
          styles: typoX
        }
      });
      console.log(typoX);

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[itemSelector]['line-height'] != undefined ? blockCssY.items[itemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[itemSelector]['letter-spacing'] != undefined ? blockCssY.items[itemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-3",
      title: "General",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: wrapper.options.tag,
      options: [{
        label: 'No Wrapper',
        value: ''
      }, {
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'span',
        value: 'SPAN'
      }, {
        label: 'div',
        value: 'DIV'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...wrapper.options,
          tag: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items",
      initialOpen: true
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Add Media"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_14__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: mediaSites,
      buttonTitle: "Choose",
      onChange: addMedia,
      values: ""
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_sortablejs__WEBPACK_IMPORTED_MODULE_3__.ReactSortable, {
      list: elements.items,
      handle: '.handle',
      setList: item => {
        setAttributes({
          elements: { ...elements,
            items: item
          }
        });
      }
    }, elements.items.map((item, index) => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      key: item.id,
      className: ""
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "cursor-pointer hover:bg-red-500 hover:text-white px-1 py-1",
        onClick: ev => {
          var elementsX = elements.items.splice(index, 1);
          setAttributes({
            elements: { ...elements,
              items: elements.items
            }
          });
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_21__["default"]
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "handle cursor-pointer hover:bg-blue-500 hover:text-white px-1 py-1"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_20__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_22__["default"]
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "mx-2"
      }, item.label)),
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Label"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: item.label,
      onChange: newVal => {
        elements.items[index].label = newVal;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "URL"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: item.url,
      onChange: newVal => {
        elements.items[index].url = newVal;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_19__["default"], {
      library: item.siteIcon.library,
      srcType: item.siteIcon.srcType,
      iconSrc: item.siteIcon.iconSrc,
      onChange: arg => {
        //var options = { ...icon.options, srcType: arg.srcType, library: arg.library, iconSrc: arg.iconSrc };
        //setAttributes({ icon: { ...icon, options: options } });
        elements.items[index].siteIcon = {
          srcType: arg.srcType,
          library: arg.library,
          iconSrc: arg.iconSrc
        };
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: elements.items[index].styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(elements.items[index].styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.items[index].styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.items[index].styles,
          color: newValuesObj
        };
        elements.items[index].styles = styles;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: elements.items[index].styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(elements.items[index].styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.items[index].styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.items[index].styles,
          bgColor: newValuesObj
        };
        elements.items[index].styles = styles;
        setAttributes({
          elements: { ...elements,
            items: elements.items
          }
        }); // var newValuesObjX = {};
        // if (blockCssY.items[itemSelector] == undefined) {
        //   newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector], 'background-color': newValuesObj };
        // } else {
        //   newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector], 'background-color': newValuesObj };
        // }
        //setAttributes({ blockCssY: { items: newValuesObjX } });
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      className: "my-3",
      label: "Display label?",
      help: elements.options.showLabel ? 'Label is displaying' : 'Label is hidden',
      checked: elements.options.showLabel ? true : false,
      onChange: e => {
        var options = { ...elements.options,
          showLabel: elements.options.showLabel ? false : true
        };
        setAttributes({
          elements: { ...elements,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      className: "my-3",
      label: "Display icon?",
      help: elements.options.showIcon ? 'Icon is displaying' : 'Icon is hidden',
      checked: elements.options.showIcon ? true : false,
      onChange: e => {
        var options = { ...elements.options,
          showIcon: elements.options.showIcon ? false : true
        };
        setAttributes({
          elements: { ...elements,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: elements.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(elements.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.styles,
          display: newValuesObj
        };
        setAttributes({
          elements: { ...elements,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[itemSelector] = { ...blockCssY.items[itemSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: elements.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        //sdsd
        var newValuesObj = {};

        if (Object.keys(elements.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.styles,
          color: newValuesObj
        };
        setAttributes({
          elements: { ...elements,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[itemSelector] = { ...blockCssY.items[itemSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: elements.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        //
        var newValuesObj = {};

        if (Object.keys(elements.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = elements.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...elements.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          elements: { ...elements,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[itemSelector] = { ...blockCssY.items[itemSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: elements.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: elements.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_15__["default"], {
      typo: elements.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: elements
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Icon position"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Label',
        value: 'beforeLabel'
      }, {
        label: 'After Label',
        value: 'afterLabel'
      } // { label: 'Before Count', value: 'beforeCount' },
      // { label: 'After Count', value: 'afterCount' },
      ],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Label",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: label.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(label.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = label.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...label.styles,
          color: newValuesObj
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[labelSelector] = { ...blockCssY.items[labelSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: label.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(label.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = label.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...label.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[labelSelector] = { ...blockCssY.items[labelSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: label.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(label.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = label.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...label.styles,
          display: newValuesObj
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[labelSelector] = { ...blockCssY.items[labelSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: label.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = label.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...label.styles,
          padding: responsive
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[labelSelector] = blockCssY.items[labelSelector] != undefined ? blockCssY.items[labelSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[labelSelector]['padding-top'] != undefined ? blockCssY.items[labelSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[labelSelector]['padding-right'] != undefined ? blockCssY.items[labelSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[labelSelector]['padding-bottom'] != undefined ? blockCssY.items[labelSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[labelSelector]['padding-left'] != undefined ? blockCssY.items[labelSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: label.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = label.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...label.styles,
          margin: responsive
        };
        setAttributes({
          label: { ...label,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[labelSelector] = blockCssY.items[labelSelector] != undefined ? blockCssY.items[labelSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[labelSelector]['margin-top'] != undefined ? blockCssY.items[labelSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[labelSelector]['margin-right'] !== undefined ? blockCssY.items[labelSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[labelSelector]['margin-bottom'] !== undefined ? blockCssY.items[labelSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[labelSelector]['margin-left'] !== undefined ? blockCssY.items[labelSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[labelSelector] = { ...blockCssY.items[labelSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Wrapper Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, wrapperSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Item Selector"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, itemSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_17__["default"], {
      utm: {
        utm_source: 'BlockPostExcerpt',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: blockId
    }, elements.items.map((x, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        className: 'media-item item-' + index,
        href: x.url
      }, elements.options.showLabel && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "media-label"
      }, x.label), elements.options.showIcon && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: `icon ${x.siteIcon.iconSrc}`
      }), elements.options.showCount && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "media-count"
      }, "(", x.count, ")"));
    }))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/tabs/index.js":
/*!**********************************!*\
  !*** ./src/blocks/tabs/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");
/* harmony import */ var _components_css_cursor__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/css-cursor */ "./src/components/css-cursor/index.js");
/* harmony import */ var _components_css_text_align__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-text-align */ "./src/components/css-text-align/index.js");













const {
  RawHTML
} = wp.element;











var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__.registerBlockType)("post-grid/tabs", {
  title: "Tabs",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M19.3872 3.62674H3.62677C2.66363 3.62674 1.87561 4.41476 1.87561 5.3779V17.636C1.87561 18.5991 2.66363 19.3872 3.62677 19.3872H19.3872C20.3503 19.3872 21.1383 18.5991 21.1383 17.636V5.3779C21.1383 4.41476 20.3503 3.62674 19.3872 3.62674ZM18.5116 17.636H4.50235C4.02078 17.636 3.62677 17.242 3.62677 16.7604V6.25348C3.62677 5.77191 4.02078 5.3779 4.50235 5.3779H12.3826V8.00463C12.3826 8.4862 12.7766 8.88021 13.2581 8.88021H19.3872V16.7604C19.3872 17.242 18.9932 17.636 18.5116 17.636Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          content: '',
          tag: 'div',
          class: 'pg-accordion'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    items: {
      type: 'array',
      default: [{
        isActive: false,
        headerText: 'What is Lorem Ipsum?',
        content: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',
        icon: '',
        iconToggle: '',
        styles: {}
      }]
    },
    header: {
      type: 'object',
      default: {
        options: {
          text: 'What is Lorem Ipsum?',
          tag: 'div',
          class: 'tab-nav '
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {},
          cursor: {},
          borderRadius: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    headerActive: {
      type: 'object',
      default: {
        options: {
          text: 'What is Lorem Ipsum?',
          tag: 'div',
          class: 'tab-nav ',
          activeIndex: 0
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    headerWrap: {
      type: 'object',
      default: {
        options: {
          tag: 'div',
          class: 'tabs-navs '
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    content: {
      type: 'object',
      default: {
        options: {
          text: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',
          tag: 'div',
          class: 'pg-accordion-content'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'fas fa-chevron-right',
          class: 'icon',
          positon: 'beforeHeader',
          enableToggle: 'yes'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    iconToggle: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: 'fas fa-chevron-down',
          class: 'iconToggle'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var items = attributes.items;
    var wrapper = attributes.wrapper;
    var headerWrap = attributes.headerWrap;
    var header = attributes.header;
    var headerActive = attributes.headerActive;
    var content = attributes.content;
    var icon = attributes.icon;
    var iconToggle = attributes.iconToggle;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    const [isLoading, setisLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(window.PostGridPluginData);
    const [isOpen, setisOpen] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false); // Wrapper CSS Class Selectors

    var wrapperSelector = blockClass;
    var headerWrapSelector = blockClass + ' .tabs-navs';
    var headerSelector = blockClass + ' .tab-nav';
    var headerActiveSelector = blockClass + ' .tab-nav.active';
    var contentSelector = blockClass + ' .pg-accordion-content';
    const iconSelector = blockClass + ' .icon-wrap';
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);
    const [iconToggleHtml, setIconToggleHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      var iconSrc = iconToggle.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconToggleHtml(iconHtml);
    }, [iconToggle]);

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconToggle(arg) {
      var options = { ...iconToggle.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        iconToggle: { ...iconToggle,
          options: options
        }
      });
    }

    function onChangeHeaderTypo(typoX) {
      setAttributes({
        header: { ...header,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontFamily[breakPointX] != undefined) {
        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'font-family': typoX.fontFamily
        };
      } else {
        //typoX.fontFamily[breakPointX] = {};
        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[headerSelector]['font-size'] != undefined ? blockCssY.items[headerSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector], 'font-size': fontSizeX };

        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[headerSelector]['line-height'] != undefined ? blockCssY.items[headerSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector], 'line-height': lineHeightX };

        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[headerSelector]['letter-spacing'] != undefined ? blockCssY.items[headerSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit; //blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector], 'letter-spacing': letterSpacingX };

        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'text-transform': typoX.textTransform
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControlHeader(nextValues) {
      var responsive = header.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...header.styles,
        padding: responsive
      };
      setAttributes({
        header: { ...header,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[headerSelector] = blockCssY.items[headerSelector] != undefined ? blockCssY.items[headerSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[headerSelector]['padding-top'] != undefined ? blockCssY.items[headerSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'padding-top': paddingTop
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[headerSelector]['padding-right'] != undefined ? blockCssY.items[headerSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'padding-right': paddingRight
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[headerSelector]['padding-bottom'] != undefined ? blockCssY.items[headerSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[headerSelector]['padding-left'] != undefined ? blockCssY.items[headerSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'padding-left': paddingLeft
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function paddingControlNavsWrap(nextValues) {
      var responsive = headerWrap.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...headerWrap.styles,
        padding: responsive
      };
      setAttributes({
        headerWrap: { ...headerWrap,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[headerWrapSelector] = blockCssY.items[headerWrapSelector] != undefined ? blockCssY.items[headerWrapSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[headerWrapSelector]['padding-top'] != undefined ? blockCssY.items[headerWrapSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector],
          'padding-top': paddingTop
        }; //itemsX[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[headerWrapSelector]['padding-right'] != undefined ? blockCssY.items[headerWrapSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector],
          'padding-right': paddingRight
        }; //itemsX[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[headerWrapSelector]['padding-bottom'] != undefined ? blockCssY.items[headerWrapSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[headerWrapSelector]['padding-left'] != undefined ? blockCssY.items[headerWrapSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector],
          'padding-left': paddingLeft
        }; //itemsX[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControlNavsWrap(nextValues) {
      var responsive = headerWrap.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...headerWrap.styles,
        margin: responsive
      };
      setAttributes({
        headerWrap: { ...headerWrap,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[headerWrapSelector] = blockCssY.items[headerWrapSelector] != undefined ? blockCssY.items[headerWrapSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[headerWrapSelector]['margin-top'] != undefined ? blockCssY.items[headerWrapSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector],
          'margin-top': marginTop
        }; //itemsX[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[headerWrapSelector]['margin-right'] !== undefined ? blockCssY.items[headerWrapSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector],
          'margin-right': marginRight
        }; //itemsX[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[headerWrapSelector]['margin-bottom'] !== undefined ? blockCssY.items[headerWrapSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector],
          'margin-bottom': marginBottom
        }; //itemsX[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[headerWrapSelector]['margin-left'] !== undefined ? blockCssY.items[headerWrapSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector],
          'margin-left': marginLeft
        }; //itemsX[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function paddingControlContent(nextValues) {
      var responsive = content.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...content.styles,
        padding: responsive
      };
      setAttributes({
        content: { ...content,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[contentSelector] = blockCssY.items[contentSelector] != undefined ? blockCssY.items[contentSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[contentSelector]['padding-top'] != undefined ? blockCssY.items[contentSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'padding-top': paddingTop
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[contentSelector]['padding-right'] != undefined ? blockCssY.items[contentSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'padding-right': paddingRight
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[contentSelector]['padding-bottom'] != undefined ? blockCssY.items[contentSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[contentSelector]['padding-left'] != undefined ? blockCssY.items[contentSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'padding-left': paddingLeft
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControlHeader(nextValues) {
      var responsive = header.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...header.styles,
        margin: responsive
      };
      setAttributes({
        header: { ...header,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[headerSelector] = blockCssY.items[headerSelector] != undefined ? blockCssY.items[headerSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[headerSelector]['margin-top'] != undefined ? blockCssY.items[headerSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'margin-top': marginTop
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[headerSelector]['margin-right'] !== undefined ? blockCssY.items[headerSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'margin-right': marginRight
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[headerSelector]['margin-bottom'] !== undefined ? blockCssY.items[headerSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'margin-bottom': marginBottom
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[headerSelector]['margin-left'] !== undefined ? blockCssY.items[headerSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'margin-left': marginLeft
        }; //itemsX[headerSelector] = { ...blockCssY.items[headerSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControlContent(nextValues) {
      var responsive = content.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...content.styles,
        margin: responsive
      };
      setAttributes({
        content: { ...content,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[contentSelector] = blockCssY.items[contentSelector] != undefined ? blockCssY.items[contentSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[contentSelector]['margin-top'] != undefined ? blockCssY.items[contentSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'margin-top': marginTop
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[contentSelector]['margin-right'] !== undefined ? blockCssY.items[contentSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'margin-right': marginRight
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[contentSelector]['margin-bottom'] !== undefined ? blockCssY.items[contentSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'margin-bottom': marginBottom
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[contentSelector]['margin-left'] !== undefined ? blockCssY.items[contentSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[contentSelector] = { ...blockCssY.items[contentSelector],
          'margin-left': marginLeft
        }; //itemsX[contentSelector] = { ...blockCssY.items[contentSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[wrapperSelector] = { ...blockCssY.items[wrapperSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2",
      title: "header",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Navs Wrap",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Text Align"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_text_align__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: headerWrap.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(headerWrap.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = headerWrap.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...headerWrap.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          headerWrap: { ...headerWrap,
            styles: styles
          }
        });
        blockCssY.items[headerWrapSelector] = { ...blockCssY.items[headerWrapSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: content.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlNavsWrap(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: content.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlNavsWrap(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Navs",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: header.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...header.options,
          tag: newVal
        };
        setAttributes({
          header: { ...header,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: header.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(header.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = header.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...header.styles,
          color: newValuesObj
        };
        setAttributes({
          header: { ...header,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: header.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(header.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = header.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...header.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          header: { ...header,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[headerSelector] = { ...blockCssY.items[headerSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Active Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: headerActive.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(headerActive.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = headerActive.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...headerActive.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          headerActive: { ...headerActive,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[headerActiveSelector] = { ...blockCssY.items[headerActiveSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: header.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlHeader(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: header.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlHeader(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Cursor"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_cursor__WEBPACK_IMPORTED_MODULE_17__["default"], {
      val: header.styles.cursor[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(header.styles.cursor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = header.styles.cursor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...header.styles,
          cursor: newValuesObj
        };
        setAttributes({
          header: { ...header,
            styles: styles
          }
        });
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'cursor': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Border Radius"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: header.styles.borderRadius[breakPointX],
      onChange: nextValues => {
        var newValuesObj = {};

        if (Object.keys(header.styles.borderRadius).length == 0) {
          newValuesObj[breakPointX] = nextValues.top + ' ' + nextValues.right + ' ' + nextValues.bottom + ' ' + nextValues.left;
        } else {
          newValuesObj = header.styles.borderRadius;
          newValuesObj[breakPointX] = nextValues.top + ' ' + nextValues.right + ' ' + nextValues.bottom + ' ' + nextValues.left;
          ;
        }

        var styles = { ...header.styles,
          borderRadius: newValuesObj
        };
        setAttributes({
          header: { ...header,
            styles: styles
          }
        });
        blockCssY.items[headerSelector] = { ...blockCssY.items[headerSelector],
          'border-radius': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_11__["default"], {
      typo: header.styles,
      breakPointX: breakPointX,
      onChange: onChangeHeaderTypo,
      setAttributes: setAttributes,
      obj: header
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Content",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: content.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...content.options,
          tag: newVal
        };
        setAttributes({
          content: { ...content,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: content.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(content.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = content.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...content.styles,
          color: newValuesObj
        };
        setAttributes({
          content: { ...content,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[contentSelector] = { ...blockCssY.items[contentSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: content.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(content.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = content.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...content.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          content: { ...content,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[contentSelector] = { ...blockCssY.items[contentSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: content.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlContent(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: content.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlContent(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_16__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Choose Toggled Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_16__["default"], {
      library: iconToggle.options.library,
      srcType: iconToggle.options.srcType,
      iconSrc: iconToggle.options.iconSrc,
      onChange: onChangeIconToggle
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Header Text',
        value: 'beforeHeader'
      }, {
        label: 'After Header Text',
        value: 'afterHeader'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Enable Icon Toggle"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: icon.options.enableToggle,
      options: [{
        label: 'Yes',
        value: 'yes'
      }, {
        label: 'No',
        value: 'no'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          enableToggle: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_11__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Text "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, wrapperSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_13__["default"], {
      utm: {
        utm_source: 'BlockText',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: [blockId]
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "bg-blue-500 p-2 px-5 text-white text-center my-4 cursor-pointer",
      onClick: ev => {
        var itemx = items.concat({
          isActive: false,
          headerText: 'What is Lorem Ipsum?',
          content: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',
          icon: '',
          iconToggle: '',
          styles: {}
        });
        setAttributes({
          items: itemx
        });
      }
    }, "Add"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: headerWrap.options.class
    }, items.map((item, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: `inline-block cursor-pointer ${headerActive.options.activeIndex == i ? 'active' : ''} ${header.options.class}`,
        onClick: ev => {
          var options = { ...headerActive.options,
            activeIndex: i
          };
          setAttributes({
            headerActive: { ...headerActive,
              options: options
            }
          });
        }
      }, icon.options.position == 'beforeHeader' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, icon.options.enableToggle == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, headerActive.options.activeIndex != i && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap ",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      }), headerActive.options.activeIndex == i && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap ",
        dangerouslySetInnerHTML: {
          __html: iconToggleHtml
        }
      })), icon.options.enableToggle == 'no' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap ",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.RichText, {
        tagName: "span",
        value: item.headerText,
        allowedFormats: ['core/bold', 'core/italic', 'core/link'],
        onChange: content => {
          items[i].headerText = content;
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
        },
        placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Start Writing...')
      }), icon.options.position == 'afterHeader' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, icon.options.enableToggle == 'yes' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, headerActive.options.activeIndex != i && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap float-right",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      }), headerActive.options.activeIndex == i && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap float-right",
        dangerouslySetInnerHTML: {
          __html: iconToggleHtml
        }
      })), icon.options.enableToggle == 'no' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "icon-wrap float-right",
        dangerouslySetInnerHTML: {
          __html: iconHtml
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "text-lg cursor-pointer px-2 text-red-500  py-1 float-right icon-close",
        onClick: ev => {
          items.splice(i, 1);
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
          ev.preventDefault();
        }
      })));
    })), items.map((item, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, headerActive.options.activeIndex == i && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.RichText, {
        className: content.options.class,
        tagName: "div",
        value: item.content,
        allowedFormats: ['core/bold', 'core/italic', 'core/link'],
        onChange: content => {
          items[i].content = content;
          var ssdsd = items.concat([]);
          setAttributes({
            items: ssdsd
          });
        },
        placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Start Writing...')
      }));
    })))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null; //return null;
  }
});

/***/ }),

/***/ "./src/blocks/terms-list/index.js":
/*!****************************************!*\
  !*** ./src/blocks/terms-list/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_icon_picker__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/icon-picker */ "./src/components/icon-picker/index.js");














const {
  RawHTML
} = wp.element;










var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_4__.registerBlockType)("post-grid/terms-list", {
  title: "Terms List",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M38 209.5C38 206.739 40.2386 204.5 43 204.5H483C485.761 204.5 488 206.739 488 209.5V259.5C488 262.261 485.761 264.5 483 264.5H43C40.2386 264.5 38 262.261 38 259.5V209.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M38 315.5C38 312.739 40.2386 310.5 43 310.5H365C367.761 310.5 370 312.739 370 315.5V365.5C370 368.261 367.761 370.5 365 370.5H43C40.2386 370.5 38 368.261 38 365.5V315.5Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
      d: "M129.861 115.454C128.257 117.058 127.356 119.233 127.356 121.501C127.356 123.769 128.257 125.944 129.861 127.548C131.465 129.151 133.64 130.052 135.908 130.052C138.176 130.052 140.351 129.151 141.955 127.548C143.558 125.944 144.459 123.769 144.459 121.501C144.459 119.233 143.558 117.058 141.955 115.454C140.351 113.85 138.176 112.949 135.908 112.949C133.64 112.949 131.465 113.85 129.861 115.454ZM71.4472 153.066C68.5447 153.066 65.6018 151.977 63.3443 149.72C61.1271 147.503 59.9983 144.6 60.0386 141.657V101.344C60.0386 98.4418 61.1271 95.4989 63.3443 93.2817C65.5615 91.0645 68.4641 89.9357 71.4472 89.9357L127.805 89.9357C130.788 89.9357 133.69 91.0645 135.908 93.2817L156.064 113.438C160.539 117.913 160.539 125.089 156.064 129.563L135.908 149.72C133.69 151.937 130.788 153.066 127.885 153.066H71.4472ZM110.712 161.128V169.191H55.322C52.3792 169.231 49.4363 168.062 47.2191 165.845C45.0019 163.628 43.8731 160.725 43.8731 157.823L43.8731 114.446L51.9357 114.446L52.2582 160.806L110.712 161.128Z"
    }))
  },
  attributes: {
    wrapper: {
      type: 'object',
      default: {
        options: {
          class: 'inline-block'
        },
        styles: {
          display: {},
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    taxonomies: {
      type: 'object',
      default: {
        options: {
          taxName: ''
        }
      }
    },
    items: {
      type: 'object',
      default: {
        options: {
          prefix: '',
          postfix: '',
          viewType: 'list',
          // inline, grid, list, accordion
          hierarchicaly: false,
          queryPosts: false,
          accordionOpen: false,
          linkToTerm: false,
          postCountPosition: 'beforeTitle',
          //beforeTitle, afterTtile, afterPosts, beforePosts
          postCountText: 'Total Posts %s',
          gridColNumber: 4,
          gridColGap: '15px',
          gridRowGap: '15px',
          hideEmpty: false,
          maxCount: 99,
          postCount: false,
          class: 'item inline-block',
          linkTarget: '',
          linkAttr: []
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    icon: {
      type: 'object',
      default: {
        options: {
          library: 'fontAwesome',
          srcType: "class",

          /*class, html, img, svg */
          iconSrc: '',
          position: 'beforeFronttext',

          /*before, after, prefix, postfix */
          class: 'icon'
        },
        styles: {
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          textAlign: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          fontWeight: {
            "Desktop": "700"
          },
          textDecoration: {} //overline, line-through, underline

        }
      }
    },
    separator: {
      type: 'object',
      default: {
        options: {
          class: 'inline-block',
          text: ', '
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {}
        }
      }
    },
    frontText: {
      type: 'object',
      default: {
        options: {
          text: 'Tags: ',
          class: 'inline-block'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var wrapper = attributes.wrapper;
    var items = attributes.items;
    var separator = attributes.separator;
    var frontText = attributes.frontText;
    var icon = attributes.icon;
    var blockCssY = attributes.blockCssY;
    var customCss = attributes.customCss;
    var taxonomies = attributes.taxonomies;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
    const [postObjects, setPostObjects] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Wrapper CSS Class Selectors

    const itemWrapSelector = blockClass;
    const itemSelector = blockClass + ' .item';
    const itemTitleSelector = blockClass + ' .termTitle';
    const itemSeparatorSelector = blockClass + ' .separator';
    const frontTextSelector = blockClass + ' .frontText';
    const postCountSelector = blockClass + ' .postCount';
    const iconSelector = blockClass + ' .icon';
    var breakPointList = [];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    const [categoryCount, setcategoryCount] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(0); // Using the hook.

    const [postCategoriesData, setPostCategoriesData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [categories, setCategories] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // Using the hook.

    const [postCategoriesX, setPostCategoriesX] = (0,_wordpress_core_data__WEBPACK_IMPORTED_MODULE_3__.useEntityProp)('postType', postType, taxonomies.options.taxName, postId);
    var dummyCats = [{
      "id": 1,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 1",
      "slug": "category-1",
      "taxonomy": "category_tax"
    }, {
      "id": 2,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 2",
      "slug": "category-2",
      "taxonomy": "category_tax",
      children: [{
        "id": 21,
        "count": 1,
        "description": "",
        "link": "#",
        "name": "Child Category 1",
        "slug": "category-3",
        "taxonomy": "category_tax"
      }, {
        "id": 22,
        "count": 1,
        "description": "",
        "link": "#",
        "name": "Child Category 2",
        "slug": "category-3",
        "taxonomy": "category_tax"
      }, {
        "id": 23,
        "count": 1,
        "description": "",
        "link": "#",
        "name": "Child Category 3",
        "slug": "category-3",
        "taxonomy": "category_tax"
      }],
      posts: [{
        "link": "#",
        "name": "Post Title 1"
      }, {
        "link": "#",
        "name": "Post Title 2"
      }, {
        "link": "#",
        "name": "Post Title 3"
      }]
    }, {
      "id": 3,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 3",
      "slug": "category-3",
      "taxonomy": "category_tax"
    }, {
      "id": 4,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 4",
      "slug": "category-4",
      "taxonomy": "category_tax"
    }, {
      "id": 5,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 5",
      "slug": "category-5",
      "taxonomy": "category_tax"
    }, {
      "id": 6,
      "count": 1,
      "description": "",
      "link": "#",
      "name": "Category 6",
      "slug": "category-6",
      "taxonomy": "category_tax"
    }];
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setPostCategoriesData([]);
      setCategories([]);
      setcategoryCount(categories.length - 1);

      if (postCategoriesX != undefined) {
        for (x in postCategoriesX) {
          var catId = postCategoriesX[x];
          var assd = x;

          if (x) {
            _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
              path: '/wp/v2/' + taxonomies.options.taxName + '/' + catId,
              method: 'GET'
            }).then(res => {
              setPostCategoriesData(current => [...current, res]);
              setCategories(current => [...current, res]);
            });
          }
        }
      } else {
        setPostCategoriesData(dummyCats);
        setCategories(dummyCats);
      }
    }, [postCategoriesX]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var asdasd = postCategoriesData.slice(0, items.options.maxCount);
      setCategories(asdasd);
    }, [postCategoriesData]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var maxCount = items.options.maxCount.length > 0 ? items.options.maxCount : 99;

      if (postCategoriesX != undefined && postCategoriesX.length > 0) {
        setcategoryCount(categories.length - 1);
        var asdasd = postCategoriesData.slice(0, maxCount);
        setCategories(asdasd);
      } else {
        var asdasd = dummyCats.slice(0, maxCount);
        setCategories(asdasd);
      }
    }, [items]);
    const [iconHtml, setIconHtml] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('');
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      var iconSrc = icon.options.iconSrc;
      var iconHtml = `<span class="${iconSrc}"></span>`;
      setIconHtml(iconHtml);
    }, [icon]);

    function setTaxonomy(option, index) {
      var options = { ...taxonomies.options,
        taxName: option.id
      };
      setAttributes({
        taxonomies: { ...taxonomies,
          options: options
        }
      }); // var attrExist = false;
      // var data = queryPrams[index];
      // var multiple = data.multiple;
      // var isExist = queryArgs.items.map((item) => {
      //   if (item.id == index) {
      //     return true;
      //   }
      // })
      // var items = queryArgs.items.concat([data])
      // setAttributes({ queryArgs: { items: items } });
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      }); // setAttributes({ postTitle: postTitle });
      // setAttributes({ wrapper: wrapper });

      _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
        path: '/post-grid/v2/post_type_objects',
        method: 'POST',
        data: {
          postTypes: [postType]
        }
      }).then(res => {
        setPostObjects(res);
      });
      generateBlockCssY();
    }, [clientId]);

    function onChangeIcon(arg) {
      var options = { ...icon.options,
        srcType: arg.srcType,
        library: arg.library,
        iconSrc: arg.iconSrc
      };
      setAttributes({
        icon: { ...icon,
          options: options
        }
      });
    }

    function onChangeIconTypo(typoX) {
      setAttributes({
        icon: { ...icon,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector]['font-size'] : {};

        if (fontSizeX[breakPointX] == undefined) {
          fontSizeX[breakPointX] = '';
        }

        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'font-size': fontSizeX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[iconSelector]['line-height'] != undefined ? blockCssY.items[iconSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector], 'line-height': lineHeightX };

        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'text-decoration': str
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControlItems(nextValues) {
      var responsive = items.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...items.styles,
        padding: responsive
      };
      setAttributes({
        items: { ...items,
          styles: styles
        }
      });
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[itemSelector]['padding-top'] != undefined ? blockCssY.items[itemSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-top': paddingTop
        };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[itemSelector]['padding-right'] != undefined ? blockCssY.items[itemSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-right': paddingRight
        };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[itemSelector]['padding-bottom'] != undefined ? blockCssY.items[itemSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-bottom': paddingBottom
        };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[itemSelector]['padding-left'] != undefined ? blockCssY.items[itemSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'padding-left': paddingLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function marginControlItems(nextValues) {
      var responsive = items.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...items.styles,
        margin: responsive
      };
      setAttributes({
        items: { ...items,
          styles: styles
        }
      });
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[itemSelector] = blockCssY.items[itemSelector] != undefined ? blockCssY.items[itemSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[itemSelector]['margin-top'] != undefined ? blockCssY.items[itemSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-top': marginTop
        };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[itemSelector]['margin-right'] !== undefined ? blockCssY.items[itemSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-right': marginRight
        };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[itemSelector]['margin-bottom'] !== undefined ? blockCssY.items[itemSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-bottom': marginBottom
        };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[itemSelector]['margin-left'] !== undefined ? blockCssY.items[itemSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'margin-left': marginLeft
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypo(typoX) {
      setAttributes({
        items: { ...items,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[itemSelector]['font-size'] != undefined ? blockCssY.items[itemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[itemSelector]['line-height'] != undefined ? blockCssY.items[itemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[itemSelector]['letter-spacing'] != undefined ? blockCssY.items[itemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function onChangeTypoFrontText(typoX) {
      setAttributes({
        items: { ...items,
          styles: typoX
        }
      });
      var newValuesObjX = {};

      if (typoX.fontFamily[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[itemSelector]['font-size'] != undefined ? blockCssY.items[itemSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 0;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[itemSelector]['line-height'] != undefined ? blockCssY.items[itemSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[itemSelector]['letter-spacing'] != undefined ? blockCssY.items[itemSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit;
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr; //typoX.textDecoration[breakPointX] = typoX.textDecoration[breakPointX].join(' ');

        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        blockCssY.items[itemSelector] = { ...blockCssY.items[itemSelector],
          'text-transform': typoX.textTransform
        };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      } //return false;


      var reponsiveCssMobile = '';

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCssMobile += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCssMobile += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssMobile += attrName + ':' + attrValue + ';';
          }

          reponsiveCssMobile += '}';
        }

        reponsiveCssMobile += '}';
      }

      var reponsiveCssTablet = '';

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCssTablet += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCssTablet += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssTablet += attrName + ':' + attrValue + ';';
          }

          reponsiveCssTablet += '}';
        }

        reponsiveCssTablet += '}';
      }

      var reponsiveCssDesktop = '';

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCssDesktop += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCssDesktop += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCssDesktop += attrName + ':' + attrValue + ';';
          }

          reponsiveCssDesktop += '}';
        }

        reponsiveCssDesktop += '}';
      }

      var reponsiveCss = reponsiveCssMobile + reponsiveCssTablet + reponsiveCssDesktop;
      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    var [linkAttrItems, setlinkAttrItems] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({}); // Using the hook.

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
      linkAttrObj();
      generateBlockCssY();
    }, [items]);

    var linkAttrObj = () => {
      var sdsd = {};
      items.options.linkAttr.map(x => {
        if (x.val) sdsd[x.id] = x.val;
      });
      setlinkAttrItems(sdsd);
    };

    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];

    if (wp.data.dispatch('core/edit-post') == null) {
      const {
        __experimentalSetPreviewDeviceType: setPreviewDeviceType
      } = wp.data.dispatch('core/edit-widgets');
    } else {
      const {
        __experimentalSetPreviewDeviceType: setPreviewDeviceType
      } = wp.data.dispatch('core/edit-post');
    }

    const post = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_6__.useSelect)(select => select('core').getEntityRecord('postType', context['postType'], context['postId']));
    const termstaxonomy = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_6__.useSelect)(select => select('core').getEntityRecords('taxonomy', 'category', [4, 5]));

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.AlignmentToolbar, {
      value: wrapper.styles.textAlign,
      onChange: newVal => {
        var styles = { ...postfix.styles,
          textAlign: newVal
        };
        setAttributes({
          postfix: { ...postfix,
            styles: styles
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_8__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Select Taxonomy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: postObjects,
      buttonTitle: "Choose",
      onChange: setTaxonomy,
      values: taxonomies.options.taxName
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Taxonomy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: taxonomies.options.taxName,
      onChange: newVal => {
        var options = { ...taxonomies.options,
          taxName: newVal
        };
        setAttributes({
          taxonomies: { ...taxonomies,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items Wrapper",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Wrapper Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: wrapper.options.class,
      onChange: newVal => {
        var options = { ...wrapper.options,
          class: newVal
        };
        setAttributes({
          wrapper: { ...wrapper,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_18__["default"], {
      val: wrapper.styles.display[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(wrapper.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = wrapper.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...wrapper.styles,
          display: newValuesObj
        };
        setAttributes({
          wrapper: { ...wrapper,
            styles: styles
          }
        });
        blockCssY.items[itemWrapSelector] = { ...blockCssY.items[itemWrapSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Items",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "View Type"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.viewType,
      options: [{
        label: 'Accordion',
        value: 'accordion'
      }, {
        label: 'Inline',
        value: 'inline'
      }, {
        label: 'Grid',
        value: 'grid'
      }, {
        label: 'List',
        value: 'list'
      }],
      onChange: newVal => {
        var options = { ...items.options,
          viewType: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Query Posts"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.queryPosts,
      options: [{
        label: 'True',
        value: 1
      }, {
        label: 'False',
        value: 0
      }],
      onChange: newVal => {
        var options = { ...items.options,
          queryPosts: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Hide Empty Terms"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.hideEmpty,
      options: [{
        label: 'True',
        value: 1
      }, {
        label: 'False',
        value: 0
      }],
      onChange: newVal => {
        var options = { ...items.options,
          hideEmpty: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), items.options.viewType == 'accordion' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Accordion Open"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.accordionOpen,
      options: [{
        label: 'True',
        value: 1
      }, {
        label: 'False',
        value: 0
      }],
      onChange: newVal => {
        var options = { ...items.options,
          accordionOpen: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), items.options.viewType == 'grid' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Post Count Position"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.postCountPosition,
      options: [{
        label: 'Before Title',
        value: 'beforeTitle'
      }, {
        label: 'After Ttile',
        value: 'afterTtile'
      }, {
        label: 'Before Posts',
        value: 'beforePosts'
      }, {
        label: 'After Posts',
        value: 'afterPosts'
      }],
      onChange: newVal => {
        var options = { ...items.options,
          postCountPosition: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Post Count Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.postCountText,
      onChange: newVal => {
        var options = { ...items.options,
          postCountText: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link To Term"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.linkToTerm,
      options: [{
        label: 'True',
        value: 1
      }, {
        label: 'False',
        value: 0
      }],
      onChange: newVal => {
        var options = { ...items.options,
          linkToTerm: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), items.options.viewType == 'accordion' || items.options.viewType == 'list' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Hierarchicaly"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.hierarchicaly,
      options: [{
        label: 'True',
        value: 1
      }, {
        label: 'False',
        value: 0
      }],
      onChange: newVal => {
        var options = { ...items.options,
          hierarchicaly: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ToggleControl, {
      label: "Display Post Count",
      help: items.options.postCount ? 'Post Count Enabled' : 'Post Count Disabled',
      checked: items.options.postCount ? true : false,
      onChange: e => {
        var options = { ...items.options,
          postCount: items.options.postCount ? false : true
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Item Class"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.class,
      onChange: newVal => {
        var options = { ...items.options,
          class: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Max Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.maxCount,
      onChange: newVal => {
        var options = { ...items.options,
          maxCount: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Link Target"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: items.options.linkTarget,
      options: [{
        label: '_self',
        value: '_self'
      }, {
        label: '_blank',
        value: '_blank'
      }, {
        label: '_parent',
        value: '_parent'
      }, {
        label: '_top',
        value: '_top'
      }],
      onChange: newVal => {
        var options = { ...items.options,
          linkTarget: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Prefix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.prefix,
      onChange: newVal => {
        var options = { ...items.options,
          prefix: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Postfix"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: items.options.postfix,
      onChange: newVal => {
        var options = { ...items.options,
          postfix: newVal
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Attributes"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: " cursor-pointer px-3 text-white py-1 bg-blue-600",
      onClick: ev => {
        var sdsd = items.options.linkAttr.concat({
          id: '',
          val: ''
        });
        var options = { ...items.options,
          linkAttr: sdsd
        };
        setAttributes({
          items: { ...items,
            options: options
          }
        });
        linkAttrObj();
      }
    }, "Add")), items.options.linkAttr.length > 0 && items.options.linkAttr.map((x, i) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: items.options.linkAttr[i].id,
        onChange: newVal => {
          items.options.linkAttr[i].id = newVal;
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
        className: "mr-2",
        value: x.val,
        onChange: newVal => {
          items.options.linkAttr[i].val = newVal;
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "text-lg cursor-pointer px-3 text-white py-1 bg-red-400 icon-close",
        onClick: ev => {
          items.options.linkAttr.splice(i, 1);
          var ssdsd = items.options.linkAttr.concat([]);
          var options = { ...items.options,
            linkAttr: ssdsd
          };
          setAttributes({
            items: { ...items,
              options: options
            }
          });
        }
      })));
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: items.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          color: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            color: newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            color: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: items.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(items.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = items.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...items.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          items: { ...items,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[itemSelector] == undefined) {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'background-color': newValuesObj
          };
        } else {
          newValuesObjX[itemSelector] = { ...blockCssY.items[itemSelector],
            'background-color': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            items: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: items.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: items.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControlItems(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: items.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypo,
      setAttributes: setAttributes,
      obj: items
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Icon",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Choose Icon"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_picker__WEBPACK_IMPORTED_MODULE_19__["default"], {
      library: icon.options.library,
      srcType: icon.options.srcType,
      iconSrc: icon.options.iconSrc,
      onChange: onChangeIcon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Icon postion"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.options.position,
      options: [{
        label: 'Choose Position',
        value: ''
      }, {
        label: 'Before Front text',
        value: 'beforeFronttext'
      }, {
        label: 'After Front text',
        value: 'afterFronttext'
      }, {
        label: 'Before Items',
        value: 'beforeItems'
      }, {
        label: 'After Items',
        value: 'afterItems'
      }],
      onChange: newVal => {
        var options = { ...icon.options,
          position: newVal
        };
        setAttributes({
          icon: { ...icon,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          color: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: icon.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.SelectControl, {
      label: "",
      value: icon.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(icon.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = icon.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...icon.styles,
          display: newValuesObj
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[iconSelector] = { ...blockCssY.items[iconSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.padding[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.padding;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          padding: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var paddingTop = blockCssY.items[iconSelector]['padding-top'] != undefined ? blockCssY.items[iconSelector]['padding-top'] : {};
          paddingTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-top': paddingTop
          };
        }

        if (nextValues.right != undefined) {
          var paddingRight = blockCssY.items[iconSelector]['padding-right'] != undefined ? blockCssY.items[iconSelector]['padding-right'] : {};
          paddingRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-right': paddingRight
          };
        }

        if (nextValues.bottom != undefined) {
          var paddingBottom = blockCssY.items[iconSelector]['padding-bottom'] != undefined ? blockCssY.items[iconSelector]['padding-bottom'] : {};
          paddingBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-bottom': paddingBottom
          };
        }

        if (nextValues.left != undefined) {
          var paddingLeft = blockCssY.items[iconSelector]['padding-left'] != undefined ? blockCssY.items[iconSelector]['padding-left'] : {};
          paddingLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'padding-left': paddingLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalBoxControl, {
      label: "",
      values: icon.styles.margin[breakPointX],
      onChange: nextValues => {
        var responsive = icon.styles.margin;
        responsive[breakPointX] = nextValues;
        var styles = { ...icon.styles,
          margin: responsive
        };
        setAttributes({
          icon: { ...icon,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        blockCssY.items[iconSelector] = blockCssY.items[iconSelector] != undefined ? blockCssY.items[iconSelector] : {};

        if (nextValues.top != undefined) {
          var marginTop = blockCssY.items[iconSelector]['margin-top'] != undefined ? blockCssY.items[iconSelector]['margin-top'] : {};
          marginTop[breakPointX] = nextValues.top;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-top': marginTop
          };
        }

        if (nextValues.right != undefined) {
          var marginRight = blockCssY.items[iconSelector]['margin-right'] !== undefined ? blockCssY.items[iconSelector]['margin-right'] : {};
          marginRight[breakPointX] = nextValues.right;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-right': marginRight
          };
        }

        if (nextValues.bottom != undefined) {
          var marginBottom = blockCssY.items[iconSelector]['margin-bottom'] !== undefined ? blockCssY.items[iconSelector]['margin-bottom'] : {};
          marginBottom[breakPointX] = nextValues.bottom;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-bottom': marginBottom
          };
        }

        if (nextValues.left != undefined) {
          var marginLeft = blockCssY.items[iconSelector]['margin-left'] !== undefined ? blockCssY.items[iconSelector]['margin-left'] : {};
          marginLeft[breakPointX] = nextValues.left;
          blockCssY.items[iconSelector] = { ...blockCssY.items[iconSelector],
            'margin-left': marginLeft
          };
        }

        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: icon.styles,
      breakPointX: breakPointX,
      onChange: onChangeIconTypo,
      setAttributes: setAttributes,
      obj: icon
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Front Text",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: frontText.options.text,
      onChange: newVal => {
        var options = { ...frontText.options,
          text: newVal
        };
        setAttributes({
          frontText: { ...frontText,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: frontText.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          color: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[frontTextSelector] == undefined) {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            color: newValuesObj
          };
        } else {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            color: newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            frontText: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_11__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_9__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.ColorPalette, {
      value: frontText.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_13__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(frontText.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = frontText.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...frontText.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          frontText: { ...frontText,
            styles: styles
          }
        });
        var newValuesObjX = {};

        if (blockCssY.items[frontTextSelector] == undefined) {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            'background-color': newValuesObj
          };
        } else {
          newValuesObjX[frontTextSelector] = { ...blockCssY.items[frontTextSelector],
            'background-color': newValuesObj
          };
        }

        setAttributes({
          blockCssY: {
            frontText: newValuesObjX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_14__["default"], {
      typo: frontText.styles,
      breakPointX: breakPointX,
      onChange: onChangeTypoFrontText,
      setAttributes: setAttributes,
      obj: frontText
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Separator",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Separator"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: separator.options.text,
      onChange: newVal => {
        var options = { ...separator.options,
          text: newVal
        };
        setAttributes({
          separator: { ...separator,
            options: options
          }
        });
      }
    }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: ""
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Items Wrapper"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemWrapSelector, '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Caetgory Items"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemSelector, '{}', " ")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, ".pg-postCategories a", '{/* your CSS here*/}'))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Separator"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, itemSeparatorSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Front Text"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, frontTextSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", {
      className: "font-bold"
    }, "Post Count"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("code", null, postCountSelector, '{/* your CSS here*/}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_16__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_17__["default"], {
      utm: {
        utm_source: 'BlockPostTitle',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, taxonomies.options.taxName.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Select Taxonomy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_15__["default"], {
      position: "bottom right",
      variant: "secondary",
      options: postObjects,
      buttonTitle: "Choose",
      onChange: setTaxonomy,
      values: taxonomies.options.taxName
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("label", {
      for: ""
    }, "Custom Taxonomy"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_7__.__experimentalInputControl, {
      value: taxonomies.options.taxName,
      onChange: newVal => {
        var options = { ...taxonomies.options,
          taxName: newVal
        };
        setAttributes({
          taxonomies: { ...taxonomies,
            options: options
          }
        });
      }
    }))), taxonomies.options.taxName.length > 0 && categories.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, "No Terms Found"), taxonomies.options.taxName.length > 0 && categories.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: [blockId]
    }, icon.options.position == 'beforeFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: "frontText inline-block"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(RawHTML, null, frontText.options.text)), icon.options.position == 'afterFronttext' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), icon.options.position == 'beforeItems' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    }), categories.map((x, index) => {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
        onClick: ev => ev.preventDefault(),
        target: items.options.linkTarget,
        title: x.name
      }, linkAttrItems, {
        className: items.options.class,
        href: x.link
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "termTitle"
      }, items.options.prefix, x.name, items.options.postfix), items.options.postCount == true && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "postCount"
      }, "(", x.count, ")"), categories.length > index + 1 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: "separator"
      }, separator.options.text, " "));
    }), icon.options.position == 'afterItems' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
      className: icon.options.class,
      dangerouslySetInnerHTML: {
        __html: iconHtml
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("p", null, "Live Preview is not avilable at the moment, please visit page and see it."))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/blocks/text/index.js":
/*!**********************************!*\
  !*** ./src/blocks/text/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/blocks */ "@wordpress/blocks");
/* harmony import */ var _wordpress_blocks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ "@wordpress/i18n");
/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/core-data */ "@wordpress/core-data");
/* harmony import */ var _wordpress_core_data__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_wordpress_core_data__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @wordpress/block-editor */ "@wordpress/block-editor");
/* harmony import */ var _wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store */ "./src/store.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/typography */ "./src/components/typography/index.js");
/* harmony import */ var _components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/mail-subscribe */ "./src/components/mail-subscribe/index.js");
/* harmony import */ var _components_contact_support__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/contact-support */ "./src/components/contact-support/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
/* harmony import */ var _components_css_text_align__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/css-text-align */ "./src/components/css-text-align/index.js");













const {
  RawHTML
} = wp.element;









var myStore = wp.data.select('postgrid-shop');
(0,_wordpress_blocks__WEBPACK_IMPORTED_MODULE_1__.registerBlockType)("post-grid/text", {
  title: "Text",
  icon: {
    // Specifying a background color to appear with the icon e.g.: in the inserter.
    background: '#2563eb',
    // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
    foreground: '#fff',
    // Specifying an icon for the block
    src: (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("svg", {
      width: "500",
      height: "500",
      viewBox: "0 0 500 500",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M25 391C25 388.239 27.2386 386 30 386H470C472.761 386 475 388.239 475 391V441C475 443.761 472.761 446 470 446H30C27.2386 446 25 443.761 25 441V391Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M283 285C283 282.239 285.239 280 288 280H470C472.761 280 475 282.239 475 285V335C475 337.761 472.761 340 470 340H288C285.239 340 283 337.761 283 335V285Z"
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("path", {
      d: "M46.3955 115.771C36.5811 115.771 31.6738 111.519 31.6738 103.013V78.2803C31.6738 69.7744 36.5811 65.5215 46.3955 65.5215H248.181C257.995 65.5215 262.902 69.7744 262.902 78.2803V103.013C262.902 111.519 257.995 115.771 248.181 115.771H175.946V336.204C175.946 343.401 172.675 347 166.132 347H128.444C121.901 347 118.63 343.401 118.63 336.204V115.771H46.3955Z"
    }))
  },
  attributes: {
    text: {
      type: 'object',
      default: {
        options: {
          content: '',
          tag: 'div',
          class: 'pg-text'
        },
        styles: {
          textAlign: {},
          color: {},
          bgColor: {},
          padding: {},
          margin: {},
          display: {},
          fontSize: {},
          //{ val: '18', unit: 'px' }
          lineHeight: {},
          // { val: '18', unit: 'px' }
          letterSpacing: {},
          // { val: '18', unit: 'px' }
          fontFamily: {},
          fontWeight: {},
          textDecoration: {},
          //overline, line-through, underline
          textTransform: {}
        }
      }
    },
    blockId: {
      "type": "string",
      "default": ''
    },
    customCss: {
      "type": "string",
      "default": ''
    },
    blockCssY: {
      "type": "object",
      "default": {
        items: {}
      }
    }
  },
  usesContext: ["postId", "loopIndex", "postType", "queryId"],
  supports: {
    "align": ["wide", "full"]
  },
  category: "post-grid",
  edit: function (props) {
    var attributes = props.attributes;
    var setAttributes = props.setAttributes;
    var context = props.context;
    var clientId = props.clientId;
    var blockId = attributes.blockId;
    var blockIdX = attributes.blockId ? attributes.blockId : 'pg' + clientId.split('-').pop();
    var blockClass = '.' + blockIdX;
    var text = attributes.text;
    var customCss = attributes.customCss;
    var blockCssY = attributes.blockCssY;
    var postId = context['postId'];
    var postType = context['postType'];
    const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
    const [isLoading, setisLoading] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [postGridData, setPostGridData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(window.PostGridPluginData); // Wrapper CSS Class Selectors

    var textSelector = blockClass;
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        blockId: blockIdX
      });
      generateBlockCssY();
    }, [clientId]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      setAttributes({
        customCss: customCss
      });
      generateBlockCssY();
    }, [customCss]);
    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockId]);
    var breakPointList = [{
      label: 'Select..',
      icon: '',
      value: ''
    }];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    function handleLinkClick(ev) {
      ev.stopPropagation();
      ev.preventDefault();
      return false;
    }

    function onChangeTextTypo(typoX) {
      setAttributes({
        text: { ...text,
          styles: typoX
        }
      });
      var newValuesObjX = {};
      var itemsX = blockCssY.items;

      if (typoX.fontFamily[breakPointX] != undefined) {
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'font-family': typoX.fontFamily
        };
      } else {
        //typoX.fontFamily[breakPointX] = {};
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'font-family': typoX.fontFamily
        };
      }

      if (typoX.fontSize[breakPointX] != undefined) {
        var fontSizeVal = typoX.fontSize[breakPointX].val ? typoX.fontSize[breakPointX].val : 16;
        var fontSizeUnit = typoX.fontSize[breakPointX].unit ? typoX.fontSize[breakPointX].unit : 'px';
        var fontSizeX = blockCssY.items[textSelector]['font-size'] != undefined ? blockCssY.items[textSelector]['font-size'] : {};
        fontSizeX[breakPointX] = fontSizeVal + fontSizeUnit; //blockCssY.items[textSelector] = { ...blockCssY.items[textSelector], 'font-size': fontSizeX };

        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'font-size': fontSizeX
        };
      }

      if (typoX.lineHeight[breakPointX] != undefined) {
        var lineHeightVal = typoX.lineHeight[breakPointX].val ? typoX.lineHeight[breakPointX].val : 16;
        var lineHeightUnit = typoX.lineHeight[breakPointX].unit ? typoX.lineHeight[breakPointX].unit : 'px';
        var lineHeightX = blockCssY.items[textSelector]['line-height'] != undefined ? blockCssY.items[textSelector]['line-height'] : {};
        lineHeightX[breakPointX] = lineHeightVal + lineHeightUnit; //blockCssY.items[textSelector] = { ...blockCssY.items[textSelector], 'line-height': lineHeightX };

        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'line-height': lineHeightX
        };
      }

      if (typoX.letterSpacing[breakPointX] != undefined) {
        var letterSpacingVal = typoX.letterSpacing[breakPointX].val ? typoX.letterSpacing[breakPointX].val : 0;
        var letterSpacingUnit = typoX.letterSpacing[breakPointX].unit ? typoX.letterSpacing[breakPointX].unit : 'px';
        var letterSpacingX = blockCssY.items[textSelector]['letter-spacing'] != undefined ? blockCssY.items[textSelector]['letter-spacing'] : {};
        letterSpacingX[breakPointX] = letterSpacingVal + letterSpacingUnit; //blockCssY.items[textSelector] = { ...blockCssY.items[textSelector], 'letter-spacing': letterSpacingX };

        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'letter-spacing': letterSpacingX
        };
      }

      if (typoX.fontWeight[breakPointX] != undefined) {
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'font-weight': typoX.fontWeight
        };
      }

      if (typoX.textDecoration[breakPointX] != undefined) {
        var str = {};
        var textDecorationX = typoX.textDecoration[breakPointX];
        var textDecorationXStr = textDecorationX.length > 0 ? textDecorationX.join(' ') : '';
        str[breakPointX] = textDecorationXStr;
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'text-decoration': str
        };
      }

      if (typoX.textTransform[breakPointX] != undefined) {
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'text-transform': typoX.textTransform
        };
      } //setAttributes({ blockCssY: { items: blockCssY.items } });


      setAttributes({
        blockCssY: {
          items: itemsX
        }
      });
    }

    function paddingControl(nextValues) {
      var responsive = text.styles.padding;
      responsive[breakPointX] = nextValues;
      var styles = { ...text.styles,
        padding: responsive
      };
      setAttributes({
        text: { ...text,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[textSelector] = blockCssY.items[textSelector] != undefined ? blockCssY.items[textSelector] : {};

      if (nextValues.top != undefined) {
        var paddingTop = blockCssY.items[textSelector]['padding-top'] != undefined ? blockCssY.items[textSelector]['padding-top'] : {};
        paddingTop[breakPointX] = nextValues.top;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'padding-top': paddingTop
        }; //itemsX[textSelector] = { ...blockCssY.items[textSelector], 'padding-top': paddingTop };
      }

      if (nextValues.right != undefined) {
        var paddingRight = blockCssY.items[textSelector]['padding-right'] != undefined ? blockCssY.items[textSelector]['padding-right'] : {};
        paddingRight[breakPointX] = nextValues.right;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'padding-right': paddingRight
        }; //itemsX[textSelector] = { ...blockCssY.items[textSelector], 'padding-right': paddingRight };
      }

      if (nextValues.bottom != undefined) {
        var paddingBottom = blockCssY.items[textSelector]['padding-bottom'] != undefined ? blockCssY.items[textSelector]['padding-bottom'] : {};
        paddingBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'padding-bottom': paddingBottom
        }; //itemsX[textSelector] = { ...blockCssY.items[textSelector], 'padding-bottom': paddingBottom };
      }

      if (nextValues.left != undefined) {
        var paddingLeft = blockCssY.items[textSelector]['padding-left'] != undefined ? blockCssY.items[textSelector]['padding-left'] : {};
        paddingLeft[breakPointX] = nextValues.left;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'padding-left': paddingLeft
        }; //itemsX[textSelector] = { ...blockCssY.items[textSelector], 'padding-left': paddingLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function marginControl(nextValues) {
      var responsive = text.styles.margin;
      responsive[breakPointX] = nextValues;
      var styles = { ...text.styles,
        margin: responsive
      };
      setAttributes({
        text: { ...text,
          styles: styles
        }
      });
      var itemsX = { ...blockCssY.items
      };
      nextValues.top = nextValues.top == undefined ? '0px' : nextValues.top;
      nextValues.right = nextValues.right == undefined ? '0px' : nextValues.right;
      nextValues.bottom = nextValues.bottom == undefined ? '0px' : nextValues.bottom;
      nextValues.left = nextValues.left == undefined ? '0px' : nextValues.left;
      blockCssY.items[textSelector] = blockCssY.items[textSelector] != undefined ? blockCssY.items[textSelector] : {};

      if (nextValues.top != undefined) {
        var marginTop = blockCssY.items[textSelector]['margin-top'] != undefined ? blockCssY.items[textSelector]['margin-top'] : {};
        marginTop[breakPointX] = nextValues.top;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'margin-top': marginTop
        }; //itemsX[textSelector] = { ...blockCssY.items[textSelector], 'margin-top': marginTop };
      }

      if (nextValues.right != undefined) {
        var marginRight = blockCssY.items[textSelector]['margin-right'] !== undefined ? blockCssY.items[textSelector]['margin-right'] : {};
        marginRight[breakPointX] = nextValues.right;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'margin-right': marginRight
        }; //itemsX[textSelector] = { ...blockCssY.items[textSelector], 'margin-right': marginRight };
      }

      if (nextValues.bottom != undefined) {
        var marginBottom = blockCssY.items[textSelector]['margin-bottom'] !== undefined ? blockCssY.items[textSelector]['margin-bottom'] : {};
        marginBottom[breakPointX] = nextValues.bottom;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'margin-bottom': marginBottom
        }; //itemsX[textSelector] = { ...blockCssY.items[textSelector], 'margin-bottom': marginBottom };
      }

      if (nextValues.left != undefined) {
        var marginLeft = blockCssY.items[textSelector]['margin-left'] !== undefined ? blockCssY.items[textSelector]['margin-left'] : {};
        marginLeft[breakPointX] = nextValues.left;
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'margin-left': marginLeft
        }; //itemsX[textSelector] = { ...blockCssY.items[textSelector], 'margin-left': marginLeft };
      }

      setAttributes({
        blockCssY: {
          items: blockCssY.items
        }
      }); //setAttributes({ blockCssY: { items: itemsX } });
    }

    function generateBlockCssY() {
      var reponsiveCssGroups = {};
      var reponsiveCss = '';

      for (var selector in blockCssY.items) {
        var attrs = blockCssY.items[selector];

        for (var attr in attrs) {
          var breakpoints = attrs[attr];

          for (var device in breakpoints) {
            var attrValue = breakpoints[device];

            if (reponsiveCssGroups[device] == undefined) {
              reponsiveCssGroups[device] = [];
            }

            if (reponsiveCssGroups[device][selector] == undefined) {
              reponsiveCssGroups[device][selector] = [];
            }

            reponsiveCssGroups[device][selector].push({
              'attr': attr,
              'val': attrValue
            });
          }
        }
      }

      if (reponsiveCssGroups['Mobile'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 0px) and (max-width: 360px){';

        for (var selector in reponsiveCssGroups['Mobile']) {
          var attrs = reponsiveCssGroups['Mobile'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Tablet'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 361px) and (max-width: 780px){';

        for (var selector in reponsiveCssGroups['Tablet']) {
          var attrs = reponsiveCssGroups['Tablet'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      if (reponsiveCssGroups['Desktop'] != undefined) {
        reponsiveCss += '@media only screen and (min-width: 781px){';

        for (var selector in reponsiveCssGroups['Desktop']) {
          var attrs = reponsiveCssGroups['Desktop'][selector];
          reponsiveCss += selector + '{';

          for (var index in attrs) {
            var attr = attrs[index];
            var attrName = attr.attr;
            var attrValue = attr.val;
            reponsiveCss += attrName + ':' + attrValue + ';';
          }

          reponsiveCss += '}';
        }

        reponsiveCss += '}';
      }

      var iframe = document.querySelectorAll('[name="editor-canvas"]')[0];

      if (iframe) {
        setTimeout(() => {
          var iframeDocument = iframe.contentDocument;
          var body = iframeDocument.body;
          var divWrap = iframeDocument.getElementById("css-block-" + blockId);

          if (divWrap != undefined) {
            iframeDocument.getElementById("css-block-" + blockId).outerHTML = "";
          }

          var divWrap = '<div id="css-block-' + blockId + '"></div>';
          body.insertAdjacentHTML('beforeend', divWrap);
          var csswrappg = iframeDocument.getElementById('css-block-' + blockId);
          var str = '<style>' + reponsiveCss + customCss + '</style>';
          csswrappg.insertAdjacentHTML('beforeend', str);
        }, 200);
      } else {
        var wpfooter = document.getElementById('wpfooter');
        var divWrap = document.getElementById("css-block-" + blockId);

        if (divWrap != undefined) {
          document.getElementById("css-block-" + blockId).outerHTML = "";
        }

        var divWrap = '<div id="css-block-' + blockId + '"></div>';
        wpfooter.insertAdjacentHTML('beforeend', divWrap);
        var csswrappg = document.getElementById('css-block-' + blockId);
        var str = '<style>' + reponsiveCss + customCss + '</style>';
        csswrappg.insertAdjacentHTML('beforeend', str);
      }
    }

    (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
      generateBlockCssY();
    }, [blockCssY]);
    const colors = [{
      name: '9DD6DF',
      color: '#9DD6DF'
    }, {
      name: '18978F',
      color: '#18978F'
    }, {
      name: 'A084CF',
      color: '#A084CF'
    }, {
      name: 'DFBB9D',
      color: '#DFBB9D'
    }, {
      name: '774360',
      color: '#774360'
    }, {
      name: '3AB0FF',
      color: '#3AB0FF'
    }, {
      name: '51557E',
      color: '#51557E'
    }];
    const [setSome, setSomeState] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
    const [stateX, setStateX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('Old Value');
    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');

    function onChangeBreakPoint(x, index) {
      setPreviewDeviceType(x.value);
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      asdsdsd.then(res => {
        setBreakPointX(res.breakpoint);
        generateBlockCssY();
      });
    }

    return [(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.BlockControls, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.AlignmentToolbar, {
      value: text.styles.textAlign,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(text.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = text.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...text.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          text: { ...text,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.InspectorControls, {
      key: "general"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-3",
      title: "Text",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Text",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Block ID"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalInputControl, {
      value: blockId,
      onChange: newVal => {
        setAttributes({
          blockId: newVal
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Wrapper Tag"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: text.options.tag,
      options: [{
        label: 'H1',
        value: 'h1'
      }, {
        label: 'H2',
        value: 'h2'
      }, {
        label: 'H3',
        value: 'h3'
      }, {
        label: 'H4',
        value: 'h4'
      }, {
        label: 'H5',
        value: 'h5'
      }, {
        label: 'H6',
        value: 'h6'
      }, {
        label: 'SPAN',
        value: 'span'
      }, {
        label: 'DIV',
        value: 'div'
      }, {
        label: 'P',
        value: 'p'
      }],
      onChange: newVal => {
        var options = { ...text.options,
          tag: newVal
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_text_align__WEBPACK_IMPORTED_MODULE_16__["default"], {
      val: text.styles.textAlign[breakPointX],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(text.styles.textAlign).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = text.styles.textAlign;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...text.styles,
          textAlign: newValuesObj
        };
        setAttributes({
          text: { ...text,
            styles: styles
          }
        });
        blockCssY.items[textSelector] = { ...blockCssY.items[textSelector],
          'text-align': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: blockCssY.items
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: text.styles.color[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(text.styles.color).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = text.styles.color;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...text.styles,
          color: newValuesObj
        };
        setAttributes({
          text: { ...text,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Background Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.ColorPalette, {
      value: text.styles.bgColor[breakPointX],
      colors: _colors_presets__WEBPACK_IMPORTED_MODULE_15__["default"],
      enableAlpha: true,
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(text.styles.bgColor).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = text.styles.bgColor;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...text.styles,
          bgColor: newValuesObj
        };
        setAttributes({
          text: { ...text,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'background-color': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Display"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.SelectControl, {
      label: "",
      value: text.styles.display[breakPointX],
      options: [{
        label: 'Select..',
        value: ''
      }, {
        label: 'inline',
        value: 'inline'
      }, {
        label: 'inline-block',
        value: 'inline-block'
      }, {
        label: 'block',
        value: 'block'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(text.styles.display).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = text.styles.display;
          newValuesObj[breakPointX] = newVal;
        }

        var styles = { ...text.styles,
          display: newValuesObj
        };
        setAttributes({
          text: { ...text,
            styles: styles
          }
        });
        var itemsX = { ...blockCssY.items
        };
        itemsX[textSelector] = { ...blockCssY.items[textSelector],
          'display': newValuesObj
        };
        setAttributes({
          blockCssY: {
            items: itemsX
          }
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "font-bold"
    }, "Typography"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_typography__WEBPACK_IMPORTED_MODULE_11__["default"], {
      typo: text.styles,
      breakPointX: breakPointX,
      onChange: onChangeTextTypo,
      setAttributes: setAttributes,
      obj: text
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Padding"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: text.styles.padding[breakPointX],
      onChange: nextValues => {
        paddingControl(nextValues);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, "Margin"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_10__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChangeBreakPoint,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_8__["default"][breakPointX].icon,
      value: breakPointX
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.__experimentalBoxControl, {
      label: "",
      values: text.styles.margin[breakPointX],
      onChange: nextValues => {
        marginControl(nextValues);
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.PanelBody, {
      title: "Custom Style",
      initialOpen: false
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, "Please use following class selector to apply your custom CSS"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "my-3"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", {
      className: "font-bold"
    }, "Text "), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("p", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("code", null, textSelector, '{}', " "))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_5__.TextareaControl, {
      label: "Custom CSS",
      help: "Do not use 'style' tag",
      value: customCss,
      onChange: value => {
        setAttributes({
          customCss: value
        });
      }
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "px-2"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_mail_subscribe__WEBPACK_IMPORTED_MODULE_12__["default"], null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_contact_support__WEBPACK_IMPORTED_MODULE_13__["default"], {
      utm: {
        utm_source: 'BlockText',
        utm_campaign: 'PostGridCombo',
        utm_content: 'BlockOptions'
      }
    })))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_block_editor__WEBPACK_IMPORTED_MODULE_7__.RichText, {
      className: [blockId],
      tagName: text.options.tag,
      value: text.options.content,
      allowedFormats: ['core/bold', 'core/italic', 'core/link'],
      onChange: content => {
        var options = { ...text.options,
          content: content
        };
        setAttributes({
          text: { ...text,
            options: options
          }
        });
      },
      placeholder: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Start Writing...')
    }))];
  },
  save: function (props) {
    // to make a truly dynamic block, we're handling front end by render_callback under index.php file
    return null;
  }
});

/***/ }),

/***/ "./src/breakpoints.js":
/*!****************************!*\
  !*** ./src/breakpoints.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// const breakPoints = {
//   sm: { name: 'Small', id: 'sm', icon: '<span class="icon-mobile-phone"></span>', min: 0, max: 640 },
//   md: { name: 'Medium', id: 'md', icon: '<span class="icon-tablet"></span>', min: 641, max: 768 },
//   lg: { name: 'Large', id: 'lg', icon: '<span class="icon-laptop"></span>', min: 769, max: 1024 },
//   xl: { name: 'Extra-Large', id: 'xl', icon: '<span class="icon-desktop"></span>', min: 1025, max: 1280 },
//   xl2: { name: '2 Extra-Large', id: 'xl2', icon: '<span class="icon-television"></span>', min: 1281, max: 1536 }
// };
const breakPoints = {
  Mobile: {
    name: 'Mobile',
    id: 'Mobile',
    icon: '<span class="icon-mobile-phone"></span>',
    min: 0,
    max: 360
  },
  Tablet: {
    name: 'Tablet',
    id: 'Tablet',
    icon: '<span class="icon-tablet"></span>',
    min: 361,
    max: 780
  },
  Desktop: {
    name: 'Desktop',
    id: 'Desktop',
    icon: '<span class="icon-desktop"></span>',
    min: 781,
    max: 1024
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (breakPoints);

/***/ }),

/***/ "./src/colors-presets.js":
/*!*******************************!*\
  !*** ./src/colors-presets.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const colorsPresets = [{
  name: '9DD6DF',
  color: '#9DD6DF'
}, {
  name: '18978F',
  color: '#18978F'
}, {
  name: 'A084CF',
  color: '#A084CF'
}, {
  name: 'DFBB9D',
  color: '#DFBB9D'
}, {
  name: '774360',
  color: '#774360'
}, {
  name: '3AB0FF',
  color: '#3AB0FF'
}, {
  name: '51557E',
  color: '#51557E'
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (colorsPresets);

/***/ }),

/***/ "./src/components/breakpoint-toggle/index.js":
/*!***************************************************!*\
  !*** ./src/components/breakpoint-toggle/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");


const {
  Component,
  RawHTML
} = wp.element;




var myStore = wp.data.select('postgrid-shop');

class BreakpointToggle extends Component {
  constructor() {
    super(...arguments);

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(this, "state", {
      breakPointX: myStore.getBreakPoint()
    });

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(this, "setBreakPoint", x => {
      //console.log(x)
      //setPreviewDeviceType(x.value)
      var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
      this.setState({
        breakPointX: x.value
      });
    });
  }

  render() {
    var that = this;
    const {
      position,
      variant,
      iconList,
      //[{"label":"Select..","icon":"","value":""}]
      buttonTitle,
      onChange,
      activeIcon,
      value
    } = this.props;

    function onChangeX(x) {//console.log(x);
    }

    var breakPointList = [];

    for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_4__["default"]) {
      var item = _breakpoints__WEBPACK_IMPORTED_MODULE_4__["default"][x];
      breakPointList.push({
        label: item.name,
        icon: item.icon,
        value: item.id
      });
    }

    const {
      __experimentalSetPreviewDeviceType: setPreviewDeviceType
    } = wp.data.dispatch('core/edit-post');
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, this.state.breakPointX, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_3__["default"], {
      position: "bottom",
      variant: "secondary",
      iconList: breakPointList,
      buttonTitle: "Break Point Switch",
      onChange: onChange,
      activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_4__["default"][this.state.breakPointX].icon,
      value: value
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BreakpointToggle);

/***/ }),

/***/ "./src/components/contact-support/index.js":
/*!*************************************************!*\
  !*** ./src/components/contact-support/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;





class PGContactSupport extends Component {
  render() {
    var {
      utm
    } = this.props;

    function ContactHtml(props) {
      var utmPrams = new URLSearchParams(utm).toString(); ////console.log(utmPrams);

      var docUrl = 'https://getpostgrid.com/documentations/?' + utmPrams + '&utm_medium=Docsbutton';
      var tutsUrl = 'https://www.youtube.com/playlist?list=PL0QP7T2SN94bpTVghETSePuVvRROpuEW6';
      var supportCreate = 'https://pickplugins.com/create-support-ticket/?' + utmPrams + '&utm_medium=createSupportButton';
      var reviewUrl = 'https://wordpress.org/support/plugin/post-grid/reviews/#new-post';
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "grid grid-cols-2 gap-2 my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: ""
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        target: "_blank",
        href: docUrl,
        className: "bg-blue-600 hover:text-white font-bold text-[16px] px-5 py-2 block text-center text-white rounded"
      }, "Docs")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: ""
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        target: "_blank",
        href: tutsUrl,
        className: "bg-blue-600 hover:text-white font-bold text-[16px] px-5 py-2 block text-center text-white rounded"
      }, "Tutorials")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "col-span-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        target: "_blank",
        href: supportCreate,
        className: "bg-blue-600 hover:text-white font-bold text-[16px] px-5 py-2 block text-center text-white rounded"
      }, "Create Support Ticket")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "col-span-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
        target: "_blank",
        href: reviewUrl,
        className: "bg-amber-500 hover:text-white font-bold text-[16px] px-5 py-2 block text-center text-white rounded"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        class: "dashicons dashicons-star-filled"
      }), " Write Your Reviews")));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContactHtml, {
      utm: utm
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGContactSupport);

/***/ }),

/***/ "./src/components/css-align-content/index.js":
/*!***************************************************!*\
  !*** ./src/components/css-align-content/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssAlignContent extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      stretch: {
        "label": "stretch",
        "value": "stretch"
      },
      center: {
        "label": "center",
        "value": "center"
      },
      'flex-start': {
        "label": "flex-start	",
        "value": "flex-start"
      },
      'flex-end': {
        "label": "flex-end	",
        "value": "flex-end"
      },
      'space-between': {
        "label": "space-between",
        "value": "space-between"
      },
      'space-around': {
        "label": "space-around",
        "value": "space-around"
      },
      'space-evenly': {
        "label": "space-evenly",
        "value": "space-evenly"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Align Content",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'alignContent');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssAlignContent);

/***/ }),

/***/ "./src/components/css-align-items/index.js":
/*!*************************************************!*\
  !*** ./src/components/css-align-items/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssAlignItems extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = [{
      "label": "stretch",
      "value": "stretch"
    }, {
      "label": "center",
      "value": "center"
    }, {
      "label": "flex-start	",
      "value": "flex-start"
    }, {
      "label": "flex-end	",
      "value": "flex-end"
    }, {
      "label": "baseline",
      "value": "baseline"
    }];
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Align Items",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? val : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, args.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'alignItems');
          }
        }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssAlignItems);

/***/ }),

/***/ "./src/components/css-align-self/index.js":
/*!************************************************!*\
  !*** ./src/components/css-align-self/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssAlignSelf extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      'stretch': {
        "label": "stretch",
        "value": "stretch"
      },
      'center': {
        "label": "center",
        "value": "center"
      },
      'flex-start': {
        "label": "flex-start	",
        "value": "flex-start"
      },
      'flex-end': {
        "label": "flex-end	",
        "value": "flex-end"
      },
      'space-between': {
        "label": "space-between",
        "value": "space-between"
      },
      'space-around': {
        "label": "space-around",
        "value": "space-around"
      },
      'space-evenly': {
        "label": "space-evenly",
        "value": "space-evenly"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Align Self",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'alignSelf');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssAlignSelf);

/***/ }),

/***/ "./src/components/css-backface-visibility/index.js":
/*!*********************************************************!*\
  !*** ./src/components/css-backface-visibility/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssBackfaceVisibility extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      visible: {
        "label": "visible",
        "value": "visible"
      },
      hidden: {
        "label": "hidden",
        "value": "hidden"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'backfaceVisibility');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBackfaceVisibility);

/***/ }),

/***/ "./src/components/css-background-attachment/index.js":
/*!***********************************************************!*\
  !*** ./src/components/css-background-attachment/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssBackgroundAttachment extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      scroll: {
        "label": "scroll",
        "value": "scroll"
      },
      fixed: {
        "label": "fixed",
        "value": "fixed"
      },
      local: {
        "label": "local",
        "value": "local"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'backgroundAttachment');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBackgroundAttachment);

/***/ }),

/***/ "./src/components/css-background-blend-mode/index.js":
/*!***********************************************************!*\
  !*** ./src/components/css-background-blend-mode/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssBackgroundBlendMode extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      normal: {
        "label": "normal",
        "value": "normal"
      },
      multiply: {
        "label": "multiply",
        "value": "multiply"
      },
      screen: {
        "label": "screen",
        "value": "screen"
      },
      overlay: {
        "label": "overlay",
        "value": "overlay"
      },
      darken: {
        "label": "darken",
        "value": "darken"
      },
      lighten: {
        "label": "lighten",
        "value": "lighten"
      },
      'color-dodge': {
        "label": "color-dodge",
        "value": "color-dodge"
      },
      saturation: {
        "label": "saturation",
        "value": "saturation"
      },
      color: {
        "label": "color",
        "value": "color"
      },
      luminosity: {
        "label": "luminosity",
        "value": "luminosity"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Background Blend Mode",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'backgroundBlendMode');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBackgroundBlendMode);

/***/ }),

/***/ "./src/components/css-background-clip/index.js":
/*!*****************************************************!*\
  !*** ./src/components/css-background-clip/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssBackgroundClip extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      'border-box': {
        "label": "border-box",
        "value": "border-box"
      },
      'padding-box': {
        "label": "padding-box",
        "value": "padding-box"
      },
      'content-box': {
        "label": "content-box",
        "value": "content-box"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Background Blend Mode",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'backgroundClip');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBackgroundClip);

/***/ }),

/***/ "./src/components/css-background-color/index.js":
/*!******************************************************!*\
  !*** ./src/components/css-background-color/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
const {
  Component,
  RawHTML
} = wp.element;





var myStore = wp.data.select('postgrid-shop');




class PGcssBackgroundColor extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(myStore.getBreakPoint());
      const {
        __experimentalSetPreviewDeviceType: setPreviewDeviceType
      } = wp.data.dispatch('core/edit-post');
      var breakPointList = [];

      for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_3__["default"]) {
        var item = _breakpoints__WEBPACK_IMPORTED_MODULE_3__["default"][x];
        breakPointList.push({
          label: item.name,
          icon: item.icon,
          value: item.id
        });
      }

      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.ColorPalette, {
        value: val,
        colors: _colors_presets__WEBPACK_IMPORTED_MODULE_5__["default"],
        enableAlpha: true,
        onChange: newVal => {
          //console.log(newVal);
          onChange(newVal, 'bgColor');
        }
      }));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBackgroundColor);

/***/ }),

/***/ "./src/components/css-background-origin/index.js":
/*!*******************************************************!*\
  !*** ./src/components/css-background-origin/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssBackgroundOrigin extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      'border-box': {
        "label": "border-box",
        "value": "border-box"
      },
      'padding-box': {
        "label": "padding-box",
        "value": "padding-box"
      },
      'content-box': {
        "label": "content-box",
        "value": "content-box"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Background Blend Mode",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'backgroundOrigin');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBackgroundOrigin);

/***/ }),

/***/ "./src/components/css-background-position/index.js":
/*!*********************************************************!*\
  !*** ./src/components/css-background-position/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssBackgroundPosition extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = [{
      label: 'left top',
      value: 'left top'
    }, {
      label: 'left center',
      value: 'left center'
    }, {
      label: 'left bottom',
      value: 'left bottom'
    }, {
      label: 'right top',
      value: 'right top'
    }, {
      label: 'right center',
      value: 'right center'
    }, {
      label: 'right bottom',
      value: 'right bottom'
    }, {
      label: 'center top',
      value: 'center top'
    }, {
      label: 'center center',
      value: 'center center'
    }, {
      label: 'center bottom',
      value: 'center bottom'
    }]; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? val : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, args.map(x => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'backgroundPosition');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBackgroundPosition);

/***/ }),

/***/ "./src/components/css-background-repeat/index.js":
/*!*******************************************************!*\
  !*** ./src/components/css-background-repeat/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssBackgroundRepeat extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      repeat: {
        "label": "repeat",
        "value": "repeat"
      },
      'repeat-x': {
        "label": "repeat-x",
        "value": "repeat-x"
      },
      'repeat-y': {
        "label": "repeat-y",
        "value": "repeat-y"
      },
      'no-repeat': {
        "label": "no-repeat",
        "value": "no-repeat"
      },
      space: {
        "label": "space",
        "value": "space"
      },
      round: {
        "label": "round",
        "value": "round"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Background Repeat",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'backgroundRepeat');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBackgroundRepeat);

/***/ }),

/***/ "./src/components/css-background-size/index.js":
/*!*****************************************************!*\
  !*** ./src/components/css-background-size/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;



class PGcssBackgroundSize extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      cover: {
        "label": "cover",
        "value": "cover"
      },
      contain: {
        "label": "contain",
        "value": "contain"
      },
      custom: {
        "label": "custom",
        "value": "custom"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Background Repeat",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'backgroundSize');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBackgroundSize);

/***/ }),

/***/ "./src/components/css-border-radius/index.js":
/*!***************************************************!*\
  !*** ./src/components/css-border-radius/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
const {
  Component,
  RawHTML
} = wp.element;








class PGcssBorderRadius extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.__experimentalBoxControl, {
        label: "",
        values: val,
        onChange: nextValues => {
          onChange(nextValues, 'borderRadius');
        }
      }));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBorderRadius);

/***/ }),

/***/ "./src/components/css-border/index.js":
/*!********************************************!*\
  !*** ./src/components/css-border/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");

const {
  Component,
  RawHTML
} = wp.element;





class PGcssBorder extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      fill: {
        "label": "fill",
        "value": "fill"
      },
      contain: {
        "label": "contain",
        "value": "contain"
      },
      cover: {
        "label": "cover",
        "value": "cover"
      },
      'scale-down': {
        "label": "scale-down",
        "value": "scale-down"
      },
      none: {
        "label": "none",
        "value": "none"
      }
    };
    var outlineStyleArgs = {
      none: {
        "label": "None",
        "value": "none"
      },
      hidden: {
        "label": "Hidden",
        "value": "hidden"
      },
      dotted: {
        "label": "Dotted",
        "value": "dotted"
      },
      dashed: {
        "label": "Dashed",
        "value": "dashed"
      },
      solid: {
        "label": "Solid",
        "value": "solid"
      },
      double: {
        "label": "Double",
        "value": "double"
      },
      groove: {
        "label": "Groove",
        "value": "groove"
      },
      ridge: {
        "label": "Ridge",
        "value": "ridge"
      },
      inset: {
        "label": "Inset",
        "value": "inset"
      },
      outset: {
        "label": "Outset",
        "value": "outset"
      }
    };

    function Html() {
      var valParts = val != undefined ? val.split(" ") : ['0px', 'solid', '#000000'];
      var widthVal = valParts[0] != undefined ? valParts[0] : '0px';
      var styleVal = valParts[1] != undefined ? valParts[1] : 'solid';
      var colorVal = valParts[2] != undefined ? valParts[2] : '#000000';
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      }; //console.log(widthVal);
      //console.log(widthVal.match(/\d+/g));

      var widthValX = widthVal.match(/\d+/g) != null ? widthVal.match(/\d+/g)[0] : 1;
      var widthUnitX = widthVal.match(/[a-zA-Z]+/g) != null ? widthVal.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthValY, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnitY, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      const [outlineWidthVal, setoutlineWidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthVal);
      const [outlineStyleVal, setoutlineStyleVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(styleVal);
      const [outlineColorVal, setoutlineColorVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(colorVal);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Border Width"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthValY,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnitY + ' ' + outlineStyleVal + ' ' + outlineColorVal, 'border');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, widthUnitY != undefined ? unitArgs[widthUnitY].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthValY + x.value + ' ' + outlineStyleVal + ' ' + outlineColorVal, 'border');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2 flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Border Style"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref2 => {
          let {
            isOpen,
            onToggle
          } = _ref2;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "Clear",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, outlineStyleVal ? outlineStyleArgs[outlineStyleVal].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(outlineStyleArgs).map(arg => {
          var index = arg[0];
          var x = arg[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              onChange(outlineWidthVal + ' ' + x.value + ' ' + outlineColorVal, 'border');
            }
          }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Border Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.ColorPalette, {
        value: outlineColorVal,
        colors: _colors_presets__WEBPACK_IMPORTED_MODULE_2__["default"],
        enableAlpha: true,
        onChange: newVal => {
          onChange(outlineWidthVal + ' ' + outlineStyleVal + ' ' + newVal, 'border');
        }
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBorder);

/***/ }),

/***/ "./src/components/css-bottom/index.js":
/*!********************************************!*\
  !*** ./src/components/css-bottom/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssBottom extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'bottom');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'bottom');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBottom);

/***/ }),

/***/ "./src/components/css-box-shadow/index.js":
/*!************************************************!*\
  !*** ./src/components/css-box-shadow/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");

const {
  Component,
  RawHTML
} = wp.element;





class PGcssBoxShadow extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;

    function Html() {
      var valParts = val != undefined ? val.split(" ") : ['0px', '0px', '0px', '0px', '#000000'];
      var hOffsetVal = valParts[0] != undefined ? valParts[0] : '0px';
      var vOffsetVal = valParts[1] != undefined ? valParts[1] : '0px';
      var blurVal = valParts[2] != undefined ? valParts[2] : '0px';
      var spreadVal = valParts[3] != undefined ? valParts[3] : '0px';
      var colorVal = valParts[4] != undefined ? valParts[4] : '#000000';
      var insetVal = valParts[5] != undefined && valParts[5].length > 0 ? 'inset' : '';
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var hOffsetValX = hOffsetVal.match(/\d+/g) != null ? hOffsetVal.match(/\d+/g)[0] : 0;
      var hOffsetUnitX = hOffsetVal.match(/[a-zA-Z]+/g) != null ? hOffsetVal.match(/[a-zA-Z]+/g)[0] : 'px';
      const [hOffsetValY, sethOffsetVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(hOffsetValX);
      const [hOffsetUnitY, sethOffsetUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(hOffsetUnitX);
      var vOffsetValX = vOffsetVal.match(/\d+/g) != null ? vOffsetVal.match(/\d+/g)[0] : 0;
      var vOffsetUnitX = vOffsetVal.match(/[a-zA-Z]+/g) != null ? vOffsetVal.match(/[a-zA-Z]+/g)[0] : 'px';
      const [vOffsetValY, setvOffsetVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(vOffsetValX);
      const [vOffsetUnitY, setvOffsetUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(vOffsetUnitX);
      var blurValX = blurVal.match(/\d+/g) != null ? blurVal.match(/\d+/g)[0] : 0;
      var blurUnitX = blurVal.match(/[a-zA-Z]+/g) != null ? blurVal.match(/[a-zA-Z]+/g)[0] : 'px';
      const [blurValY, setblurVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(blurValX);
      const [blurUnitY, setblurUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(blurUnitX);
      var spreadValX = spreadVal.match(/\d+/g) != null ? spreadVal.match(/\d+/g)[0] : 0;
      var spreadUnitX = spreadVal.match(/[a-zA-Z]+/g) != null ? spreadVal.match(/[a-zA-Z]+/g)[0] : 'px';
      const [spreadValY, setspreadVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(spreadValX);
      const [spreadUnitY, setspreadUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(spreadUnitX);
      const [colorValY, setColorValY] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(colorVal);
      const [insetValY, setInsetValY] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(insetVal);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "H-offset"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: hOffsetValY,
        type: "number",
        onChange: newVal => {
          sethOffsetVal(newVal);
          onChange(newVal + hOffsetUnitY + ' ' + vOffsetValY + vOffsetUnitY + ' ' + blurValY + blurUnitY + ' ' + spreadValY + spreadUnitY + ' ' + colorValY + ' ' + insetValY, 'boxShadow');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, hOffsetUnitY != undefined ? unitArgs[hOffsetUnitY].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              sethOffsetUnit(x.value);
              onChange(hOffsetValY + x.value + ' ' + vOffsetValY + vOffsetUnitY + ' ' + blurValY + blurUnitY + ' ' + spreadValY + spreadUnitY + ' ' + colorValY + ' ' + insetValY, 'boxShadow');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "V-offset"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: vOffsetValY,
        type: "number",
        onChange: newVal => {
          setvOffsetVal(newVal);
          onChange(hOffsetValY + hOffsetUnitY + ' ' + newVal + vOffsetUnitY + ' ' + blurValY + blurUnitY + ' ' + spreadValY + spreadUnitY + ' ' + colorValY + ' ' + insetValY, 'boxShadow');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref2 => {
          let {
            isOpen,
            onToggle
          } = _ref2;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, vOffsetUnitY != undefined ? unitArgs[vOffsetUnitY].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setvOffsetUnit(x.value);
              onChange(hOffsetValY + hOffsetUnitY + ' ' + vOffsetValY + x.value + ' ' + blurValY + blurUnitY + ' ' + spreadValY + spreadUnitY + ' ' + colorValY + ' ' + insetValY, 'boxShadow');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Blur"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: blurValY,
        type: "number",
        onChange: newVal => {
          setblurVal(newVal);
          onChange(hOffsetValY + hOffsetUnitY + ' ' + vOffsetValY + vOffsetUnitY + ' ' + newVal + blurUnitY + ' ' + spreadValY + spreadUnitY + ' ' + colorValY + ' ' + insetValY, 'boxShadow');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref3 => {
          let {
            isOpen,
            onToggle
          } = _ref3;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, hOffsetUnitY != undefined ? unitArgs[hOffsetUnitY].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setblurUnit(x.value);
              onChange(hOffsetValY + hOffsetUnitY + ' ' + vOffsetValY + vOffsetUnitY + ' ' + blurValY + x.value + ' ' + spreadValY + spreadUnitY + ' ' + colorValY + ' ' + insetValY, 'boxShadow');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Spread"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: spreadValY,
        type: "number",
        onChange: newVal => {
          sethOffsetVal(newVal);
          onChange(hOffsetValY + hOffsetUnitY + ' ' + vOffsetValY + vOffsetUnitY + ' ' + blurValY + blurUnitY + ' ' + newVal + spreadUnitY + ' ' + colorValY + ' ' + insetValY, 'boxShadow');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref4 => {
          let {
            isOpen,
            onToggle
          } = _ref4;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, hOffsetUnitY != undefined ? unitArgs[hOffsetUnitY].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              sethOffsetUnit(x.value);
              onChange(hOffsetValY + hOffsetUnitY + ' ' + vOffsetValY + vOffsetUnitY + ' ' + blurValY + blurUnitY + ' ' + spreadValY + x.value + ' ' + colorValY + ' ' + insetValY, 'boxShadow');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.ColorPalette, {
        value: colorValY,
        colors: _colors_presets__WEBPACK_IMPORTED_MODULE_2__["default"],
        enableAlpha: true,
        onChange: newVal => {
          setColorValY(newVal);
          onChange(hOffsetValY + hOffsetUnitY + ' ' + vOffsetValY + vOffsetUnitY + ' ' + blurValY + blurUnitY + ' ' + spreadValY + spreadUnitY + ' ' + newVal + ' ' + insetValY, 'boxShadow');
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2 flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Inset"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.SelectControl, {
        style: {
          margin: 0
        },
        label: "",
        value: insetValY,
        options: [{
          label: 'Yes',
          value: 'yes'
        }, {
          label: 'No',
          value: 'no'
        }],
        onChange: newVal => {
          setInsetValY(newVal);

          if (newVal == 'yes') {
            onChange(hOffsetValY + hOffsetUnitY + ' ' + vOffsetValY + vOffsetUnitY + ' ' + blurValY + blurUnitY + ' ' + spreadValY + spreadUnitY + ' ' + colorValY + ' ' + 'inset', 'boxShadow');
          } else {
            onChange(hOffsetValY + hOffsetUnitY + ' ' + vOffsetValY + vOffsetUnitY + ' ' + blurValY + blurUnitY + ' ' + spreadValY + spreadUnitY + ' ' + colorValY, 'boxShadow');
          }
        }
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBoxShadow);

/***/ }),

/***/ "./src/components/css-box-sizing/index.js":
/*!************************************************!*\
  !*** ./src/components/css-box-sizing/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssBoxSizing extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      'border-box': {
        "label": "border-box",
        "value": "border-box"
      },
      'content-box': {
        "label": "content-box",
        "value": "content-box"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Box Sizing",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'boxSizing');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssBoxSizing);

/***/ }),

/***/ "./src/components/css-clear/index.js":
/*!*******************************************!*\
  !*** ./src/components/css-clear/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssClear extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      none: {
        "label": "none",
        "value": "none"
      },
      left: {
        "label": "left",
        "value": "left"
      },
      right: {
        "label": "right",
        "value": "right"
      },
      both: {
        "label": "both",
        "value": "both"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'clear');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssClear);

/***/ }),

/***/ "./src/components/css-color/index.js":
/*!*******************************************!*\
  !*** ./src/components/css-color/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
const {
  Component,
  RawHTML
} = wp.element;







class PGcssColor extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.ColorPalette, {
        value: val,
        colors: _colors_presets__WEBPACK_IMPORTED_MODULE_3__["default"],
        enableAlpha: true,
        onChange: newVal => {
          //console.log(newVal);
          onChange(newVal, 'color');
        }
      }));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssColor);

/***/ }),

/***/ "./src/components/css-cursor/index.js":
/*!********************************************!*\
  !*** ./src/components/css-cursor/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssCursor extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      none: {
        "label": "auto",
        "value": "auto"
      },
      pointer: {
        "label": "pointer",
        "value": "pointer"
      },
      progress: {
        "label": "progress",
        "value": "progress"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, args[val] != undefined ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'display');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssCursor);

/***/ }),

/***/ "./src/components/css-display/index.js":
/*!*********************************************!*\
  !*** ./src/components/css-display/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssDisplay extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      none: {
        "label": "None",
        "value": "none"
      },
      block: {
        "label": "Block",
        "value": "block"
      },
      inline: {
        "label": "Inline",
        "value": "inline"
      },
      'inline-block': {
        "label": "Inline Block",
        "value": "inline-block"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom left",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'display');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssDisplay);

/***/ }),

/***/ "./src/components/css-filter/index.js":
/*!********************************************!*\
  !*** ./src/components/css-filter/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");

const {
  Component
} = wp.element;






class PGcssFilter extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var valParts = val != undefined ? val.split(" ") : [];
      const [valArgs, setvalArgs] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)([]);

      function addFilter(option, index) {
        var isExist = valArgs.find(x => x.id === option.value);

        if (isExist == undefined) {
          var obj = {};
          obj['id'] = option.value;
          obj['val'] = option.val;
          valArgs.push(obj);
          var str = '';
          valArgs.map(x => {
            str += x.id + '(' + x.val + '%) ';
          });
          onChange(str, 'filter');
        }
      }

      (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        //console.log(valParts);
        var filtered = valParts.filter(Boolean);
        var res = filtered.map(x => {
          //console.log(x.length);
          if (x.length != 0) {
            var argVal = x != undefined ? x.match(/\d+/g)[0] : 1;
            var argId = x != undefined ? x.match(/[a-zA-Z]+/g)[0] : '';
            return {
              id: argId,
              val: argVal
            };
          }
        });
        setvalArgs(res); //console.log(res);
      }, [val]);
      (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {//console.log(valArgs);
        //onChange('contrast(200%) brightness(150%) blur(10%)', 'filter');
      }, [valArgs]);
      const [filterArgs, setfilterArgs] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({
        blur: {
          label: 'Blur',
          value: 'blur',
          val: '1',
          unit: 'px'
        },
        brightness: {
          label: 'Brightness',
          value: 'brightness',
          val: '10',
          unit: '%'
        },
        contrast: {
          label: 'Contrast',
          value: 'contrast',
          val: '10',
          unit: '%'
        },
        grayscale: {
          label: 'Grayscale',
          value: 'grayscale',
          val: '10',
          unit: '%'
        },
        'hue-rotate': {
          label: 'Hue-rotate',
          value: 'hue-rotate',
          val: '10',
          unit: 'deg'
        },
        invert: {
          label: 'Invert',
          value: 'invert',
          val: '10',
          unit: '%'
        },
        opacity: {
          label: 'Opacity',
          value: 'opacity',
          val: '10',
          unit: '%'
        },
        saturate: {
          label: 'Saturate',
          value: 'saturate',
          val: '10',
          unit: '%'
        },
        sepia: {
          label: 'Sepia',
          value: 'sepia',
          val: '10',
          unit: '%'
        }
      });
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_2__["default"], {
        position: "bottom right",
        variant: "secondary",
        options: filterArgs,
        buttonTitle: "Add Filter",
        onChange: addFilter,
        values: ""
      })), valArgs != undefined && valArgs.map((arg, i) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "flex my-3 items-center justify-between"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
          for: ""
        }, filterArgs[arg.id].label), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "flex"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
          value: arg.val,
          type: "number",
          min: 0,
          max: 100,
          onChange: newVal => {
            valArgs[i].val = newVal; // setvalArgs(valArgs);

            var str = '';
            valArgs.map(x => {
              str += x.id + '(' + x.val + '%) ';
            });
            onChange(str, 'filter');
          }
        }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          class: "hover:bg-red-500 bg-red-400 text-white ml-1 inline-block p-1 cursor-pointer",
          onClick: ev => {
            valArgs.splice(i, 1);
            setvalArgs(valArgs);
          }
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          class: "dashicons dashicons-no-alt"
        }))));
      }));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssFilter);

/***/ }),

/***/ "./src/components/css-float/index.js":
/*!*******************************************!*\
  !*** ./src/components/css-float/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssFloat extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      none: {
        "label": "none",
        "value": "none"
      },
      left: {
        "label": "left",
        "value": "left"
      },
      right: {
        "label": "right",
        "value": "right"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'float');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssFloat);

/***/ }),

/***/ "./src/components/css-font-size/index.js":
/*!***********************************************!*\
  !*** ./src/components/css-font-size/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssFontSize extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'fontSize');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'fontSize');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssFontSize);

/***/ }),

/***/ "./src/components/css-font-stretch/index.js":
/*!**************************************************!*\
  !*** ./src/components/css-font-stretch/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssFontStretch extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      'ultra-condensed': {
        "label": "ultra-condensed",
        "value": "ultra-condensed"
      },
      'extra-condensed': {
        "label": "extra-condensed",
        "value": "extra-condensed"
      },
      'condensed': {
        "label": "condensed",
        "value": "condensed"
      },
      'semi-condensed': {
        "label": "semi-condensed",
        "value": "semi-condensed"
      },
      'normal': {
        "label": "normal",
        "value": "normal"
      },
      'semi-expanded': {
        "label": "semi-expanded",
        "value": "semi-expanded"
      },
      'expanded': {
        "label": "expanded",
        "value": "expanded"
      },
      'extra-expanded': {
        "label": "extra-expanded",
        "value": "extra-expanded"
      },
      'ultra-expanded': {
        "label": "ultra-expanded",
        "value": "ultra-expanded"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'fontStretch');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssFontStretch);

/***/ }),

/***/ "./src/components/css-font-style/index.js":
/*!************************************************!*\
  !*** ./src/components/css-font-style/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssFontStyle extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      normal: {
        "label": "normal",
        "value": "normal"
      },
      italic: {
        "label": "italic",
        "value": "italic"
      },
      oblique: {
        "label": "oblique",
        "value": "oblique"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'fontStyle');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssFontStyle);

/***/ }),

/***/ "./src/components/css-font-weight/index.js":
/*!*************************************************!*\
  !*** ./src/components/css-font-weight/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssFontWeight extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      'normal': {
        "label": "normal",
        "value": "normal"
      },
      'bold': {
        "label": "bold",
        "value": "bold"
      },
      'bolder': {
        "label": "bolder",
        "value": "bolder"
      },
      'lighter': {
        "label": "lighter",
        "value": "lighter"
      },
      '100': {
        "label": "100",
        "value": "100"
      },
      '200': {
        "label": "200",
        "value": "200"
      },
      '300': {
        "label": "300",
        "value": "300"
      },
      '400': {
        "label": "400",
        "value": "400"
      },
      '500': {
        "label": "500",
        "value": "500"
      },
      '600': {
        "label": "600",
        "value": "600"
      },
      '700': {
        "label": "700",
        "value": "700"
      },
      '800': {
        "label": "800",
        "value": "800"
      },
      '900': {
        "label": "900",
        "value": "900"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'fontWeight');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssFontWeight);

/***/ }),

/***/ "./src/components/css-height/index.js":
/*!********************************************!*\
  !*** ./src/components/css-height/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssHeight extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          //console.log(newVal);
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'height');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'height');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssHeight);

/***/ }),

/***/ "./src/components/css-left/index.js":
/*!******************************************!*\
  !*** ./src/components/css-left/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssLeft extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'left');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'left');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssLeft);

/***/ }),

/***/ "./src/components/css-letter-spacing/index.js":
/*!****************************************************!*\
  !*** ./src/components/css-letter-spacing/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssLetterSpacing extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'letterSpacing');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "Letter Spacing",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'letterSpacing');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssLetterSpacing);

/***/ }),

/***/ "./src/components/css-line-height/index.js":
/*!*************************************************!*\
  !*** ./src/components/css-line-height/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssLineHeight extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        },
        rem: {
          "label": "%",
          "value": "%"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'lineHeight');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "Letter Spacing",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'lineHeight');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssLineHeight);

/***/ }),

/***/ "./src/components/css-margin/index.js":
/*!********************************************!*\
  !*** ./src/components/css-margin/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
const {
  Component,
  RawHTML
} = wp.element;








class PGcssMargin extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.__experimentalBoxControl, {
        label: "",
        values: val,
        onChange: nextValues => {
          onChange(nextValues, 'margin');
        }
      }));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssMargin);

/***/ }),

/***/ "./src/components/css-object-fit/index.js":
/*!************************************************!*\
  !*** ./src/components/css-object-fit/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssObjectFit extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      fill: {
        "label": "fill",
        "value": "fill"
      },
      contain: {
        "label": "contain",
        "value": "contain"
      },
      cover: {
        "label": "cover",
        "value": "cover"
      },
      'scale-down': {
        "label": "scale-down",
        "value": "scale-down"
      },
      none: {
        "label": "none",
        "value": "none"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'objectFit');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssObjectFit);

/***/ }),

/***/ "./src/components/css-opacity/index.js":
/*!*********************************************!*\
  !*** ./src/components/css-opacity/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssOpacity extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: val,
        type: "number",
        min: "0",
        max: "1",
        step: "0.01",
        onChange: newVal => {
          onChange(newVal, 'opacity');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssOpacity);

/***/ }),

/***/ "./src/components/css-outline-offset/index.js":
/*!****************************************************!*\
  !*** ./src/components/css-outline-offset/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssOutlineOffset extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'outlineOffset');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'outlineOffset');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssOutlineOffset);

/***/ }),

/***/ "./src/components/css-outline/index.js":
/*!*********************************************!*\
  !*** ./src/components/css-outline/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");

const {
  Component,
  RawHTML
} = wp.element;





class PGcssOutline extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      fill: {
        "label": "fill",
        "value": "fill"
      },
      contain: {
        "label": "contain",
        "value": "contain"
      },
      cover: {
        "label": "cover",
        "value": "cover"
      },
      'scale-down': {
        "label": "scale-down",
        "value": "scale-down"
      },
      none: {
        "label": "none",
        "value": "none"
      }
    };
    var outlineStyleArgs = {
      none: {
        "label": "None",
        "value": "none"
      },
      hidden: {
        "label": "Hidden",
        "value": "hidden"
      },
      dotted: {
        "label": "Dotted",
        "value": "dotted"
      },
      dashed: {
        "label": "Dashed",
        "value": "dashed"
      },
      solid: {
        "label": "Solid",
        "value": "solid"
      },
      double: {
        "label": "Double",
        "value": "double"
      },
      groove: {
        "label": "Groove",
        "value": "groove"
      },
      ridge: {
        "label": "Ridge",
        "value": "ridge"
      },
      inset: {
        "label": "Inset",
        "value": "inset"
      },
      outset: {
        "label": "Outset",
        "value": "outset"
      }
    };

    function Html() {
      var valParts = val != undefined ? val.split(" ") : ['1px', 'solid', '#000000'];
      var widthVal = valParts[0];
      var styleVal = valParts[1];
      var colorVal = valParts[2]; //console.log(widthVal);
      //console.log(styleVal);
      //console.log(colorVal);

      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = widthVal != undefined ? widthVal.match(/\d+/g)[0] : 1;
      var widthUnitX = widthVal != undefined ? widthVal.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthValY, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnitY, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX); //console.log(widthValY);
      //console.log(widthUnitY);

      const [outlineWidthVal, setoutlineWidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthVal);
      const [outlineStyleVal, setoutlineStyleVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(styleVal);
      const [outlineColorVal, setoutlineColorVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(colorVal);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Outline Width"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthValY,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnitY + ' ' + outlineStyleVal + ' ' + outlineColorVal, 'outline');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, widthUnitY != undefined ? unitArgs[widthUnitY].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthValY + x.value + ' ' + outlineStyleVal + ' ' + outlineColorVal, 'outline');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2 flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Outline Style"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref2 => {
          let {
            isOpen,
            onToggle
          } = _ref2;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "Clear",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, outlineStyleVal ? outlineStyleArgs[outlineStyleVal].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(outlineStyleArgs).map(arg => {
          var index = arg[0];
          var x = arg[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              onChange(outlineWidthVal + ' ' + x.value + ' ' + outlineColorVal, 'outline');
            }
          }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Outline Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.ColorPalette, {
        value: outlineColorVal,
        colors: _colors_presets__WEBPACK_IMPORTED_MODULE_2__["default"],
        enableAlpha: true,
        onChange: newVal => {
          onChange(outlineWidthVal + ' ' + outlineStyleVal + ' ' + newVal, 'outline');
        }
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssOutline);

/***/ }),

/***/ "./src/components/css-overflow-x/index.js":
/*!************************************************!*\
  !*** ./src/components/css-overflow-x/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssOverflowX extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      scroll: {
        "label": "Scroll",
        "value": "scroll"
      },
      hidden: {
        "label": "Hidden",
        "value": "hidden"
      },
      auto: {
        "label": "Auto",
        "value": "auto"
      },
      visible: {
        "label": "Visible",
        "value": "visible"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'overflowX');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssOverflowX);

/***/ }),

/***/ "./src/components/css-overflow-y/index.js":
/*!************************************************!*\
  !*** ./src/components/css-overflow-y/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssOverflowY extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      scroll: {
        "label": "Scroll",
        "value": "scroll"
      },
      hidden: {
        "label": "Hidden",
        "value": "hidden"
      },
      auto: {
        "label": "Auto",
        "value": "auto"
      },
      visible: {
        "label": "Visible",
        "value": "visible"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'overflowY');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssOverflowY);

/***/ }),

/***/ "./src/components/css-overflow/index.js":
/*!**********************************************!*\
  !*** ./src/components/css-overflow/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssOverflow extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      scroll: {
        "label": "Scroll",
        "value": "scroll"
      },
      hidden: {
        "label": "Hidden",
        "value": "hidden"
      },
      auto: {
        "label": "Auto",
        "value": "auto"
      },
      clip: {
        "label": "Clip",
        "value": "clip"
      },
      visible: {
        "label": "Visible",
        "value": "visible"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'overflow');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssOverflow);

/***/ }),

/***/ "./src/components/css-padding/index.js":
/*!*********************************************!*\
  !*** ./src/components/css-padding/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");
const {
  Component,
  RawHTML
} = wp.element;








class PGcssPadding extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.__experimentalBoxControl, {
        label: "",
        values: val,
        onChange: nextValues => {
          onChange(nextValues, 'padding');
        }
      }));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssPadding);

/***/ }),

/***/ "./src/components/css-position/index.js":
/*!**********************************************!*\
  !*** ./src/components/css-position/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssPosition extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      static: {
        "label": "static",
        "value": "static"
      },
      absolute: {
        "label": "absolute",
        "value": "absolute"
      },
      fixed: {
        "label": "fixed",
        "value": "fixed"
      },
      relative: {
        "label": "relative",
        "value": "relative"
      },
      sticky: {
        "label": "sticky",
        "value": "sticky"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'position');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssPosition);

/***/ }),

/***/ "./src/components/css-right/index.js":
/*!*******************************************!*\
  !*** ./src/components/css-right/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssRight extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'right');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'right');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssRight);

/***/ }),

/***/ "./src/components/css-text-align/index.js":
/*!************************************************!*\
  !*** ./src/components/css-text-align/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
const {
  Component,
  RawHTML
} = wp.element;






class PGcssTextAlign extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: [val == 'left' ? 'bg-blue-600 text-white inline-block px-2 py-1 border cursor-pointer' : 'inline-block px-2 py-1 border cursor-pointer'],
        onClick: ev => {
          onChange('left', 'textAlign');
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "24",
        height: "24",
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        "aria-hidden": "true",
        focusable: "false"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M4 19.8h8.9v-1.5H4v1.5zm8.9-15.6H4v1.5h8.9V4.2zm-8.9 7v1.5h16v-1.5H4z"
      }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: [val == 'center' ? 'bg-blue-600 text-white inline-block px-2 py-1 border cursor-pointer' : 'inline-block px-2 py-1 border cursor-pointer'],
        onClick: ev => {
          onChange('center', 'textAlign');
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "24",
        height: "24",
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        "aria-hidden": "true",
        focusable: "false"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M16.4 4.2H7.6v1.5h8.9V4.2zM4 11.2v1.5h16v-1.5H4zm3.6 8.6h8.9v-1.5H7.6v1.5z"
      }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: [val == 'right' ? 'bg-blue-600 text-white inline-block px-2 py-1 border cursor-pointer' : 'inline-block px-2 py-1 border cursor-pointer'],
        onClick: ev => {
          onChange('right', 'textAlign');
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg", {
        width: "24",
        height: "24",
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        "aria-hidden": "true",
        focusable: "false"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path", {
        d: "M11.1 19.8H20v-1.5h-8.9v1.5zm0-15.6v1.5H20V4.2h-8.9zM4 12.8h16v-1.5H4v1.5z"
      }))));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssTextAlign);

/***/ }),

/***/ "./src/components/css-text-decoration/index.js":
/*!*****************************************************!*\
  !*** ./src/components/css-text-decoration/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");

const {
  Component,
  RawHTML
} = wp.element;





class PGcssTextDecoration extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var lineArgs = {
      none: {
        "label": "None",
        "value": "none"
      },
      overline: {
        "label": "Overline",
        "value": "overline"
      },
      underline: {
        "label": "Underline",
        "value": "underline"
      },
      'line-through': {
        "label": "Line Through",
        "value": "line-through"
      }
    };
    var styleArgs = {
      none: {
        "label": "None",
        "value": "none"
      },
      solid: {
        "label": "Solid",
        "value": "solid"
      },
      double: {
        "label": "Double",
        "value": "double"
      },
      wavy: {
        "label": "wavy",
        "value": "wavy"
      },
      dotted: {
        "label": "Dotted",
        "value": "dotted"
      },
      dashed: {
        "label": "Dashed",
        "value": "dashed"
      },
      groove: {
        "label": "Groove",
        "value": "groove"
      },
      ridge: {
        "label": "Ridge",
        "value": "ridge"
      },
      inset: {
        "label": "Inset",
        "value": "inset"
      },
      outset: {
        "label": "Outset",
        "value": "outset"
      }
    };

    function Html() {
      var valParts = val != undefined ? val.split(" ") : ['underline', '#000000', 'wavy', '1px']; //console.log(valParts);

      if (valParts.length == 4) {
        var lineVal = [valParts[0]];
        var colorVal = valParts[1];
        var styleVal = valParts[2];
        var thicknessVal = valParts[3];
      }

      if (valParts.length == 5) {
        var lineVal = [valParts[0], valParts[1]];
        var colorVal = valParts[2];
        var styleVal = valParts[3];
        var thicknessVal = valParts[4];
      }

      if (valParts.length == 6) {
        var lineVal = [valParts[0], valParts[1], valParts[2]];
        var colorVal = valParts[3];
        var styleVal = valParts[4];
        var thicknessVal = valParts[5];
      }

      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var thicknessValX = thicknessVal != undefined ? thicknessVal.match(/\d+/g)[0] : 1;
      var thicknessUnitX = thicknessVal != undefined ? thicknessVal.match(/[a-zA-Z]+/g)[0] : 'px';
      const [thicknessValY, setthicknessVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(thicknessValX);
      const [thicknessUnitY, setthicknessUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(thicknessUnitX); //console.log(thicknessValY);
      //console.log(thicknessUnitY);

      const [outlinelineVal, setoutlinelineVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(lineVal);
      const [outlineColorVal, setoutlineColorVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(colorVal);
      const [outlineStyleVal, setoutlineStyleVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(styleVal);
      const [outlineThicknessVal, setoutlineThicknessVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(thicknessValY + thicknessUnitY);
      const [textDecoration, setTextDecoration] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({
        "line": ['underline'],
        "style": 'double',
        "color": "#000000",
        "thicknessVal": "1",
        "thicknessUnit": "px"
      });
      (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {////console.log(textDecoration);
        //onChange(textDecoration.line.join(' ') + ' ' + textDecoration.style + ' ' + textDecoration.style + ' ' + textDecoration.thicknessVal + textDecoration.thicknessUnit, 'textDecoration');
      }, [textDecoration]);
      (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        ////console.log(val);
        var valParts = val != undefined ? val.split(" ") : ['underline', '#000000', 'wavy', '1px'];
      }, [val]);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, JSON.stringify(outlinelineVal), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Line"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-3"
      }, Object.entries(lineArgs).map(arg => {
        var i = arg[0];
        var x = arg[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          className: outlinelineVal != undefined && outlinelineVal.indexOf(x.value) !== -1 ? '!bg-blue-500 text-white px-2 inline-block m-1 py-1 cursor-pointer' : 'px-2 inline-block m-1 py-1 bg-gray-300 cursor-pointer',
          onClick: ev => {
            if (outlinelineVal.indexOf(x.value) < 0) {
              if (x.value == 'none') {
                outlinelineVal = ['none'];
              } else {
                outlinelineVal.push(x.value);
              }

              setoutlinelineVal(outlinelineVal);
              setTextDecoration({ ...textDecoration,
                line: outlinelineVal
              });
              onChange(outlinelineVal.join(' ') + ' ' + outlineColorVal + ' ' + outlineStyleVal + ' ' + outlineThicknessVal, 'textDecoration');
            } else {
              var arr = outlinelineVal.filter(item => item !== x.value);
              setTextDecoration({ ...textDecoration,
                line: arr
              });
              setoutlinelineVal(arr);
              onChange(arr.join(' ') + ' ' + outlineColorVal + ' ' + outlineStyleVal + ' ' + outlineThicknessVal, 'textDecoration'); //console.log(arr);
            }
          }
        }, x.label);
      }))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.ColorPalette, {
        value: outlineColorVal,
        colors: _colors_presets__WEBPACK_IMPORTED_MODULE_2__["default"],
        enableAlpha: true,
        onChange: newVal => {
          //onChange(outlineThicknessVal + ' ' + outlineStyleVal + ' ' + newVal, 'outline');
          setoutlineColorVal(newVal);
          setTextDecoration({ ...textDecoration,
            color: newVal
          });
          onChange(textDecoration.line.join(' ') + ' ' + newVal + ' ' + outlineStyleVal + ' ' + outlineThicknessVal, 'textDecoration');
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2 flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Style"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "Clear",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, outlineStyleVal ? styleArgs[outlineStyleVal].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(styleArgs).map(arg => {
          var index = arg[0];
          var x = arg[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              //onChange(outlineThicknessVal + ' ' + x.value + ' ' + outlineColorVal, 'outline');
              setoutlineStyleVal(x.value);
              setTextDecoration({ ...textDecoration,
                style: x.value
              });
              onChange(textDecoration.line.join(' ') + ' ' + outlineColorVal + ' ' + x.value + ' ' + outlineThicknessVal, 'textDecoration');
            }
          }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Thickness"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: thicknessValY,
        type: "number",
        onChange: newVal => {
          setthicknessVal(newVal);
          setoutlineThicknessVal(newVal + thicknessUnitY); //setoutlineThicknessVal(newVal + thicknessUnitY);
          //onChange(newVal + thicknessUnitY + ' ' + outlineStyleVal + ' ' + outlineColorVal, 'outline');

          setTextDecoration({ ...textDecoration,
            thicknessVal: newVal
          });
          onChange(textDecoration.line.join(' ') + ' ' + outlineColorVal + ' ' + outlineStyleVal + ' ' + newVal + thicknessUnitY, 'textDecoration');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref2 => {
          let {
            isOpen,
            onToggle
          } = _ref2;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, thicknessUnitY != undefined ? unitArgs[thicknessUnitY].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setthicknessUnit(x.value);
              setoutlineThicknessVal(thicknessValY + x.value);
              onChange(textDecoration.line.join(' ') + ' ' + outlineColorVal + ' ' + outlineStyleVal + ' ' + thicknessValY + x.value, 'textDecoration');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })))));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssTextDecoration);

/***/ }),

/***/ "./src/components/css-text-indent/index.js":
/*!*************************************************!*\
  !*** ./src/components/css-text-indent/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssTextIndent extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'textIndent');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "Text Indent",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'textIndent');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssTextIndent);

/***/ }),

/***/ "./src/components/css-text-justify/index.js":
/*!**************************************************!*\
  !*** ./src/components/css-text-justify/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssTextJustify extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      none: {
        "label": "none",
        "value": "none"
      },
      auto: {
        "label": "auto",
        "value": "auto"
      },
      'inter-word': {
        "label": "inter-word",
        "value": "inter-word"
      },
      'inter-character': {
        "label": "inter-character",
        "value": "inter-character"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'textJustify');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssTextJustify);

/***/ }),

/***/ "./src/components/css-text-shadow/index.js":
/*!*************************************************!*\
  !*** ./src/components/css-text-shadow/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _colors_presets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../colors-presets */ "./src/colors-presets.js");

const {
  Component,
  RawHTML
} = wp.element;





class PGcssTextShadow extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      fill: {
        "label": "fill",
        "value": "fill"
      },
      contain: {
        "label": "contain",
        "value": "contain"
      },
      cover: {
        "label": "cover",
        "value": "cover"
      },
      'scale-down': {
        "label": "scale-down",
        "value": "scale-down"
      },
      none: {
        "label": "none",
        "value": "none"
      }
    };

    function Html() {
      var valParts = val != undefined ? val.split(" ") : ['1px', '1px', '#000000'];
      var horizontalVal = valParts[0];
      var vericalVal = valParts[1];
      var colorVal = valParts[2]; //console.log(horizontalVal);
      //console.log(vericalVal);
      //console.log(colorVal);

      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var horizontalValX = horizontalVal != undefined ? horizontalVal.match(/\d+/g)[0] : 1;
      var horizontalUnitX = horizontalVal != undefined ? horizontalVal.match(/[a-zA-Z]+/g)[0] : 'px';
      var vericalValX = vericalVal != undefined ? vericalVal.match(/\d+/g)[0] : 1;
      var vericalUnitX = vericalVal != undefined ? vericalVal.match(/[a-zA-Z]+/g)[0] : 'px';
      const [horizontalValY, sethorizontalVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(horizontalValX);
      const [horizontalUnitY, sethorizontalUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(horizontalUnitX);
      const [vericalValY, setvericalVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(vericalValX);
      const [vericalUnitY, setvericalUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(vericalUnitX); //console.log(horizontalValY);
      //console.log(horizontalUnitY);
      //console.log(vericalValY);
      //console.log(vericalUnitY);

      const [outlinehorizontalVal, setoutlinehorizontalVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(horizontalVal);
      const [outlinevericalVal, setoutlinevericalVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(vericalVal);
      const [outlineColorVal, setoutlineColorVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(colorVal);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "grid grid-cols-2 gap-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Horizontal"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: horizontalValY,
        type: "number",
        onChange: newVal => {
          sethorizontalVal(newVal);
          onChange(newVal + horizontalUnitY + ' ' + outlinevericalVal + ' ' + outlineColorVal, 'textShadow');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, horizontalUnitY != undefined ? unitArgs[horizontalUnitY].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              sethorizontalUnit(x.value);
              onChange(horizontalValY + x.value + ' ' + outlinevericalVal + ' ' + outlineColorVal, 'textShadow');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Verical"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex justify-between items-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: vericalValY,
        type: "number",
        onChange: newVal => {
          setvericalVal(newVal);
          onChange(outlinehorizontalVal + ' ' + newVal + vericalUnitY + ' ' + outlineColorVal, 'textShadow');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom right",
        renderToggle: _ref2 => {
          let {
            isOpen,
            onToggle
          } = _ref2;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, vericalUnitY != undefined ? unitArgs[vericalUnitY].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setvericalUnit(x.value);
              onChange(outlinehorizontalVal + ' ' + vericalValY + x.value + ' ' + outlineColorVal, 'textShadow');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      }))))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
        for: ""
      }, "Outline Color"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.ColorPalette, {
        value: outlineColorVal,
        colors: _colors_presets__WEBPACK_IMPORTED_MODULE_2__["default"],
        enableAlpha: true,
        onChange: newVal => {
          onChange(outlinehorizontalVal + ' ' + outlinevericalVal + ' ' + newVal, 'textShadow');
        }
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssTextShadow);

/***/ }),

/***/ "./src/components/css-text-transform/index.js":
/*!****************************************************!*\
  !*** ./src/components/css-text-transform/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssTextTransform extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      none: {
        "label": "none",
        "value": "none"
      },
      capitalize: {
        "label": "capitalize",
        "value": "capitalize"
      },
      uppercase: {
        "label": "uppercase",
        "value": "uppercase"
      },
      lowercase: {
        "label": "lowercase",
        "value": "lowercase"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'textTransform');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssTextTransform);

/***/ }),

/***/ "./src/components/css-top/index.js":
/*!*****************************************!*\
  !*** ./src/components/css-top/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssTop extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'top');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'top');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssTop);

/***/ }),

/***/ "./src/components/css-vertical-align/index.js":
/*!****************************************************!*\
  !*** ./src/components/css-vertical-align/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssVerticalAlign extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      baseline: {
        "label": "Baseline",
        "value": "baseline"
      },
      'text-top': {
        "label": "Text Top",
        "value": "text-top"
      },
      'text-bottom': {
        "label": "Text Bottom",
        "value": "text-bottom"
      },
      sub: {
        "label": "Sub",
        "value": "sub"
      },
      super: {
        "label": "Super",
        "value": "super"
      }
    }; //console.log(val);

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'verticalAlign');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssVerticalAlign);

/***/ }),

/***/ "./src/components/css-visibility/index.js":
/*!************************************************!*\
  !*** ./src/components/css-visibility/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssVisibility extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      visible: {
        "label": "visible",
        "value": "visible"
      },
      hidden: {
        "label": "hidden",
        "value": "hidden"
      },
      collapse: {
        "label": "collapse",
        "value": "collapse"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'visibility');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssVisibility);

/***/ }),

/***/ "./src/components/css-width/index.js":
/*!*******************************************!*\
  !*** ./src/components/css-width/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssWidth extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          //console.log(newVal);
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'width');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'width');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssWidth);

/***/ }),

/***/ "./src/components/css-word-break/index.js":
/*!************************************************!*\
  !*** ./src/components/css-word-break/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class PGcssWordBreak extends Component {
  render() {
    const {
      val,
      onChange
    } = this.props;
    var args = {
      normal: {
        "label": "normal",
        "value": "normal"
      },
      'break-all': {
        "label": "break-all",
        "value": "break-all"
      },
      'keep-all': {
        "label": "keep-all",
        "value": "keep-all"
      },
      'break-word': {
        "label": "break-word",
        "value": "break-word"
      }
    };
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: "bottom",
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
          title: "Clear",
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: " "
        }, val ? args[val].label : 'Select...'));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-32"
      }, Object.entries(args).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
          onClick: ev => {
            onChange(x.value, 'wordBreak');
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Reset"), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssWordBreak);

/***/ }),

/***/ "./src/components/css-word-spacing/index.js":
/*!**************************************************!*\
  !*** ./src/components/css-word-spacing/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssWordSpacing extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      var unitArgs = {
        px: {
          "label": "PX",
          "value": "px"
        },
        em: {
          "label": "EM",
          "value": "em"
        },
        rem: {
          "label": "REM",
          "value": "rem"
        }
      };
      var widthValX = val != undefined ? val.match(/\d+/g)[0] : 10;
      var widthUnitX = val != undefined ? val.match(/[a-zA-Z]+/g)[0] : 'px';
      const [widthVal, setwidthVal] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthValX);
      const [widthUnit, setwidthUnit] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(widthUnitX);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: widthVal,
        type: "number",
        onChange: newVal => {
          //console.log(newVal);
          setwidthVal(newVal);
          onChange(newVal + widthUnit, 'wordSpacing');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
        position: "bottom",
        renderToggle: _ref => {
          let {
            isOpen,
            onToggle
          } = _ref;
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
            title: "",
            onClick: onToggle,
            "aria-expanded": isOpen
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: " "
          }, val ? unitArgs[widthUnit].label : 'Select...'));
        },
        renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "w-32"
        }, Object.entries(unitArgs).map(y => {
          var index = y[0];
          var x = y[1];
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
            className: 'px-3 py-1 border-b block hover:bg-gray-400 cursor-pointer',
            onClick: ev => {
              setwidthUnit(x.value);
              onChange(widthVal + x.value, 'wordSpacing');
            }
          }, x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, x.label));
        }))
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssWordSpacing);

/***/ }),

/***/ "./src/components/css-z-index/index.js":
/*!*********************************************!*\
  !*** ./src/components/css-z-index/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGcssZIndex extends Component {
  render() {
    var {
      val,
      onChange
    } = this.props;

    function Html() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex mt-4"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: val,
        type: "number",
        onChange: newVal => {
          onChange(newVal, 'zIndex');
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGcssZIndex);

/***/ }),

/***/ "./src/components/dropdown/index.js":
/*!******************************************!*\
  !*** ./src/components/dropdown/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);




class PGDropdown extends _wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Component {
  render() {
    const {
      position,
      variant,
      options,
      //[{"label":"Select..","icon":"","value":""}]
      buttonTitle,
      onChange,
      values,
      value
    } = this.props;

    function Html() {
      const [pickerOpen, setPickerOpen] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
      const [keyword, setKeyword] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)('');
      const [filteredOptions, setfilteredOptions] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "relative"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "",
        onClick: ev => {
          setPickerOpen(prev => !prev);
        }
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Button, {
        variant: variant
      }, options[value] != undefined ? options[value].label : buttonTitle)), pickerOpen && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Popover, {
        position: position
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "p-2 w-60\t"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.__experimentalInputControl, {
        autocomplete: "off",
        className: "p-3 w-full",
        placeholder: "Search Options",
        value: keyword,
        onChange: newVal => {
          if (newVal.length > 0) {
            setKeyword(newVal);
          } //console.log(typeof options);


          if (typeof options == 'object') {
            setfilteredOptions({});
            var newOptions = {};
            Object.entries(options).map(args => {
              var index = args[0];
              var x = args[1];
              let position = x.label.toLowerCase().search(newVal.toLowerCase());

              if (position < 0) {
                x.exclude = true;
              } else {
                x.exclude = false;
              }

              newOptions[index] = x;
            }); //console.log(newOptions);

            setfilteredOptions(newOptions);
          } else {
            setfilteredOptions([]);
            var newOptions = [];
            options.map((x, index) => {
              let position = x.label.toLowerCase().search(newVal.toLowerCase());

              if (position < 0) {
                x.exclude = true;
              } else {
                x.exclude = false;
              } //newOptions.push(x);

            });
            setfilteredOptions(newOptions);
          }
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, keyword.length == 0 && typeof options == 'object' && Object.entries(options).map(args => {
        var index = args[0];
        var x = args[1];
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "border-b cursor-pointer hover:bg-slate-200 p-2 block",
          onClick: ev => {
            if (x.isPro == true) {
              alert('Sorry this feature only avilbale in pro');
            } else {
              onChange(x, index);
            }
          }
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "flex justify-between"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, x.icon != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: ""
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.RawHTML, null, x.icon)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: ""
        }, x.label, " ")), x.isPro && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "bg-amber-400 rounded-sm px-3  text-white hover:text-white"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", {
          target: "_blank",
          href: 'https://pickplugins.com/post-grid/?utm_source=dropdownComponent&utm_term=proFeature&utm_campaign=pluginPostGrid&utm_medium=' + x.label
        }, "Pro"))), x.description != undefined && x.description.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "text-xs text-slate-400"
        }, x.description));
      }), keyword.length == 0 && typeof options == 'array' && options.map((x, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: " border-b cursor-pointer hover:bg-slate-200 p-2 block",
          onClick: ev => {
            //onChange(x, index)
            if (x.isPro == true) {
              alert('Sorry this feature only avilbale in pro');
            } else {
              onChange(x, index);
            }
          }
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "flex justify-between"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, x.icon != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: ""
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.RawHTML, null, x.icon)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: ""
        }, x.label, " ")), x.isPro && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: "bg-amber-400 rounded-sm px-3  text-white hover:text-white"
        }, "Pro")), x.description != undefined && x.description.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          className: "text-xs text-slate-400"
        }, x.description));
      }), keyword.length > 0 && typeof filteredOptions == 'object' && Object.entries(filteredOptions).map(args => {
        var index = args[0];
        var x = args[1]; ////console.log(x.exclude);

        if (x.exclude == false) {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "  cursor-pointer hover:bg-slate-400 p-2 block",
            onClick: ev => {
              //onChange(x, index)
              if (x.isPro == true) {
                alert('Sorry this feature only avilbale in pro');
              } else {
                onChange(x, index);
              }
            }
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "flex justify-between"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, x.icon != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
            className: ""
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.RawHTML, null, x.icon)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
            className: ""
          }, x.label, " ")), x.isPro && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
            className: "bg-amber-400 rounded-sm px-3  text-white hover:text-white"
          }, "Pro")), x.description != undefined && x.description.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "text-xs text-slate-400"
          }, x.description));
        }
      }), keyword.length > 0 && typeof filteredOptions == 'array' && filteredOptions.map((x, index) => {
        if (x.exclude == false) {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "  cursor-pointer hover:bg-slate-400 p-2 block",
            onClick: ev => {
              //onChange(x, index)
              if (x.isPro == true) {
                alert('Sorry this feature only avilbale in pro');
              } else {
                onChange(x, index);
              }
            }
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "flex justify-between"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, x.icon != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
            className: ""
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.RawHTML, null, x.icon)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
            className: ""
          }, x.label, " ")), x.isPro && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
            className: "bg-amber-400 rounded-sm px-3  text-white hover:text-white"
          }, "Pro")), x.description != undefined && x.description.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
            className: "text-xs text-slate-400"
          }, x.description));
        }
      }), keyword.length > 0 && typeof filteredOptions == 'object' && Object.entries(filteredOptions).length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "text-center p-2 text-red-500 "
      }, "No options found."), keyword.length > 0 && filteredOptions.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "text-center p-2 text-red-500 "
      }, "No options found.")))));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(Html, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGDropdown);

/***/ }),

/***/ "./src/components/icon-picker/bootstrap-icons.js":
/*!*******************************************************!*\
  !*** ./src/components/icon-picker/bootstrap-icons.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const bootstrapIcons = ['bi-123', 'bi-alarm-fill', 'bi-alarm', 'bi-align-bottom', 'bi-align-center', 'bi-align-end', 'bi-align-middle', 'bi-align-start', 'bi-align-top', 'bi-alt', 'bi-app-indicator', 'bi-app', 'bi-archive-fill', 'bi-archive', 'bi-arrow-90deg-down', 'bi-arrow-90deg-left', 'bi-arrow-90deg-right', 'bi-arrow-90deg-up', 'bi-arrow-bar-down', 'bi-arrow-bar-left', 'bi-arrow-bar-right', 'bi-arrow-bar-up', 'bi-arrow-clockwise', 'bi-arrow-counterclockwise', 'bi-arrow-down-circle-fill', 'bi-arrow-down-circle', 'bi-arrow-down-left-circle-fill', 'bi-arrow-down-left-circle', 'bi-arrow-down-left-square-fill', 'bi-arrow-down-left-square', 'bi-arrow-down-left', 'bi-arrow-down-right-circle-fill', 'bi-arrow-down-right-circle', 'bi-arrow-down-right-square-fill', 'bi-arrow-down-right-square', 'bi-arrow-down-right', 'bi-arrow-down-short', 'bi-arrow-down-square-fill', 'bi-arrow-down-square', 'bi-arrow-down-up', 'bi-arrow-down', 'bi-arrow-left-circle-fill', 'bi-arrow-left-circle', 'bi-arrow-left-right', 'bi-arrow-left-short', 'bi-arrow-left-square-fill', 'bi-arrow-left-square', 'bi-arrow-left', 'bi-arrow-repeat', 'bi-arrow-return-left', 'bi-arrow-return-right', 'bi-arrow-right-circle-fill', 'bi-arrow-right-circle', 'bi-arrow-right-short', 'bi-arrow-right-square-fill', 'bi-arrow-right-square', 'bi-arrow-right', 'bi-arrow-up-circle-fill', 'bi-arrow-up-circle', 'bi-arrow-up-left-circle-fill', 'bi-arrow-up-left-circle', 'bi-arrow-up-left-square-fill', 'bi-arrow-up-left-square', 'bi-arrow-up-left', 'bi-arrow-up-right-circle-fill', 'bi-arrow-up-right-circle', 'bi-arrow-up-right-square-fill', 'bi-arrow-up-right-square', 'bi-arrow-up-right', 'bi-arrow-up-short', 'bi-arrow-up-square-fill', 'bi-arrow-up-square', 'bi-arrow-up', 'bi-arrows-angle-contract', 'bi-arrows-angle-expand', 'bi-arrows-collapse', 'bi-arrows-expand', 'bi-arrows-fullscreen', 'bi-arrows-move', 'bi-aspect-ratio-fill', 'bi-aspect-ratio', 'bi-asterisk', 'bi-at', 'bi-award-fill', 'bi-award', 'bi-back', 'bi-backspace-fill', 'bi-backspace-reverse-fill', 'bi-backspace-reverse', 'bi-backspace', 'bi-badge-3d-fill', 'bi-badge-3d', 'bi-badge-4k-fill', 'bi-badge-4k', 'bi-badge-8k-fill', 'bi-badge-8k', 'bi-badge-ad-fill', 'bi-badge-ad', 'bi-badge-ar-fill', 'bi-badge-ar', 'bi-badge-cc-fill', 'bi-badge-cc', 'bi-badge-hd-fill', 'bi-badge-hd', 'bi-badge-tm-fill', 'bi-badge-tm', 'bi-badge-vo-fill', 'bi-badge-vo', 'bi-badge-vr-fill', 'bi-badge-vr', 'bi-badge-wc-fill', 'bi-badge-wc', 'bi-bag-check-fill', 'bi-bag-check', 'bi-bag-dash-fill', 'bi-bag-dash', 'bi-bag-fill', 'bi-bag-plus-fill', 'bi-bag-plus', 'bi-bag-x-fill', 'bi-bag-x', 'bi-bag', 'bi-bar-chart-fill', 'bi-bar-chart-line-fill', 'bi-bar-chart-line', 'bi-bar-chart-steps', 'bi-bar-chart', 'bi-basket-fill', 'bi-basket', 'bi-basket2-fill', 'bi-basket2', 'bi-basket3-fill', 'bi-basket3', 'bi-battery-charging', 'bi-battery-full', 'bi-battery-half', 'bi-battery', 'bi-bell-fill', 'bi-bell', 'bi-bezier', 'bi-bezier2', 'bi-bicycle', 'bi-binoculars-fill', 'bi-binoculars', 'bi-blockquote-left', 'bi-blockquote-right', 'bi-book-fill', 'bi-book-half', 'bi-book', 'bi-bookmark-check-fill', 'bi-bookmark-check', 'bi-bookmark-dash-fill', 'bi-bookmark-dash', 'bi-bookmark-fill', 'bi-bookmark-heart-fill', 'bi-bookmark-heart', 'bi-bookmark-plus-fill', 'bi-bookmark-plus', 'bi-bookmark-star-fill', 'bi-bookmark-star', 'bi-bookmark-x-fill', 'bi-bookmark-x', 'bi-bookmark', 'bi-bookmarks-fill', 'bi-bookmarks', 'bi-bookshelf', 'bi-bootstrap-fill', 'bi-bootstrap-reboot', 'bi-bootstrap', 'bi-border-all', 'bi-border-bottom', 'bi-border-center', 'bi-border-inner', 'bi-border-left', 'bi-border-middle', 'bi-border-outer', 'bi-border-right', 'bi-border-style', 'bi-border-top', 'bi-border-width', 'bi-border', 'bi-bounding-box-circles', 'bi-bounding-box', 'bi-box-arrow-down-left', 'bi-box-arrow-down-right', 'bi-box-arrow-down', 'bi-box-arrow-in-down-left', 'bi-box-arrow-in-down-right', 'bi-box-arrow-in-down', 'bi-box-arrow-in-left', 'bi-box-arrow-in-right', 'bi-box-arrow-in-up-left', 'bi-box-arrow-in-up-right', 'bi-box-arrow-in-up', 'bi-box-arrow-left', 'bi-box-arrow-right', 'bi-box-arrow-up-left', 'bi-box-arrow-up-right', 'bi-box-arrow-up', 'bi-box-seam', 'bi-box', 'bi-braces', 'bi-bricks', 'bi-briefcase-fill', 'bi-briefcase', 'bi-brightness-alt-high-fill', 'bi-brightness-alt-high', 'bi-brightness-alt-low-fill', 'bi-brightness-alt-low', 'bi-brightness-high-fill', 'bi-brightness-high', 'bi-brightness-low-fill', 'bi-brightness-low', 'bi-broadcast-pin', 'bi-broadcast', 'bi-brush-fill', 'bi-brush', 'bi-bucket-fill', 'bi-bucket', 'bi-bug-fill', 'bi-bug', 'bi-building', 'bi-bullseye', 'bi-calculator-fill', 'bi-calculator', 'bi-calendar-check-fill', 'bi-calendar-check', 'bi-calendar-date-fill', 'bi-calendar-date', 'bi-calendar-day-fill', 'bi-calendar-day', 'bi-calendar-event-fill', 'bi-calendar-event', 'bi-calendar-fill', 'bi-calendar-minus-fill', 'bi-calendar-minus', 'bi-calendar-month-fill', 'bi-calendar-month', 'bi-calendar-plus-fill', 'bi-calendar-plus', 'bi-calendar-range-fill', 'bi-calendar-range', 'bi-calendar-week-fill', 'bi-calendar-week', 'bi-calendar-x-fill', 'bi-calendar-x', 'bi-calendar', 'bi-calendar2-check-fill', 'bi-calendar2-check', 'bi-calendar2-date-fill', 'bi-calendar2-date', 'bi-calendar2-day-fill', 'bi-calendar2-day', 'bi-calendar2-event-fill', 'bi-calendar2-event', 'bi-calendar2-fill', 'bi-calendar2-minus-fill', 'bi-calendar2-minus', 'bi-calendar2-month-fill', 'bi-calendar2-month', 'bi-calendar2-plus-fill', 'bi-calendar2-plus', 'bi-calendar2-range-fill', 'bi-calendar2-range', 'bi-calendar2-week-fill', 'bi-calendar2-week', 'bi-calendar2-x-fill', 'bi-calendar2-x', 'bi-calendar2', 'bi-calendar3-event-fill', 'bi-calendar3-event', 'bi-calendar3-fill', 'bi-calendar3-range-fill', 'bi-calendar3-range', 'bi-calendar3-week-fill', 'bi-calendar3-week', 'bi-calendar3', 'bi-calendar4-event', 'bi-calendar4-range', 'bi-calendar4-week', 'bi-calendar4', 'bi-camera-fill', 'bi-camera-reels-fill', 'bi-camera-reels', 'bi-camera-video-fill', 'bi-camera-video-off-fill', 'bi-camera-video-off', 'bi-camera-video', 'bi-camera', 'bi-camera2', 'bi-capslock-fill', 'bi-capslock', 'bi-card-checklist', 'bi-card-heading', 'bi-card-image', 'bi-card-list', 'bi-card-text', 'bi-caret-down-fill', 'bi-caret-down-square-fill', 'bi-caret-down-square', 'bi-caret-down', 'bi-caret-left-fill', 'bi-caret-left-square-fill', 'bi-caret-left-square', 'bi-caret-left', 'bi-caret-right-fill', 'bi-caret-right-square-fill', 'bi-caret-right-square', 'bi-caret-right', 'bi-caret-up-fill', 'bi-caret-up-square-fill', 'bi-caret-up-square', 'bi-caret-up', 'bi-cart-check-fill', 'bi-cart-check', 'bi-cart-dash-fill', 'bi-cart-dash', 'bi-cart-fill', 'bi-cart-plus-fill', 'bi-cart-plus', 'bi-cart-x-fill', 'bi-cart-x', 'bi-cart', 'bi-cart2', 'bi-cart3', 'bi-cart4', 'bi-cash-stack', 'bi-cash', 'bi-cast', 'bi-chat-dots-fill', 'bi-chat-dots', 'bi-chat-fill', 'bi-chat-left-dots-fill', 'bi-chat-left-dots', 'bi-chat-left-fill', 'bi-chat-left-quote-fill', 'bi-chat-left-quote', 'bi-chat-left-text-fill', 'bi-chat-left-text', 'bi-chat-left', 'bi-chat-quote-fill', 'bi-chat-quote', 'bi-chat-right-dots-fill', 'bi-chat-right-dots', 'bi-chat-right-fill', 'bi-chat-right-quote-fill', 'bi-chat-right-quote', 'bi-chat-right-text-fill', 'bi-chat-right-text', 'bi-chat-right', 'bi-chat-square-dots-fill', 'bi-chat-square-dots', 'bi-chat-square-fill', 'bi-chat-square-quote-fill', 'bi-chat-square-quote', 'bi-chat-square-text-fill', 'bi-chat-square-text', 'bi-chat-square', 'bi-chat-text-fill', 'bi-chat-text', 'bi-chat', 'bi-check-all', 'bi-check-circle-fill', 'bi-check-circle', 'bi-check-square-fill', 'bi-check-square', 'bi-check', 'bi-check2-all', 'bi-check2-circle', 'bi-check2-square', 'bi-check2', 'bi-chevron-bar-contract', 'bi-chevron-bar-down', 'bi-chevron-bar-expand', 'bi-chevron-bar-left', 'bi-chevron-bar-right', 'bi-chevron-bar-up', 'bi-chevron-compact-down', 'bi-chevron-compact-left', 'bi-chevron-compact-right', 'bi-chevron-compact-up', 'bi-chevron-contract', 'bi-chevron-double-down', 'bi-chevron-double-left', 'bi-chevron-double-right', 'bi-chevron-double-up', 'bi-chevron-down', 'bi-chevron-expand', 'bi-chevron-left', 'bi-chevron-right', 'bi-chevron-up', 'bi-circle-fill', 'bi-circle-half', 'bi-circle-square', 'bi-circle', 'bi-clipboard-check', 'bi-clipboard-data', 'bi-clipboard-minus', 'bi-clipboard-plus', 'bi-clipboard-x', 'bi-clipboard', 'bi-clock-fill', 'bi-clock-history', 'bi-clock', 'bi-cloud-arrow-down-fill', 'bi-cloud-arrow-down', 'bi-cloud-arrow-up-fill', 'bi-cloud-arrow-up', 'bi-cloud-check-fill', 'bi-cloud-check', 'bi-cloud-download-fill', 'bi-cloud-download', 'bi-cloud-drizzle-fill', 'bi-cloud-drizzle', 'bi-cloud-fill', 'bi-cloud-fog-fill', 'bi-cloud-fog', 'bi-cloud-fog2-fill', 'bi-cloud-fog2', 'bi-cloud-hail-fill', 'bi-cloud-hail', 'bi-cloud-haze-1', 'bi-cloud-haze-fill', 'bi-cloud-haze', 'bi-cloud-haze2-fill', 'bi-cloud-lightning-fill', 'bi-cloud-lightning-rain-fill', 'bi-cloud-lightning-rain', 'bi-cloud-lightning', 'bi-cloud-minus-fill', 'bi-cloud-minus', 'bi-cloud-moon-fill', 'bi-cloud-moon', 'bi-cloud-plus-fill', 'bi-cloud-plus', 'bi-cloud-rain-fill', 'bi-cloud-rain-heavy-fill', 'bi-cloud-rain-heavy', 'bi-cloud-rain', 'bi-cloud-slash-fill', 'bi-cloud-slash', 'bi-cloud-sleet-fill', 'bi-cloud-sleet', 'bi-cloud-snow-fill', 'bi-cloud-snow', 'bi-cloud-sun-fill', 'bi-cloud-sun', 'bi-cloud-upload-fill', 'bi-cloud-upload', 'bi-cloud', 'bi-clouds-fill', 'bi-clouds', 'bi-cloudy-fill', 'bi-cloudy', 'bi-code-slash', 'bi-code-square', 'bi-code', 'bi-collection-fill', 'bi-collection-play-fill', 'bi-collection-play', 'bi-collection', 'bi-columns-gap', 'bi-columns', 'bi-command', 'bi-compass-fill', 'bi-compass', 'bi-cone-striped', 'bi-cone', 'bi-controller', 'bi-cpu-fill', 'bi-cpu', 'bi-credit-card-2-back-fill', 'bi-credit-card-2-back', 'bi-credit-card-2-front-fill', 'bi-credit-card-2-front', 'bi-credit-card-fill', 'bi-credit-card', 'bi-crop', 'bi-cup-fill', 'bi-cup-straw', 'bi-cup', 'bi-cursor-fill', 'bi-cursor-text', 'bi-cursor', 'bi-dash-circle-dotted', 'bi-dash-circle-fill', 'bi-dash-circle', 'bi-dash-square-dotted', 'bi-dash-square-fill', 'bi-dash-square', 'bi-dash', 'bi-diagram-2-fill', 'bi-diagram-2', 'bi-diagram-3-fill', 'bi-diagram-3', 'bi-diamond-fill', 'bi-diamond-half', 'bi-diamond', 'bi-dice-1-fill', 'bi-dice-1', 'bi-dice-2-fill', 'bi-dice-2', 'bi-dice-3-fill', 'bi-dice-3', 'bi-dice-4-fill', 'bi-dice-4', 'bi-dice-5-fill', 'bi-dice-5', 'bi-dice-6-fill', 'bi-dice-6', 'bi-disc-fill', 'bi-disc', 'bi-discord', 'bi-display-fill', 'bi-display', 'bi-distribute-horizontal', 'bi-distribute-vertical', 'bi-door-closed-fill', 'bi-door-closed', 'bi-door-open-fill', 'bi-door-open', 'bi-dot', 'bi-download', 'bi-droplet-fill', 'bi-droplet-half', 'bi-droplet', 'bi-earbuds', 'bi-easel-fill', 'bi-easel', 'bi-egg-fill', 'bi-egg-fried', 'bi-egg', 'bi-eject-fill', 'bi-eject', 'bi-emoji-angry-fill', 'bi-emoji-angry', 'bi-emoji-dizzy-fill', 'bi-emoji-dizzy', 'bi-emoji-expressionless-fill', 'bi-emoji-expressionless', 'bi-emoji-frown-fill', 'bi-emoji-frown', 'bi-emoji-heart-eyes-fill', 'bi-emoji-heart-eyes', 'bi-emoji-laughing-fill', 'bi-emoji-laughing', 'bi-emoji-neutral-fill', 'bi-emoji-neutral', 'bi-emoji-smile-fill', 'bi-emoji-smile-upside-down-fill', 'bi-emoji-smile-upside-down', 'bi-emoji-smile', 'bi-emoji-sunglasses-fill', 'bi-emoji-sunglasses', 'bi-emoji-wink-fill', 'bi-emoji-wink', 'bi-envelope-fill', 'bi-envelope-open-fill', 'bi-envelope-open', 'bi-envelope', 'bi-eraser-fill', 'bi-eraser', 'bi-exclamation-circle-fill', 'bi-exclamation-circle', 'bi-exclamation-diamond-fill', 'bi-exclamation-diamond', 'bi-exclamation-octagon-fill', 'bi-exclamation-octagon', 'bi-exclamation-square-fill', 'bi-exclamation-square', 'bi-exclamation-triangle-fill', 'bi-exclamation-triangle', 'bi-exclamation', 'bi-exclude', 'bi-eye-fill', 'bi-eye-slash-fill', 'bi-eye-slash', 'bi-eye', 'bi-eyedropper', 'bi-eyeglasses', 'bi-facebook', 'bi-file-arrow-down-fill', 'bi-file-arrow-down', 'bi-file-arrow-up-fill', 'bi-file-arrow-up', 'bi-file-bar-graph-fill', 'bi-file-bar-graph', 'bi-file-binary-fill', 'bi-file-binary', 'bi-file-break-fill', 'bi-file-break', 'bi-file-check-fill', 'bi-file-check', 'bi-file-code-fill', 'bi-file-code', 'bi-file-diff-fill', 'bi-file-diff', 'bi-file-earmark-arrow-down-fill', 'bi-file-earmark-arrow-down', 'bi-file-earmark-arrow-up-fill', 'bi-file-earmark-arrow-up', 'bi-file-earmark-bar-graph-fill', 'bi-file-earmark-bar-graph', 'bi-file-earmark-binary-fill', 'bi-file-earmark-binary', 'bi-file-earmark-break-fill', 'bi-file-earmark-break', 'bi-file-earmark-check-fill', 'bi-file-earmark-check', 'bi-file-earmark-code-fill', 'bi-file-earmark-code', 'bi-file-earmark-diff-fill', 'bi-file-earmark-diff', 'bi-file-earmark-easel-fill', 'bi-file-earmark-easel', 'bi-file-earmark-excel-fill', 'bi-file-earmark-excel', 'bi-file-earmark-fill', 'bi-file-earmark-font-fill', 'bi-file-earmark-font', 'bi-file-earmark-image-fill', 'bi-file-earmark-image', 'bi-file-earmark-lock-fill', 'bi-file-earmark-lock', 'bi-file-earmark-lock2-fill', 'bi-file-earmark-lock2', 'bi-file-earmark-medical-fill', 'bi-file-earmark-medical', 'bi-file-earmark-minus-fill', 'bi-file-earmark-minus', 'bi-file-earmark-music-fill', 'bi-file-earmark-music', 'bi-file-earmark-person-fill', 'bi-file-earmark-person', 'bi-file-earmark-play-fill', 'bi-file-earmark-play', 'bi-file-earmark-plus-fill', 'bi-file-earmark-plus', 'bi-file-earmark-post-fill', 'bi-file-earmark-post', 'bi-file-earmark-ppt-fill', 'bi-file-earmark-ppt', 'bi-file-earmark-richtext-fill', 'bi-file-earmark-richtext', 'bi-file-earmark-ruled-fill', 'bi-file-earmark-ruled', 'bi-file-earmark-slides-fill', 'bi-file-earmark-slides', 'bi-file-earmark-spreadsheet-fill', 'bi-file-earmark-spreadsheet', 'bi-file-earmark-text-fill', 'bi-file-earmark-text', 'bi-file-earmark-word-fill', 'bi-file-earmark-word', 'bi-file-earmark-x-fill', 'bi-file-earmark-x', 'bi-file-earmark-zip-fill', 'bi-file-earmark-zip', 'bi-file-earmark', 'bi-file-easel-fill', 'bi-file-easel', 'bi-file-excel-fill', 'bi-file-excel', 'bi-file-fill', 'bi-file-font-fill', 'bi-file-font', 'bi-file-image-fill', 'bi-file-image', 'bi-file-lock-fill', 'bi-file-lock', 'bi-file-lock2-fill', 'bi-file-lock2', 'bi-file-medical-fill', 'bi-file-medical', 'bi-file-minus-fill', 'bi-file-minus', 'bi-file-music-fill', 'bi-file-music', 'bi-file-person-fill', 'bi-file-person', 'bi-file-play-fill', 'bi-file-play', 'bi-file-plus-fill', 'bi-file-plus', 'bi-file-post-fill', 'bi-file-post', 'bi-file-ppt-fill', 'bi-file-ppt', 'bi-file-richtext-fill', 'bi-file-richtext', 'bi-file-ruled-fill', 'bi-file-ruled', 'bi-file-slides-fill', 'bi-file-slides', 'bi-file-spreadsheet-fill', 'bi-file-spreadsheet', 'bi-file-text-fill', 'bi-file-text', 'bi-file-word-fill', 'bi-file-word', 'bi-file-x-fill', 'bi-file-x', 'bi-file-zip-fill', 'bi-file-zip', 'bi-file', 'bi-files-alt', 'bi-files', 'bi-film', 'bi-filter-circle-fill', 'bi-filter-circle', 'bi-filter-left', 'bi-filter-right', 'bi-filter-square-fill', 'bi-filter-square', 'bi-filter', 'bi-flag-fill', 'bi-flag', 'bi-flower1', 'bi-flower2', 'bi-flower3', 'bi-folder-check', 'bi-folder-fill', 'bi-folder-minus', 'bi-folder-plus', 'bi-folder-symlink-fill', 'bi-folder-symlink', 'bi-folder-x', 'bi-folder', 'bi-folder2-open', 'bi-folder2', 'bi-fonts', 'bi-forward-fill', 'bi-forward', 'bi-front', 'bi-fullscreen-exit', 'bi-fullscreen', 'bi-funnel-fill', 'bi-funnel', 'bi-gear-fill', 'bi-gear-wide-connected', 'bi-gear-wide', 'bi-gear', 'bi-gem', 'bi-geo-alt-fill', 'bi-geo-alt', 'bi-geo-fill', 'bi-geo', 'bi-gift-fill', 'bi-gift', 'bi-github', 'bi-globe', 'bi-globe2', 'bi-google', 'bi-graph-down', 'bi-graph-up', 'bi-grid-1x2-fill', 'bi-grid-1x2', 'bi-grid-3x2-gap-fill', 'bi-grid-3x2-gap', 'bi-grid-3x2', 'bi-grid-3x3-gap-fill', 'bi-grid-3x3-gap', 'bi-grid-3x3', 'bi-grid-fill', 'bi-grid', 'bi-grip-horizontal', 'bi-grip-vertical', 'bi-hammer', 'bi-hand-index-fill', 'bi-hand-index-thumb-fill', 'bi-hand-index-thumb', 'bi-hand-index', 'bi-hand-thumbs-down-fill', 'bi-hand-thumbs-down', 'bi-hand-thumbs-up-fill', 'bi-hand-thumbs-up', 'bi-handbag-fill', 'bi-handbag', 'bi-hash', 'bi-hdd-fill', 'bi-hdd-network-fill', 'bi-hdd-network', 'bi-hdd-rack-fill', 'bi-hdd-rack', 'bi-hdd-stack-fill', 'bi-hdd-stack', 'bi-hdd', 'bi-headphones', 'bi-headset', 'bi-heart-fill', 'bi-heart-half', 'bi-heart', 'bi-heptagon-fill', 'bi-heptagon-half', 'bi-heptagon', 'bi-hexagon-fill', 'bi-hexagon-half', 'bi-hexagon', 'bi-hourglass-bottom', 'bi-hourglass-split', 'bi-hourglass-top', 'bi-hourglass', 'bi-house-door-fill', 'bi-house-door', 'bi-house-fill', 'bi-house', 'bi-hr', 'bi-hurricane', 'bi-image-alt', 'bi-image-fill', 'bi-image', 'bi-images', 'bi-inbox-fill', 'bi-inbox', 'bi-inboxes-fill', 'bi-inboxes', 'bi-info-circle-fill', 'bi-info-circle', 'bi-info-square-fill', 'bi-info-square', 'bi-info', 'bi-input-cursor-text', 'bi-input-cursor', 'bi-instagram', 'bi-intersect', 'bi-journal-album', 'bi-journal-arrow-down', 'bi-journal-arrow-up', 'bi-journal-bookmark-fill', 'bi-journal-bookmark', 'bi-journal-check', 'bi-journal-code', 'bi-journal-medical', 'bi-journal-minus', 'bi-journal-plus', 'bi-journal-richtext', 'bi-journal-text', 'bi-journal-x', 'bi-journal', 'bi-journals', 'bi-joystick', 'bi-justify-left', 'bi-justify-right', 'bi-justify', 'bi-kanban-fill', 'bi-kanban', 'bi-key-fill', 'bi-key', 'bi-keyboard-fill', 'bi-keyboard', 'bi-ladder', 'bi-lamp-fill', 'bi-lamp', 'bi-laptop-fill', 'bi-laptop', 'bi-layer-backward', 'bi-layer-forward', 'bi-layers-fill', 'bi-layers-half', 'bi-layers', 'bi-layout-sidebar-inset-reverse', 'bi-layout-sidebar-inset', 'bi-layout-sidebar-reverse', 'bi-layout-sidebar', 'bi-layout-split', 'bi-layout-text-sidebar-reverse', 'bi-layout-text-sidebar', 'bi-layout-text-window-reverse', 'bi-layout-text-window', 'bi-layout-three-columns', 'bi-layout-wtf', 'bi-life-preserver', 'bi-lightbulb-fill', 'bi-lightbulb-off-fill', 'bi-lightbulb-off', 'bi-lightbulb', 'bi-lightning-charge-fill', 'bi-lightning-charge', 'bi-lightning-fill', 'bi-lightning', 'bi-link-45deg', 'bi-link', 'bi-linkedin', 'bi-list-check', 'bi-list-nested', 'bi-list-ol', 'bi-list-stars', 'bi-list-task', 'bi-list-ul', 'bi-list', 'bi-lock-fill', 'bi-lock', 'bi-mailbox', 'bi-mailbox2', 'bi-map-fill', 'bi-map', 'bi-markdown-fill', 'bi-markdown', 'bi-mask', 'bi-megaphone-fill', 'bi-megaphone', 'bi-menu-app-fill', 'bi-menu-app', 'bi-menu-button-fill', 'bi-menu-button-wide-fill', 'bi-menu-button-wide', 'bi-menu-button', 'bi-menu-down', 'bi-menu-up', 'bi-mic-fill', 'bi-mic-mute-fill', 'bi-mic-mute', 'bi-mic', 'bi-minecart-loaded', 'bi-minecart', 'bi-moisture', 'bi-moon-fill', 'bi-moon-stars-fill', 'bi-moon-stars', 'bi-moon', 'bi-mouse-fill', 'bi-mouse', 'bi-mouse2-fill', 'bi-mouse2', 'bi-mouse3-fill', 'bi-mouse3', 'bi-music-note-beamed', 'bi-music-note-list', 'bi-music-note', 'bi-music-player-fill', 'bi-music-player', 'bi-newspaper', 'bi-node-minus-fill', 'bi-node-minus', 'bi-node-plus-fill', 'bi-node-plus', 'bi-nut-fill', 'bi-nut', 'bi-octagon-fill', 'bi-octagon-half', 'bi-octagon', 'bi-option', 'bi-outlet', 'bi-paint-bucket', 'bi-palette-fill', 'bi-palette', 'bi-palette2', 'bi-paperclip', 'bi-paragraph', 'bi-patch-check-fill', 'bi-patch-check', 'bi-patch-exclamation-fill', 'bi-patch-exclamation', 'bi-patch-minus-fill', 'bi-patch-minus', 'bi-patch-plus-fill', 'bi-patch-plus', 'bi-patch-question-fill', 'bi-patch-question', 'bi-pause-btn-fill', 'bi-pause-btn', 'bi-pause-circle-fill', 'bi-pause-circle', 'bi-pause-fill', 'bi-pause', 'bi-peace-fill', 'bi-peace', 'bi-pen-fill', 'bi-pen', 'bi-pencil-fill', 'bi-pencil-square', 'bi-pencil', 'bi-pentagon-fill', 'bi-pentagon-half', 'bi-pentagon', 'bi-people-fill', 'bi-people', 'bi-percent', 'bi-person-badge-fill', 'bi-person-badge', 'bi-person-bounding-box', 'bi-person-check-fill', 'bi-person-check', 'bi-person-circle', 'bi-person-dash-fill', 'bi-person-dash', 'bi-person-fill', 'bi-person-lines-fill', 'bi-person-plus-fill', 'bi-person-plus', 'bi-person-square', 'bi-person-x-fill', 'bi-person-x', 'bi-person', 'bi-phone-fill', 'bi-phone-landscape-fill', 'bi-phone-landscape', 'bi-phone-vibrate-fill', 'bi-phone-vibrate', 'bi-phone', 'bi-pie-chart-fill', 'bi-pie-chart', 'bi-pin-angle-fill', 'bi-pin-angle', 'bi-pin-fill', 'bi-pin', 'bi-pip-fill', 'bi-pip', 'bi-play-btn-fill', 'bi-play-btn', 'bi-play-circle-fill', 'bi-play-circle', 'bi-play-fill', 'bi-play', 'bi-plug-fill', 'bi-plug', 'bi-plus-circle-dotted', 'bi-plus-circle-fill', 'bi-plus-circle', 'bi-plus-square-dotted', 'bi-plus-square-fill', 'bi-plus-square', 'bi-plus', 'bi-power', 'bi-printer-fill', 'bi-printer', 'bi-puzzle-fill', 'bi-puzzle', 'bi-question-circle-fill', 'bi-question-circle', 'bi-question-diamond-fill', 'bi-question-diamond', 'bi-question-octagon-fill', 'bi-question-octagon', 'bi-question-square-fill', 'bi-question-square', 'bi-question', 'bi-rainbow', 'bi-receipt-cutoff', 'bi-receipt', 'bi-reception-0', 'bi-reception-1', 'bi-reception-2', 'bi-reception-3', 'bi-reception-4', 'bi-record-btn-fill', 'bi-record-btn', 'bi-record-circle-fill', 'bi-record-circle', 'bi-record-fill', 'bi-record', 'bi-record2-fill', 'bi-record2', 'bi-reply-all-fill', 'bi-reply-all', 'bi-reply-fill', 'bi-reply', 'bi-rss-fill', 'bi-rss', 'bi-rulers', 'bi-save-fill', 'bi-save', 'bi-save2-fill', 'bi-save2', 'bi-scissors', 'bi-screwdriver', 'bi-search', 'bi-segmented-nav', 'bi-server', 'bi-share-fill', 'bi-share', 'bi-shield-check', 'bi-shield-exclamation', 'bi-shield-fill-check', 'bi-shield-fill-exclamation', 'bi-shield-fill-minus', 'bi-shield-fill-plus', 'bi-shield-fill-x', 'bi-shield-fill', 'bi-shield-lock-fill', 'bi-shield-lock', 'bi-shield-minus', 'bi-shield-plus', 'bi-shield-shaded', 'bi-shield-slash-fill', 'bi-shield-slash', 'bi-shield-x', 'bi-shield', 'bi-shift-fill', 'bi-shift', 'bi-shop-window', 'bi-shop', 'bi-shuffle', 'bi-signpost-2-fill', 'bi-signpost-2', 'bi-signpost-fill', 'bi-signpost-split-fill', 'bi-signpost-split', 'bi-signpost', 'bi-sim-fill', 'bi-sim', 'bi-skip-backward-btn-fill', 'bi-skip-backward-btn', 'bi-skip-backward-circle-fill', 'bi-skip-backward-circle', 'bi-skip-backward-fill', 'bi-skip-backward', 'bi-skip-end-btn-fill', 'bi-skip-end-btn', 'bi-skip-end-circle-fill', 'bi-skip-end-circle', 'bi-skip-end-fill', 'bi-skip-end', 'bi-skip-forward-btn-fill', 'bi-skip-forward-btn', 'bi-skip-forward-circle-fill', 'bi-skip-forward-circle', 'bi-skip-forward-fill', 'bi-skip-forward', 'bi-skip-start-btn-fill', 'bi-skip-start-btn', 'bi-skip-start-circle-fill', 'bi-skip-start-circle', 'bi-skip-start-fill', 'bi-skip-start', 'bi-slack', 'bi-slash-circle-fill', 'bi-slash-circle', 'bi-slash-square-fill', 'bi-slash-square', 'bi-slash', 'bi-sliders', 'bi-smartwatch', 'bi-snow', 'bi-snow2', 'bi-snow3', 'bi-sort-alpha-down-alt', 'bi-sort-alpha-down', 'bi-sort-alpha-up-alt', 'bi-sort-alpha-up', 'bi-sort-down-alt', 'bi-sort-down', 'bi-sort-numeric-down-alt', 'bi-sort-numeric-down', 'bi-sort-numeric-up-alt', 'bi-sort-numeric-up', 'bi-sort-up-alt', 'bi-sort-up', 'bi-soundwave', 'bi-speaker-fill', 'bi-speaker', 'bi-speedometer', 'bi-speedometer2', 'bi-spellcheck', 'bi-square-fill', 'bi-square-half', 'bi-square', 'bi-stack', 'bi-star-fill', 'bi-star-half', 'bi-star', 'bi-stars', 'bi-stickies-fill', 'bi-stickies', 'bi-sticky-fill', 'bi-sticky', 'bi-stop-btn-fill', 'bi-stop-btn', 'bi-stop-circle-fill', 'bi-stop-circle', 'bi-stop-fill', 'bi-stop', 'bi-stoplights-fill', 'bi-stoplights', 'bi-stopwatch-fill', 'bi-stopwatch', 'bi-subtract', 'bi-suit-club-fill', 'bi-suit-club', 'bi-suit-diamond-fill', 'bi-suit-diamond', 'bi-suit-heart-fill', 'bi-suit-heart', 'bi-suit-spade-fill', 'bi-suit-spade', 'bi-sun-fill', 'bi-sun', 'bi-sunglasses', 'bi-sunrise-fill', 'bi-sunrise', 'bi-sunset-fill', 'bi-sunset', 'bi-symmetry-horizontal', 'bi-symmetry-vertical', 'bi-table', 'bi-tablet-fill', 'bi-tablet-landscape-fill', 'bi-tablet-landscape', 'bi-tablet', 'bi-tag-fill', 'bi-tag', 'bi-tags-fill', 'bi-tags', 'bi-telegram', 'bi-telephone-fill', 'bi-telephone-forward-fill', 'bi-telephone-forward', 'bi-telephone-inbound-fill', 'bi-telephone-inbound', 'bi-telephone-minus-fill', 'bi-telephone-minus', 'bi-telephone-outbound-fill', 'bi-telephone-outbound', 'bi-telephone-plus-fill', 'bi-telephone-plus', 'bi-telephone-x-fill', 'bi-telephone-x', 'bi-telephone', 'bi-terminal-fill', 'bi-terminal', 'bi-text-center', 'bi-text-indent-left', 'bi-text-indent-right', 'bi-text-left', 'bi-text-paragraph', 'bi-text-right', 'bi-textarea-resize', 'bi-textarea-t', 'bi-textarea', 'bi-thermometer-half', 'bi-thermometer-high', 'bi-thermometer-low', 'bi-thermometer-snow', 'bi-thermometer-sun', 'bi-thermometer', 'bi-three-dots-vertical', 'bi-three-dots', 'bi-toggle-off', 'bi-toggle-on', 'bi-toggle2-off', 'bi-toggle2-on', 'bi-toggles', 'bi-toggles2', 'bi-tools', 'bi-tornado', 'bi-trash-fill', 'bi-trash', 'bi-trash2-fill', 'bi-trash2', 'bi-tree-fill', 'bi-tree', 'bi-triangle-fill', 'bi-triangle-half', 'bi-triangle', 'bi-trophy-fill', 'bi-trophy', 'bi-tropical-storm', 'bi-truck-flatbed', 'bi-truck', 'bi-tsunami', 'bi-tv-fill', 'bi-tv', 'bi-twitch', 'bi-twitter', 'bi-type-bold', 'bi-type-h1', 'bi-type-h2', 'bi-type-h3', 'bi-type-italic', 'bi-type-strikethrough', 'bi-type-underline', 'bi-type', 'bi-ui-checks-grid', 'bi-ui-checks', 'bi-ui-radios-grid', 'bi-ui-radios', 'bi-umbrella-fill', 'bi-umbrella', 'bi-union', 'bi-unlock-fill', 'bi-unlock', 'bi-upc-scan', 'bi-upc', 'bi-upload', 'bi-vector-pen', 'bi-view-list', 'bi-view-stacked', 'bi-vinyl-fill', 'bi-vinyl', 'bi-voicemail', 'bi-volume-down-fill', 'bi-volume-down', 'bi-volume-mute-fill', 'bi-volume-mute', 'bi-volume-off-fill', 'bi-volume-off', 'bi-volume-up-fill', 'bi-volume-up', 'bi-vr', 'bi-wallet-fill', 'bi-wallet', 'bi-wallet2', 'bi-watch', 'bi-water', 'bi-whatsapp', 'bi-wifi-1', 'bi-wifi-2', 'bi-wifi-off', 'bi-wifi', 'bi-wind', 'bi-window-dock', 'bi-window-sidebar', 'bi-window', 'bi-wrench', 'bi-x-circle-fill', 'bi-x-circle', 'bi-x-diamond-fill', 'bi-x-diamond', 'bi-x-octagon-fill', 'bi-x-octagon', 'bi-x-square-fill', 'bi-x-square', 'bi-x', 'bi-youtube', 'bi-zoom-in', 'bi-zoom-out', 'bi-bank', 'bi-bank2', 'bi-bell-slash-fill', 'bi-bell-slash', 'bi-cash-coin', 'bi-check-lg', 'bi-coin', 'bi-currency-bitcoin', 'bi-currency-dollar', 'bi-currency-euro', 'bi-currency-exchange', 'bi-currency-pound', 'bi-currency-yen', 'bi-dash-lg', 'bi-exclamation-lg', 'bi-file-earmark-pdf-fill', 'bi-file-earmark-pdf', 'bi-file-pdf-fill', 'bi-file-pdf', 'bi-gender-ambiguous', 'bi-gender-female', 'bi-gender-male', 'bi-gender-trans', 'bi-headset-vr', 'bi-info-lg', 'bi-mastodon', 'bi-messenger', 'bi-piggy-bank-fill', 'bi-piggy-bank', 'bi-pin-map-fill', 'bi-pin-map', 'bi-plus-lg', 'bi-question-lg', 'bi-recycle', 'bi-reddit', 'bi-safe-fill', 'bi-safe2-fill', 'bi-safe2', 'bi-sd-card-fill', 'bi-sd-card', 'bi-skype', 'bi-slash-lg', 'bi-translate', 'bi-x-lg', 'bi-safe', 'bi-apple', 'bi-microsoft', 'bi-windows', 'bi-behance', 'bi-dribbble', 'bi-line', 'bi-medium', 'bi-paypal', 'bi-pinterest', 'bi-signal', 'bi-snapchat', 'bi-spotify', 'bi-stack-overflow', 'bi-strava', 'bi-wordpress', 'bi-vimeo', 'bi-activity', 'bi-easel2-fill', 'bi-easel2', 'bi-easel3-fill', 'bi-easel3', 'bi-fan', 'bi-fingerprint', 'bi-graph-down-arrow', 'bi-graph-up-arrow', 'bi-hypnotize', 'bi-magic', 'bi-person-rolodex', 'bi-person-video', 'bi-person-video2', 'bi-person-video3', 'bi-person-workspace', 'bi-radioactive', 'bi-webcam-fill', 'bi-webcam', 'bi-yin-yang', 'bi-bandaid-fill', 'bi-bandaid', 'bi-bluetooth', 'bi-body-text', 'bi-boombox', 'bi-boxes', 'bi-dpad-fill', 'bi-dpad', 'bi-ear-fill', 'bi-ear', 'bi-envelope-check-1', 'bi-envelope-check-fill', 'bi-envelope-check', 'bi-envelope-dash-1', 'bi-envelope-dash-fill', 'bi-envelope-dash', 'bi-envelope-exclamation-1', 'bi-envelope-exclamation-fill', 'bi-envelope-exclamation', 'bi-envelope-plus-fill', 'bi-envelope-plus', 'bi-envelope-slash-1', 'bi-envelope-slash-fill', 'bi-envelope-slash', 'bi-envelope-x-1', 'bi-envelope-x-fill', 'bi-envelope-x', 'bi-explicit-fill', 'bi-explicit', 'bi-git', 'bi-infinity', 'bi-list-columns-reverse', 'bi-list-columns', 'bi-meta', 'bi-mortorboard-fill', 'bi-mortorboard', 'bi-nintendo-switch', 'bi-pc-display-horizontal', 'bi-pc-display', 'bi-pc-horizontal', 'bi-pc', 'bi-playstation', 'bi-plus-slash-minus', 'bi-projector-fill', 'bi-projector', 'bi-qr-code-scan', 'bi-qr-code', 'bi-quora', 'bi-quote', 'bi-robot', 'bi-send-check-fill', 'bi-send-check', 'bi-send-dash-fill', 'bi-send-dash', 'bi-send-exclamation-1', 'bi-send-exclamation-fill', 'bi-send-exclamation', 'bi-send-fill', 'bi-send-plus-fill', 'bi-send-plus', 'bi-send-slash-fill', 'bi-send-slash', 'bi-send-x-fill', 'bi-send-x', 'bi-send', 'bi-steam', 'bi-terminal-dash-1', 'bi-terminal-dash', 'bi-terminal-plus', 'bi-terminal-split', 'bi-ticket-detailed-fill', 'bi-ticket-detailed', 'bi-ticket-fill', 'bi-ticket-perforated-fill', 'bi-ticket-perforated', 'bi-ticket', 'bi-tiktok', 'bi-window-dash', 'bi-window-desktop', 'bi-window-fullscreen', 'bi-window-plus', 'bi-window-split', 'bi-window-stack', 'bi-window-x', 'bi-xbox', 'bi-ethernet', 'bi-hdmi-fill', 'bi-hdmi', 'bi-usb-c-fill', 'bi-usb-c', 'bi-usb-fill', 'bi-usb-plug-fill', 'bi-usb-plug', 'bi-usb-symbol', 'bi-usb', 'bi-boombox-fill', 'bi-displayport-1', 'bi-displayport', 'bi-gpu-card', 'bi-memory', 'bi-modem-fill', 'bi-modem', 'bi-motherboard-fill', 'bi-motherboard', 'bi-optical-audio-fill', 'bi-optical-audio', 'bi-pci-card', 'bi-router-fill', 'bi-router', 'bi-ssd-fill', 'bi-ssd', 'bi-thunderbolt-fill', 'bi-thunderbolt', 'bi-usb-drive-fill', 'bi-usb-drive', 'bi-usb-micro-fill', 'bi-usb-micro', 'bi-usb-mini-fill', 'bi-usb-mini', 'bi-cloud-haze2', 'bi-device-hdd-fill', 'bi-device-hdd', 'bi-device-ssd-fill', 'bi-device-ssd', 'bi-displayport-fill', 'bi-mortarboard-fill', 'bi-mortarboard', 'bi-terminal-x', 'bi-arrow-through-heart-fill', 'bi-arrow-through-heart', 'bi-badge-sd-fill', 'bi-badge-sd', 'bi-bag-heart-fill', 'bi-bag-heart', 'bi-balloon-fill', 'bi-balloon-heart-fill', 'bi-balloon-heart', 'bi-balloon', 'bi-box2-fill', 'bi-box2-heart-fill', 'bi-box2-heart', 'bi-box2', 'bi-braces-asterisk', 'bi-calendar-heart-fill', 'bi-calendar-heart', 'bi-calendar2-heart-fill', 'bi-calendar2-heart', 'bi-chat-heart-fill', 'bi-chat-heart', 'bi-chat-left-heart-fill', 'bi-chat-left-heart', 'bi-chat-right-heart-fill', 'bi-chat-right-heart', 'bi-chat-square-heart-fill', 'bi-chat-square-heart', 'bi-clipboard-check-fill', 'bi-clipboard-data-fill', 'bi-clipboard-fill', 'bi-clipboard-heart-fill', 'bi-clipboard-heart', 'bi-clipboard-minus-fill', 'bi-clipboard-plus-fill', 'bi-clipboard-pulse', 'bi-clipboard-x-fill', 'bi-clipboard2-check-fill', 'bi-clipboard2-check', 'bi-clipboard2-data-fill', 'bi-clipboard2-data', 'bi-clipboard2-fill', 'bi-clipboard2-heart-fill', 'bi-clipboard2-heart', 'bi-clipboard2-minus-fill', 'bi-clipboard2-minus', 'bi-clipboard2-plus-fill', 'bi-clipboard2-plus', 'bi-clipboard2-pulse-fill', 'bi-clipboard2-pulse', 'bi-clipboard2-x-fill', 'bi-clipboard2-x', 'bi-clipboard2', 'bi-emoji-kiss-fill', 'bi-emoji-kiss', 'bi-envelope-heart-fill', 'bi-envelope-heart', 'bi-envelope-open-heart-fill', 'bi-envelope-open-heart', 'bi-envelope-paper-fill', 'bi-envelope-paper-heart-fill', 'bi-envelope-paper-heart', 'bi-envelope-paper', 'bi-filetype-aac', 'bi-filetype-ai', 'bi-filetype-bmp', 'bi-filetype-cs', 'bi-filetype-css', 'bi-filetype-csv', 'bi-filetype-doc', 'bi-filetype-docx', 'bi-filetype-exe', 'bi-filetype-gif', 'bi-filetype-heic', 'bi-filetype-html', 'bi-filetype-java', 'bi-filetype-jpg', 'bi-filetype-js', 'bi-filetype-jsx', 'bi-filetype-key', 'bi-filetype-m4p', 'bi-filetype-md', 'bi-filetype-mdx', 'bi-filetype-mov', 'bi-filetype-mp3', 'bi-filetype-mp4', 'bi-filetype-otf', 'bi-filetype-pdf', 'bi-filetype-php', 'bi-filetype-png', 'bi-filetype-ppt-1', 'bi-filetype-ppt', 'bi-filetype-psd', 'bi-filetype-py', 'bi-filetype-raw', 'bi-filetype-rb', 'bi-filetype-sass', 'bi-filetype-scss', 'bi-filetype-sh', 'bi-filetype-svg', 'bi-filetype-tiff', 'bi-filetype-tsx', 'bi-filetype-ttf', 'bi-filetype-txt', 'bi-filetype-wav', 'bi-filetype-woff', 'bi-filetype-xls-1', 'bi-filetype-xls', 'bi-filetype-xml', 'bi-filetype-yml', 'bi-heart-arrow', 'bi-heart-pulse-fill', 'bi-heart-pulse', 'bi-heartbreak-fill', 'bi-heartbreak', 'bi-hearts', 'bi-hospital-fill', 'bi-hospital', 'bi-house-heart-fill', 'bi-house-heart', 'bi-incognito', 'bi-magnet-fill', 'bi-magnet', 'bi-person-heart', 'bi-person-hearts', 'bi-phone-flip', 'bi-plugin', 'bi-postage-fill', 'bi-postage-heart-fill', 'bi-postage-heart', 'bi-postage', 'bi-postcard-fill', 'bi-postcard-heart-fill', 'bi-postcard-heart', 'bi-postcard', 'bi-search-heart-fill', 'bi-search-heart', 'bi-sliders2-vertical', 'bi-sliders2', 'bi-trash3-fill', 'bi-trash3', 'bi-valentine', 'bi-valentine2', 'bi-wrench-adjustable-circle-fill', 'bi-wrench-adjustable-circle', 'bi-wrench-adjustable', 'bi-filetype-json', 'bi-filetype-pptx', 'bi-filetype-xlsx', 'bi-1-circle-1', 'bi-1-circle-fill-1', 'bi-1-circle-fill', 'bi-1-circle', 'bi-1-square-fill', 'bi-1-square', 'bi-2-circle-1', 'bi-2-circle-fill-1', 'bi-2-circle-fill', 'bi-2-circle', 'bi-2-square-fill', 'bi-2-square', 'bi-3-circle-1', 'bi-3-circle-fill-1', 'bi-3-circle-fill', 'bi-3-circle', 'bi-3-square-fill', 'bi-3-square', 'bi-4-circle-1', 'bi-4-circle-fill-1', 'bi-4-circle-fill', 'bi-4-circle', 'bi-4-square-fill', 'bi-4-square', 'bi-5-circle-1', 'bi-5-circle-fill-1', 'bi-5-circle-fill', 'bi-5-circle', 'bi-5-square-fill', 'bi-5-square', 'bi-6-circle-1', 'bi-6-circle-fill-1', 'bi-6-circle-fill', 'bi-6-circle', 'bi-6-square-fill', 'bi-6-square', 'bi-7-circle-1', 'bi-7-circle-fill-1', 'bi-7-circle-fill', 'bi-7-circle', 'bi-7-square-fill', 'bi-7-square', 'bi-8-circle-1', 'bi-8-circle-fill-1', 'bi-8-circle-fill', 'bi-8-circle', 'bi-8-square-fill', 'bi-8-square', 'bi-9-circle-1', 'bi-9-circle-fill-1', 'bi-9-circle-fill', 'bi-9-circle', 'bi-9-square-fill', 'bi-9-square', 'bi-airplane-engines-fill', 'bi-airplane-engines', 'bi-airplane-fill', 'bi-airplane', 'bi-alexa', 'bi-alipay', 'bi-android', 'bi-android2', 'bi-box-fill', 'bi-box-seam-fill', 'bi-browser-chrome', 'bi-browser-edge', 'bi-browser-firefox', 'bi-browser-safari', 'bi-c-circle-1', 'bi-c-circle-fill-1', 'bi-c-circle-fill', 'bi-c-circle', 'bi-c-square-fill', 'bi-c-square', 'bi-capsule-pill', 'bi-capsule', 'bi-car-front-fill', 'bi-car-front', 'bi-cassette-fill', 'bi-cassette', 'bi-cc-circle-1', 'bi-cc-circle-fill-1', 'bi-cc-circle-fill', 'bi-cc-circle', 'bi-cc-square-fill', 'bi-cc-square', 'bi-cup-hot-fill', 'bi-cup-hot', 'bi-currency-rupee', 'bi-dropbox', 'bi-escape', 'bi-fast-forward-btn-fill', 'bi-fast-forward-btn', 'bi-fast-forward-circle-fill', 'bi-fast-forward-circle', 'bi-fast-forward-fill', 'bi-fast-forward', 'bi-filetype-sql', 'bi-fire', 'bi-google-play', 'bi-h-circle-1', 'bi-h-circle-fill-1', 'bi-h-circle-fill', 'bi-h-circle', 'bi-h-square-fill', 'bi-h-square', 'bi-indent', 'bi-lungs-fill', 'bi-lungs', 'bi-microsoft-teams', 'bi-p-circle-1', 'bi-p-circle-fill-1', 'bi-p-circle-fill', 'bi-p-circle', 'bi-p-square-fill', 'bi-p-square', 'bi-pass-fill', 'bi-pass', 'bi-prescription', 'bi-prescription2', 'bi-r-circle-1', 'bi-r-circle-fill-1', 'bi-r-circle-fill', 'bi-r-circle', 'bi-r-square-fill', 'bi-r-square', 'bi-repeat-1', 'bi-repeat', 'bi-rewind-btn-fill', 'bi-rewind-btn', 'bi-rewind-circle-fill', 'bi-rewind-circle', 'bi-rewind-fill', 'bi-rewind', 'bi-train-freight-front-fill', 'bi-train-freight-front', 'bi-train-front-fill', 'bi-train-front', 'bi-train-lightrail-front-fill', 'bi-train-lightrail-front', 'bi-truck-front-fill', 'bi-truck-front', 'bi-ubuntu', 'bi-unindent', 'bi-unity', 'bi-universal-access-circle', 'bi-universal-access', 'bi-virus', 'bi-virus2', 'bi-wechat', 'bi-yelp', 'bi-sign-stop-fill', 'bi-sign-stop-lights-fill', 'bi-sign-stop-lights', 'bi-sign-stop', 'bi-sign-turn-left-fill', 'bi-sign-turn-left', 'bi-sign-turn-right-fill', 'bi-sign-turn-right', 'bi-sign-turn-slight-left-fill', 'bi-sign-turn-slight-left', 'bi-sign-turn-slight-right-fill', 'bi-sign-turn-slight-right', 'bi-sign-yield-fill', 'bi-sign-yield', 'bi-ev-station-fill', 'bi-ev-station', 'bi-fuel-pump-diesel-fill', 'bi-fuel-pump-diesel', 'bi-fuel-pump-fill', 'bi-fuel-pump'];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bootstrapIcons);

/***/ }),

/***/ "./src/components/icon-picker/fontawesome-classes.js":
/*!***********************************************************!*\
  !*** ./src/components/icon-picker/fontawesome-classes.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const fontawesomeClasses = ["fas fa-address-book", "fas fa-address-card", "fas fa-adjust", "fas fa-align-center", "fas fa-align-justify", "fas fa-align-left", "fas fa-align-right", "fas fa-allergies", "fas fa-ambulance", "fas fa-american-sign-language-interpreting", "fas fa-anchor", "fas fa-angle-double-down", "fas fa-angle-double-left", "fas fa-angle-double-right", "fas fa-angle-double-up", "fas fa-angle-down", "fas fa-angle-left", "fas fa-angle-right", "fas fa-angle-up", "fas fa-archive", "fas fa-arrow-alt-circle-down", "fas fa-arrow-alt-circle-left", "fas fa-arrow-alt-circle-right", "fas fa-arrow-alt-circle-up", "fas fa-arrow-circle-down", "fas fa-arrow-circle-left", "fas fa-arrow-circle-right", "fas fa-arrow-circle-up", "fas fa-arrow-down", "fas fa-arrow-left", "fas fa-arrow-right", "fas fa-arrow-up", "fas fa-arrows-alt", "fas fa-arrows-alt-h", "fas fa-arrows-alt-v", "fas fa-assistive-listening-systems", "fas fa-asterisk", "fas fa-at", "fas fa-audio-description", "fas fa-backward", "fas fa-balance-scale", "fas fa-ban", "fas fa-band-aid", "fas fa-barcode", "fas fa-bars", "fas fa-baseball-ball", "fas fa-basketball-ball", "fas fa-bath", "fas fa-battery-empty", "fas fa-battery-full", "fas fa-battery-half", "fas fa-battery-quarter", "fas fa-battery-three-quarters", "fas fa-bed", "fas fa-beer", "fas fa-bell", "fas fa-bell-slash", "fas fa-bicycle", "fas fa-binoculars", "fas fa-birthday-cake", "fas fa-blind", "fas fa-bold", "fas fa-bolt", "fas fa-bomb", "fas fa-book", "fas fa-bookmark", "fas fa-bowling-ball", "fas fa-box", "fas fa-box-open", "fas fa-boxes", "fas fa-braille", "fas fa-briefcase", "fas fa-briefcase-medical", "fas fa-bug", "fas fa-building", "fas fa-bullhorn", "fas fa-bullseye", "fas fa-burn", "fas fa-bus", "fas fa-calculator", "fas fa-calendar", "fas fa-calendar-alt", "fas fa-calendar-check", "fas fa-calendar-minus", "fas fa-calendar-plus", "fas fa-calendar-times", "fas fa-camera", "fas fa-camera-retro", "fas fa-capsules", "fas fa-car", "fas fa-caret-down", "fas fa-caret-left", "fas fa-caret-right", "fas fa-caret-square-down", "fas fa-caret-square-left", "fas fa-caret-square-right", "fas fa-caret-square-up", "fas fa-caret-up", "fas fa-cart-arrow-down", "fas fa-cart-plus", "fas fa-certificate", "fas fa-chart-area", "fas fa-chart-bar", "fas fa-chart-line", "fas fa-chart-pie", "fas fa-check", "fas fa-check-circle", "fas fa-check-square", "fas fa-chess", "fas fa-chess-bishop", "fas fa-chess-board", "fas fa-chess-king", "fas fa-chess-knight", "fas fa-chess-pawn", "fas fa-chess-queen", "fas fa-chess-rook", "fas fa-chevron-circle-down", "fas fa-chevron-circle-left", "fas fa-chevron-circle-right", "fas fa-chevron-circle-up", "fas fa-chevron-down", "fas fa-chevron-left", "fas fa-chevron-right", "fas fa-chevron-up", "fas fa-child", "fas fa-circle", "fas fa-circle-notch", "fas fa-clipboard", "fas fa-clipboard-check", "fas fa-clipboard-list", "fas fa-clock", "fas fa-clone", "fas fa-closed-captioning", "fas fa-cloud", "fas fa-cloud-download-alt", "fas fa-cloud-upload-alt", "fas fa-code", "fas fa-code-branch", "fas fa-coffee", "fas fa-cog", "fas fa-cogs", "fas fa-columns", "fas fa-comment", "fas fa-comment-alt", "fas fa-comment-dots", "fas fa-comment-slash", "fas fa-comments", "fas fa-compass", "fas fa-compress", "fas fa-copy", "fas fa-copyright", "fas fa-couch", "fas fa-credit-card", "fas fa-crop", "fas fa-crosshairs", "fas fa-cube", "fas fa-cubes", "fas fa-cut", "fas fa-database", "fas fa-deaf", "fas fa-desktop", "fas fa-diagnoses", "fas fa-dna", "fas fa-dollar-sign", "fas fa-dolly", "fas fa-dolly-flatbed", "fas fa-donate", "fas fa-dot-circle", "fas fa-dove", "fas fa-download", "fas fa-edit", "fas fa-eject", "fas fa-ellipsis-h", "fas fa-ellipsis-v", "fas fa-envelope", "fas fa-envelope-open", "fas fa-envelope-square", "fas fa-eraser", "fas fa-euro-sign", "fas fa-exchange-alt", "fas fa-exclamation", "fas fa-exclamation-circle", "fas fa-exclamation-triangle", "fas fa-expand", "fas fa-expand-arrows-alt", "fas fa-external-link-alt", "fas fa-external-link-square-alt", "fas fa-eye", "fas fa-eye-dropper", "fas fa-eye-slash", "fas fa-fast-backward", "fas fa-fast-forward", "fas fa-fax", "fas fa-female", "fas fa-fighter-jet", "fas fa-file", "fas fa-file-alt", "fas fa-file-archive", "fas fa-file-audio", "fas fa-file-code", "fas fa-file-excel", "fas fa-file-image", "fas fa-file-medical", "fas fa-file-medical-alt", "fas fa-file-pdf", "fas fa-file-powerpoint", "fas fa-file-video", "fas fa-file-word", "fas fa-film", "fas fa-filter", "fas fa-fire", "fas fa-fire-extinguisher", "fas fa-first-aid", "fas fa-flag", "fas fa-flag-checkered", "fas fa-flask", "fas fa-folder", "fas fa-folder-open", "fas fa-font", "fas fa-football-ball", "fas fa-forward", "fas fa-frown", "fas fa-futbol", "fas fa-gamepad", "fas fa-gavel", "fas fa-gem", "fas fa-genderless", "fas fa-gift", "fas fa-glass-martini", "fas fa-globe", "fas fa-golf-ball", "fas fa-graduation-cap", "fas fa-h-square", "fas fa-hand-holding", "fas fa-hand-holding-heart", "fas fa-hand-holding-usd", "fas fa-hand-lizard", "fas fa-hand-paper", "fas fa-hand-peace", "fas fa-hand-point-down", "fas fa-hand-point-left", "fas fa-hand-point-right", "fas fa-hand-point-up", "fas fa-hand-pointer", "fas fa-hand-rock", "fas fa-hand-scissors", "fas fa-hand-spock", "fas fa-hands", "fas fa-hands-helping", "fas fa-handshake", "fas fa-hashtag", "fas fa-hdd", "fas fa-heading", "fas fa-headphones", "fas fa-heart", "fas fa-heartbeat", "fas fa-history", "fas fa-hockey-puck", "fas fa-home", "fas fa-hospital", "fas fa-hospital-alt", "fas fa-hospital-symbol", "fas fa-hourglass", "fas fa-hourglass-end", "fas fa-hourglass-half", "fas fa-hourglass-start", "fas fa-i-cursor", "fas fa-id-badge", "fas fa-id-card", "fas fa-id-card-alt", "fas fa-image", "fas fa-images", "fas fa-inbox", "fas fa-indent", "fas fa-industry", "fas fa-info", "fas fa-info-circle", "fas fa-italic", "fas fa-key", "fas fa-keyboard", "fas fa-language", "fas fa-laptop", "fas fa-leaf", "fas fa-lemon", "fas fa-level-down-alt", "fas fa-level-up-alt", "fas fa-life-ring", "fas fa-lightbulb", "fas fa-link", "fas fa-lira-sign", "fas fa-list", "fas fa-list-alt", "fas fa-list-ol", "fas fa-list-ul", "fas fa-location-arrow", "fas fa-lock", "fas fa-lock-open", "fas fa-long-arrow-alt-down", "fas fa-long-arrow-alt-left", "fas fa-long-arrow-alt-right", "fas fa-long-arrow-alt-up", "fas fa-low-vision", "fas fa-magic", "fas fa-magnet", "fas fa-male", "fas fa-map", "fas fa-map-marker", "fas fa-map-marker-alt", "fas fa-map-pin", "fas fa-map-signs", "fas fa-mars", "fas fa-mars-double", "fas fa-mars-stroke", "fas fa-mars-stroke-h", "fas fa-mars-stroke-v", "fas fa-medkit", "fas fa-meh", "fas fa-mercury", "fas fa-microchip", "fas fa-microphone", "fas fa-microphone-slash", "fas fa-minus", "fas fa-minus-circle", "fas fa-minus-square", "fas fa-mobile", "fas fa-mobile-alt", "fas fa-money-bill-alt", "fas fa-moon", "fas fa-motorcycle", "fas fa-mouse-pointer", "fas fa-music", "fas fa-neuter", "fas fa-newspaper", "fas fa-notes-medical", "fas fa-object-group", "fas fa-object-ungroup", "fas fa-outdent", "fas fa-paint-brush", "fas fa-pallet", "fas fa-paper-plane", "fas fa-paperclip", "fas fa-parachute-box", "fas fa-paragraph", "fas fa-paste", "fas fa-pause", "fas fa-pause-circle", "fas fa-paw", "fas fa-pen-square", "fas fa-pencil-alt", "fas fa-people-carry", "fas fa-percent", "fas fa-phone", "fas fa-phone-slash", "fas fa-phone-square", "fas fa-phone-volume", "fas fa-piggy-bank", "fas fa-pills", "fas fa-plane", "fas fa-play", "fas fa-play-circle", "fas fa-plug", "fas fa-plus", "fas fa-plus-circle", "fas fa-plus-square", "fas fa-podcast", "fas fa-poo", "fas fa-pound-sign", "fas fa-power-off", "fas fa-prescription-bottle", "fas fa-prescription-bottle-alt", "fas fa-print", "fas fa-procedures", "fas fa-puzzle-piece", "fas fa-qrcode", "fas fa-question", "fas fa-question-circle", "fas fa-quidditch", "fas fa-quote-left", "fas fa-quote-right", "fas fa-random", "fas fa-recycle", "fas fa-redo", "fas fa-redo-alt", "fas fa-registered", "fas fa-reply", "fas fa-reply-all", "fas fa-retweet", "fas fa-ribbon", "fas fa-road", "fas fa-rocket", "fas fa-rss", "fas fa-rss-square", "fas fa-ruble-sign", "fas fa-rupee-sign", "fas fa-save", "fas fa-search", "fas fa-search-minus", "fas fa-search-plus", "fas fa-seedling", "fas fa-server", "fas fa-share", "fas fa-share-alt", "fas fa-share-alt-square", "fas fa-share-square", "fas fa-shekel-sign", "fas fa-shield-alt", "fas fa-ship", "fas fa-shipping-fast", "fas fa-shopping-bag", "fas fa-shopping-basket", "fas fa-shopping-cart", "fas fa-shower", "fas fa-sign", "fas fa-sign-in-alt", "fas fa-sign-language", "fas fa-sign-out-alt", "fas fa-signal", "fas fa-sitemap", "fas fa-sliders-h", "fas fa-smile", "fas fa-smoking", "fas fa-snowflake", "fas fa-sort", "fas fa-sort-alpha-down", "fas fa-sort-alpha-up", "fas fa-sort-amount-down", "fas fa-sort-amount-up", "fas fa-sort-down", "fas fa-sort-numeric-down", "fas fa-sort-numeric-up", "fas fa-sort-up", "fas fa-space-shuttle", "fas fa-spinner", "fas fa-square", "fas fa-square-full", "fas fa-star", "fas fa-star-half", "fas fa-step-backward", "fas fa-step-forward", "fas fa-stethoscope", "fas fa-sticky-note", "fas fa-stop", "fas fa-stop-circle", "fas fa-stopwatch", "fas fa-street-view", "fas fa-strikethrough", "fas fa-subscript", "fas fa-subway", "fas fa-suitcase", "fas fa-sun", "fas fa-superscript", "fas fa-sync", "fas fa-sync-alt", "fas fa-syringe", "fas fa-table", "fas fa-table-tennis", "fas fa-tablet", "fas fa-tablet-alt", "fas fa-tablets", "fas fa-tachometer-alt", "fas fa-tag", "fas fa-tags", "fas fa-tape", "fas fa-tasks", "fas fa-taxi", "fas fa-terminal", "fas fa-text-height", "fas fa-text-width", "fas fa-th", "fas fa-th-large", "fas fa-th-list", "fas fa-thermometer", "fas fa-thermometer-empty", "fas fa-thermometer-full", "fas fa-thermometer-half", "fas fa-thermometer-quarter", "fas fa-thermometer-three-quarters", "fas fa-thumbs-down", "fas fa-thumbs-up", "fas fa-thumbtack", "fas fa-ticket-alt", "fas fa-times", "fas fa-times-circle", "fas fa-tint", "fas fa-toggle-off", "fas fa-toggle-on", "fas fa-trademark", "fas fa-train", "fas fa-transgender", "fas fa-transgender-alt", "fas fa-trash", "fas fa-trash-alt", "fas fa-tree", "fas fa-trophy", "fas fa-truck", "fas fa-truck-loading", "fas fa-truck-moving", "fas fa-tty", "fas fa-tv", "fas fa-umbrella", "fas fa-underline", "fas fa-undo", "fas fa-undo-alt", "fas fa-universal-access", "fas fa-university", "fas fa-unlink", "fas fa-unlock", "fas fa-unlock-alt", "fas fa-upload", "fas fa-user", "fas fa-user-circle", "fas fa-user-md", "fas fa-user-plus", "fas fa-user-secret", "fas fa-user-times", "fas fa-users", "fas fa-utensil-spoon", "fas fa-utensils", "fas fa-venus", "fas fa-venus-double", "fas fa-venus-mars", "fas fa-vial", "fas fa-vials", "fas fa-video", "fas fa-video-slash", "fas fa-volleyball-ball", "fas fa-volume-down", "fas fa-volume-off", "fas fa-volume-up", "fas fa-warehouse", "fas fa-weight", "fas fa-wheelchair", "fas fa-wifi", "fas fa-window-close", "fas fa-window-maximize", "fas fa-window-minimize", "fas fa-window-restore", "fas fa-wine-glass", "fas fa-won-sign", "fas fa-wrench", "fas fa-x-ray", "fas fa-yen-sign", "far fa-address-book", "far fa-address-card", "far fa-arrow-alt-circle-down", "far fa-arrow-alt-circle-left", "far fa-arrow-alt-circle-right", "far fa-arrow-alt-circle-up", "far fa-bell", "far fa-bell-slash", "far fa-bookmark", "far fa-building", "far fa-calendar", "far fa-calendar-alt", "far fa-calendar-check", "far fa-calendar-minus", "far fa-calendar-plus", "far fa-calendar-times", "far fa-caret-square-down", "far fa-caret-square-left", "far fa-caret-square-right", "far fa-caret-square-up", "far fa-chart-bar", "far fa-check-circle", "far fa-check-square", "far fa-circle", "far fa-clipboard", "far fa-clock", "far fa-clone", "far fa-closed-captioning", "far fa-comment", "far fa-comment-alt", "far fa-comments", "far fa-compass", "far fa-copy", "far fa-copyright", "far fa-credit-card", "far fa-dot-circle", "far fa-edit", "far fa-envelope", "far fa-envelope-open", "far fa-eye-slash", "far fa-file", "far fa-file-alt", "far fa-file-archive", "far fa-file-audio", "far fa-file-code", "far fa-file-excel", "far fa-file-image", "far fa-file-pdf", "far fa-file-powerpoint", "far fa-file-video", "far fa-file-word", "far fa-flag", "far fa-folder", "far fa-folder-open", "far fa-frown", "far fa-futbol", "far fa-gem", "far fa-hand-lizard", "far fa-hand-paper", "far fa-hand-peace", "far fa-hand-point-down", "far fa-hand-point-left", "far fa-hand-point-right", "far fa-hand-point-up", "far fa-hand-pointer", "far fa-hand-rock", "far fa-hand-scissors", "far fa-hand-spock", "far fa-handshake", "far fa-hdd", "far fa-heart", "far fa-hospital", "far fa-hourglass", "far fa-id-badge", "far fa-id-card", "far fa-image", "far fa-images", "far fa-keyboard", "far fa-lemon", "far fa-life-ring", "far fa-lightbulb", "far fa-list-alt", "far fa-map", "far fa-meh", "far fa-minus-square", "far fa-money-bill-alt", "far fa-moon", "far fa-newspaper", "far fa-object-group", "far fa-object-ungroup", "far fa-paper-plane", "far fa-pause-circle", "far fa-play-circle", "far fa-plus-square", "far fa-question-circle", "far fa-registered", "far fa-save", "far fa-share-square", "far fa-smile", "far fa-snowflake", "far fa-square", "far fa-star", "far fa-star-half", "far fa-sticky-note", "far fa-stop-circle", "far fa-sun", "far fa-thumbs-down", "far fa-thumbs-up", "far fa-times-circle", "far fa-trash-alt", "far fa-user", "far fa-user-circle", "far fa-window-close", "far fa-window-maximize", "far fa-window-minimize", "far fa-window-restore", "fab fa-500px", "fab fa-accessible-icon", "fab fa-accusoft", "fab fa-adn", "fab fa-adversal", "fab fa-affiliatetheme", "fab fa-algolia", "fab fa-amazon", "fab fa-amazon-pay", "fab fa-amilia", "fab fa-android", "fab fa-angellist", "fab fa-angrycreative", "fab fa-angular", "fab fa-app-store", "fab fa-app-store-ios", "fab fa-apper", "fab fa-apple", "fab fa-apple-pay", "fab fa-asymmetrik", "fab fa-audible", "fab fa-autoprefixer", "fab fa-avianex", "fab fa-aviato", "fab fa-aws", "fab fa-bandcamp", "fab fa-behance", "fab fa-behance-square", "fab fa-bimobject", "fab fa-bitbucket", "fab fa-bitcoin", "fab fa-bity", "fab fa-black-tie", "fab fa-blackberry", "fab fa-blogger", "fab fa-blogger-b", "fab fa-bluetooth", "fab fa-bluetooth-b", "fab fa-btc", "fab fa-buromobelexperte", "fab fa-buysellads", "fab fa-cc-amazon-pay", "fab fa-cc-amex", "fab fa-cc-apple-pay", "fab fa-cc-diners-club", "fab fa-cc-discover", "fab fa-cc-jcb", "fab fa-cc-mastercard", "fab fa-cc-paypal", "fab fa-cc-stripe", "fab fa-cc-visa", "fab fa-centercode", "fab fa-chrome", "fab fa-cloudscale", "fab fa-cloudsmith", "fab fa-cloudversify", "fab fa-codepen", "fab fa-codiepie", "fab fa-connectdevelop", "fab fa-contao", "fab fa-cpanel", "fab fa-creative-commons", "fab fa-css3", "fab fa-css3-alt", "fab fa-cuttlefish", "fab fa-d-and-d", "fab fa-dashcube", "fab fa-delicious", "fab fa-deploydog", "fab fa-deskpro", "fab fa-deviantart", "fab fa-digg", "fab fa-digital-ocean", "fab fa-discord", "fab fa-discourse", "fab fa-dochub", "fab fa-docker", "fab fa-draft2digital", "fab fa-dribbble", "fab fa-dribbble-square", "fab fa-dropbox", "fab fa-drupal", "fab fa-dyalog", "fab fa-earlybirds", "fab fa-edge", "fab fa-elementor", "fab fa-ember", "fab fa-empire", "fab fa-envira", "fab fa-erlang", "fab fa-ethereum", "fab fa-etsy", "fab fa-expeditedssl", "fab fa-facebook", "fab fa-facebook-f", "fab fa-facebook-messenger", "fab fa-facebook-square", "fab fa-firefox", "fab fa-first-order", "fab fa-firstdraft", "fab fa-flickr", "fab fa-flipboard", "fab fa-fly", "fab fa-font-awesome", "fab fa-font-awesome-alt", "fab fa-font-awesome-flag", "fab fa-fonticons", "fab fa-fonticons-fi", "fab fa-fort-awesome", "fab fa-fort-awesome-alt", "fab fa-forumbee", "fab fa-foursquare", "fab fa-free-code-camp", "fab fa-freebsd", "fab fa-get-pocket", "fab fa-gg", "fab fa-gg-circle", "fab fa-git", "fab fa-git-square", "fab fa-github", "fab fa-github-alt", "fab fa-github-square", "fab fa-gitkraken", "fab fa-gitlab", "fab fa-gitter", "fab fa-glide", "fab fa-glide-g", "fab fa-gofore", "fab fa-goodreads", "fab fa-goodreads-g", "fab fa-google", "fab fa-google-drive", "fab fa-google-play", "fab fa-google-plus", "fab fa-google-plus-g", "fab fa-google-plus-square", "fab fa-google-wallet", "fab fa-gratipay", "fab fa-grav", "fab fa-gripfire", "fab fa-grunt", "fab fa-gulp", "fab fa-hacker-news", "fab fa-hacker-news-square", "fab fa-hips", "fab fa-hire-a-helper", "fab fa-hooli", "fab fa-hotjar", "fab fa-houzz", "fab fa-html5", "fab fa-hubspot", "fab fa-imdb", "fab fa-instagram", "fab fa-internet-explorer", "fab fa-ioxhost", "fab fa-itunes", "fab fa-itunes-note", "fab fa-jenkins", "fab fa-joget", "fab fa-joomla", "fab fa-js", "fab fa-js-square", "fab fa-jsfiddle", "fab fa-keycdn", "fab fa-kickstarter", "fab fa-kickstarter-k", "fab fa-korvue", "fab fa-laravel", "fab fa-lastfm", "fab fa-lastfm-square", "fab fa-leanpub", "fab fa-less", "fab fa-line", "fab fa-linkedin", "fab fa-linkedin-in", "fab fa-linode", "fab fa-linux", "fab fa-lyft", "fab fa-magento", "fab fa-maxcdn", "fab fa-medapps", "fab fa-medium", "fab fa-medium-m", "fab fa-medrt", "fab fa-meetup", "fab fa-microsoft", "fab fa-mix", "fab fa-mixcloud", "fab fa-mizuni", "fab fa-modx", "fab fa-monero", "fab fa-napster", "fab fa-nintendo-switch", "fab fa-node", "fab fa-node-js", "fab fa-npm", "fab fa-ns8", "fab fa-nutritionix", "fab fa-odnoklassniki", "fab fa-odnoklassniki-square", "fab fa-opencart", "fab fa-openid", "fab fa-opera", "fab fa-optin-monster", "fab fa-osi", "fab fa-page4", "fab fa-pagelines", "fab fa-palfed", "fab fa-patreon", "fab fa-paypal", "fab fa-periscope", "fab fa-phabricator", "fab fa-phoenix-framework", "fab fa-php", "fab fa-pied-piper", "fab fa-pied-piper-alt", "fab fa-pied-piper-pp", "fab fa-pinterest", "fab fa-pinterest-p", "fab fa-pinterest-square", "fab fa-playstation", "fab fa-product-hunt", "fab fa-pushed", "fab fa-python", "fab fa-qq", "fab fa-quinscape", "fab fa-quora", "fab fa-ravelry", "fab fa-react", "fab fa-readme", "fab fa-rebel", "fab fa-red-river", "fab fa-reddit", "fab fa-reddit-alien", "fab fa-reddit-square", "fab fa-rendact", "fab fa-renren", "fab fa-replyd", "fab fa-resolving", "fab fa-rocketchat", "fab fa-rockrms", "fab fa-safari", "fab fa-sass", "fab fa-schlix", "fab fa-scribd", "fab fa-searchengin", "fab fa-sellcast", "fab fa-sellsy", "fab fa-servicestack", "fab fa-shirtsinbulk", "fab fa-simplybuilt", "fab fa-sistrix", "fab fa-skyatlas", "fab fa-skype", "fab fa-slack", "fab fa-slack-hash", "fab fa-slideshare", "fab fa-snapchat", "fab fa-snapchat-ghost", "fab fa-snapchat-square", "fab fa-soundcloud", "fab fa-speakap", "fab fa-spotify", "fab fa-stack-exchange", "fab fa-stack-overflow", "fab fa-staylinked", "fab fa-steam", "fab fa-steam-square", "fab fa-steam-symbol", "fab fa-sticker-mule", "fab fa-strava", "fab fa-stripe", "fab fa-stripe-s", "fab fa-studiovinari", "fab fa-stumbleupon", "fab fa-stumbleupon-circle", "fab fa-superpowers", "fab fa-supple", "fab fa-telegram", "fab fa-telegram-plane", "fab fa-tencent-weibo", "fab fa-themeisle", "fab fa-trello", "fab fa-tripadvisor", "fab fa-tumblr", "fab fa-tumblr-square", "fab fa-twitch", "fab fa-twitter", "fab fa-twitter-square", "fab fa-typo3", "fab fa-uber", "fab fa-uikit", "fab fa-uniregistry", "fab fa-untappd", "fab fa-usb", "fab fa-ussunnah", "fab fa-vaadin", "fab fa-viacoin", "fab fa-viadeo", "fab fa-viadeo-square", "fab fa-viber", "fab fa-vimeo", "fab fa-vimeo-square", "fab fa-vimeo-v", "fab fa-vine", "fab fa-vk", "fab fa-vnv", "fab fa-vuejs", "fab fa-weibo", "fab fa-weixin", "fab fa-whatsapp", "fab fa-whatsapp-square", "fab fa-whmcs", "fab fa-wikipedia-w", "fab fa-windows", "fab fa-wordpress", "fab fa-wordpress-simple", "fab fa-wpbeginner", "fab fa-wpexplorer", "fab fa-wpforms", "fab fa-xbox", "fab fa-xing", "fab fa-xing-square", "fab fa-y-combinator", "fab fa-yahoo", "fab fa-yandex", "fab fa-yandex-international", "fab fa-yelp", "fab fa-yoast", "fab fa-youtube", "fab fa-youtube-square"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fontawesomeClasses);

/***/ }),

/***/ "./src/components/icon-picker/iconfont-classes.js":
/*!********************************************************!*\
  !*** ./src/components/icon-picker/iconfont-classes.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const iconfontClasses = ['icofont-angry-monster', 'icofont-bathtub ', 'icofont-bird-wings ', 'icofont-bow ', 'icofont-castle ', 'icofont-circuit ', 'icofont-crown-king ', 'icofont-crown-queen ', 'icofont-dart ', 'icofont-disability-race ', 'icofont-diving-goggle ', 'icofont-eye-open ', 'icofont-flora-flower ', 'icofont-flora ', 'icofont-gift-box ', 'icofont-halloween-pumpkin ', 'icofont-hand-power ', 'icofont-hand-thunder ', 'icofont-king-monster ', 'icofont-love ', 'icofont-magician-hat ', 'icofont-native-american ', 'icofont-owl-look ', 'icofont-phoenix ', 'icofont-robot-face ', 'icofont-sand-clock ', 'icofont-shield-alt ', 'icofont-ship-wheel ', 'icofont-skull-danger ', 'icofont-skull-face ', 'icofont-snowmobile ', 'icofont-space-shuttle ', 'icofont-star-shape ', 'icofont-swirl ', 'icofont-tattoo-wing ', 'icofont-throne ', 'icofont-tree-alt ', 'icofont-triangle ', 'icofont-unity-hand ', 'icofont-weed ', 'icofont-woman-bird ', 'icofont-bat ', 'icofont-bear-face ', 'icofont-bear-tracks ', 'icofont-bear ', 'icofont-bird-alt ', 'icofont-bird-flying ', 'icofont-bird ', 'icofont-birds ', 'icofont-bone ', 'icofont-bull ', 'icofont-butterfly-alt ', 'icofont-butterfly ', 'icofont-camel-alt ', 'icofont-camel-head ', 'icofont-camel ', 'icofont-cat-alt-1 ', 'icofont-cat-alt-2 ', 'icofont-cat-alt-3 ', 'icofont-cat-dog ', 'icofont-cat-face ', 'icofont-cat ', 'icofont-cow-head ', 'icofont-cow ', 'icofont-crab ', 'icofont-crocodile ', 'icofont-deer-head ', 'icofont-dog-alt ', 'icofont-dog-barking ', 'icofont-dog ', 'icofont-dolphin ', 'icofont-duck-tracks ', 'icofont-eagle-head ', 'icofont-eaten-fish ', 'icofont-elephant-alt ', 'icofont-elephant-head-alt ', 'icofont-elephant-head ', 'icofont-elephant ', 'icofont-elk ', 'icofont-fish-1 ', 'icofont-fish-2 ', 'icofont-fish-3 ', 'icofont-fish-4 ', 'icofont-fish-5 ', 'icofont-fish ', 'icofont-fox-alt ', 'icofont-fox ', 'icofont-frog-tracks ', 'icofont-frog ', 'icofont-froggy ', 'icofont-giraffe-head-1 ', 'icofont-giraffe-head-2 ', 'icofont-giraffe-head ', 'icofont-giraffe ', 'icofont-goat-head ', 'icofont-gorilla ', 'icofont-hen-tracks ', 'icofont-horse-head-1 ', 'icofont-horse-head-2 ', 'icofont-horse-head ', 'icofont-horse-tracks ', 'icofont-jellyfish ', 'icofont-kangaroo ', 'icofont-lemur ', 'icofont-lion-head-1 ', 'icofont-lion-head-2 ', 'icofont-lion-head ', 'icofont-lion ', 'icofont-monkey-2 ', 'icofont-monkey-3 ', 'icofont-monkey-face ', 'icofont-monkey ', 'icofont-octopus-alt ', 'icofont-octopus ', 'icofont-owl ', 'icofont-panda-face ', 'icofont-panda ', 'icofont-panther ', 'icofont-parrot-lip ', 'icofont-parrot ', 'icofont-paw ', 'icofont-pelican ', 'icofont-penguin ', 'icofont-pig-face ', 'icofont-pig ', 'icofont-pigeon-1 ', 'icofont-pigeon-2 ', 'icofont-pigeon ', 'icofont-rabbit ', 'icofont-rat ', 'icofont-rhino-head ', 'icofont-rhino ', 'icofont-rooster ', 'icofont-seahorse ', 'icofont-seal ', 'icofont-shrimp-alt ', 'icofont-shrimp ', 'icofont-snail-1 ', 'icofont-snail-2 ', 'icofont-snail-3 ', 'icofont-snail ', 'icofont-snake ', 'icofont-squid ', 'icofont-squirrel ', 'icofont-tiger-face ', 'icofont-tiger ', 'icofont-turtle ', 'icofont-whale ', 'icofont-woodpecker ', 'icofont-zebra ', 'icofont-brand-acer ', 'icofont-brand-adidas ', 'icofont-brand-adobe ', 'icofont-brand-air-new-zealand ', 'icofont-brand-airbnb ', 'icofont-brand-aircell ', 'icofont-brand-airtel ', 'icofont-brand-alcatel ', 'icofont-brand-alibaba ', 'icofont-brand-aliexpress ', 'icofont-brand-alipay ', 'icofont-brand-amazon ', 'icofont-brand-amd ', 'icofont-brand-american-airlines ', 'icofont-brand-android-robot ', 'icofont-brand-android ', 'icofont-brand-aol ', 'icofont-brand-apple ', 'icofont-brand-appstore ', 'icofont-brand-asus ', 'icofont-brand-ati ', 'icofont-brand-att ', 'icofont-brand-audi ', 'icofont-brand-axiata ', 'icofont-brand-bada ', 'icofont-brand-bbc ', 'icofont-brand-bing ', 'icofont-brand-blackberry ', 'icofont-brand-bmw ', 'icofont-brand-box ', 'icofont-brand-burger-king ', 'icofont-brand-business-insider ', 'icofont-brand-buzzfeed ', 'icofont-brand-cannon ', 'icofont-brand-casio ', 'icofont-brand-china-mobile ', 'icofont-brand-china-telecom ', 'icofont-brand-china-unicom ', 'icofont-brand-cisco ', 'icofont-brand-citibank ', 'icofont-brand-cnet ', 'icofont-brand-cnn ', 'icofont-brand-cocal-cola ', 'icofont-brand-compaq ', 'icofont-brand-debian ', 'icofont-brand-delicious ', 'icofont-brand-dell ', 'icofont-brand-designbump ', 'icofont-brand-designfloat ', 'icofont-brand-disney ', 'icofont-brand-dodge ', 'icofont-brand-dove ', 'icofont-brand-drupal ', 'icofont-brand-ebay ', 'icofont-brand-eleven ', 'icofont-brand-emirates ', 'icofont-brand-espn ', 'icofont-brand-etihad-airways ', 'icofont-brand-etisalat ', 'icofont-brand-etsy ', 'icofont-brand-fastrack ', 'icofont-brand-fedex ', 'icofont-brand-ferrari ', 'icofont-brand-fitbit ', 'icofont-brand-flikr ', 'icofont-brand-forbes ', 'icofont-brand-foursquare ', 'icofont-brand-foxconn ', 'icofont-brand-fujitsu ', 'icofont-brand-general-electric ', 'icofont-brand-gillette ', 'icofont-brand-gizmodo ', 'icofont-brand-gnome ', 'icofont-brand-google ', 'icofont-brand-gopro ', 'icofont-brand-gucci ', 'icofont-brand-hallmark ', 'icofont-brand-hi5 ', 'icofont-brand-honda ', 'icofont-brand-hp ', 'icofont-brand-hsbc ', 'icofont-brand-htc ', 'icofont-brand-huawei ', 'icofont-brand-hulu ', 'icofont-brand-hyundai ', 'icofont-brand-ibm ', 'icofont-brand-icofont ', 'icofont-brand-icq ', 'icofont-brand-ikea ', 'icofont-brand-imdb ', 'icofont-brand-indiegogo ', 'icofont-brand-intel ', 'icofont-brand-ipair ', 'icofont-brand-jaguar ', 'icofont-brand-java ', 'icofont-brand-joomla ', 'icofont-brand-kickstarter ', 'icofont-brand-kik ', 'icofont-brand-lastfm ', 'icofont-brand-lego ', 'icofont-brand-lenovo ', 'icofont-brand-levis ', 'icofont-brand-lexus ', 'icofont-brand-lg ', 'icofont-brand-life-hacker ', 'icofont-brand-linux-mint ', 'icofont-brand-linux ', 'icofont-brand-lionix ', 'icofont-brand-loreal ', 'icofont-brand-louis-vuitton ', 'icofont-brand-mac-os ', 'icofont-brand-marvel-app ', 'icofont-brand-mashable ', 'icofont-brand-mazda ', 'icofont-brand-mcdonals ', 'icofont-brand-mercedes ', 'icofont-brand-micromax ', 'icofont-brand-microsoft ', 'icofont-brand-mobileme ', 'icofont-brand-mobily ', 'icofont-brand-motorola ', 'icofont-brand-msi ', 'icofont-brand-mts ', 'icofont-brand-myspace ', 'icofont-brand-mytv ', 'icofont-brand-nasa ', 'icofont-brand-natgeo ', 'icofont-brand-nbc ', 'icofont-brand-nescafe ', 'icofont-brand-nestle ', 'icofont-brand-netflix ', 'icofont-brand-nexus ', 'icofont-brand-nike ', 'icofont-brand-nokia ', 'icofont-brand-nvidia ', 'icofont-brand-omega ', 'icofont-brand-opensuse ', 'icofont-brand-oracle ', 'icofont-brand-panasonic ', 'icofont-brand-paypal ', 'icofont-brand-pepsi ', 'icofont-brand-philips ', 'icofont-brand-pizza-hut ', 'icofont-brand-playstation ', 'icofont-brand-puma ', 'icofont-brand-qatar-air ', 'icofont-brand-qvc ', 'icofont-brand-readernaut ', 'icofont-brand-redbull ', 'icofont-brand-reebok ', 'icofont-brand-reuters ', 'icofont-brand-samsung ', 'icofont-brand-sap ', 'icofont-brand-saudia-airlines ', 'icofont-brand-scribd ', 'icofont-brand-shell ', 'icofont-brand-siemens ', 'icofont-brand-sk-telecom ', 'icofont-brand-slideshare ', 'icofont-brand-smashing-magazine ', 'icofont-brand-snapchat ', 'icofont-brand-sony-ericsson ', 'icofont-brand-sony ', 'icofont-brand-soundcloud ', 'icofont-brand-sprint ', 'icofont-brand-squidoo ', 'icofont-brand-starbucks ', 'icofont-brand-stc ', 'icofont-brand-steam ', 'icofont-brand-suzuki ', 'icofont-brand-symbian ', 'icofont-brand-t-mobile ', 'icofont-brand-tango ', 'icofont-brand-target ', 'icofont-brand-tata-indicom ', 'icofont-brand-techcrunch ', 'icofont-brand-telenor ', 'icofont-brand-teliasonera ', 'icofont-brand-tesla ', 'icofont-brand-the-verge ', 'icofont-brand-thenextweb ', 'icofont-brand-toshiba ', 'icofont-brand-toyota ', 'icofont-brand-tribenet ', 'icofont-brand-ubuntu ', 'icofont-brand-unilever ', 'icofont-brand-vaio ', 'icofont-brand-verizon ', 'icofont-brand-viber ', 'icofont-brand-vodafone ', 'icofont-brand-volkswagen ', 'icofont-brand-walmart ', 'icofont-brand-warnerbros ', 'icofont-brand-whatsapp ', 'icofont-brand-wikipedia ', 'icofont-brand-windows ', 'icofont-brand-wire ', 'icofont-brand-wordpress ', 'icofont-brand-xiaomi ', 'icofont-brand-yahoobuzz ', 'icofont-brand-yamaha ', 'icofont-brand-youtube ', 'icofont-brand-zain ', 'icofont-bank-alt ', 'icofont-bank ', 'icofont-barcode ', 'icofont-bill-alt ', 'icofont-billboard ', 'icofont-briefcase-1 ', 'icofont-briefcase-2 ', 'icofont-businessman ', 'icofont-businesswoman ', 'icofont-chair ', 'icofont-coins ', 'icofont-company ', 'icofont-contact-add ', 'icofont-files-stack ', 'icofont-handshake-deal ', 'icofont-id-card ', 'icofont-meeting-add ', 'icofont-money-bag ', 'icofont-pie-chart ', 'icofont-presentation-alt ', 'icofont-presentation ', 'icofont-stamp ', 'icofont-stock-mobile ', 'icofont-chart-arrows-axis ', 'icofont-chart-bar-graph ', 'icofont-chart-flow-1 ', 'icofont-chart-flow-2 ', 'icofont-chart-flow ', 'icofont-chart-growth ', 'icofont-chart-histogram-alt ', 'icofont-chart-histogram ', 'icofont-chart-line-alt ', 'icofont-chart-line ', 'icofont-chart-pie-alt ', 'icofont-chart-pie ', 'icofont-chart-radar-graph ', 'icofont-architecture-alt ', 'icofont-architecture ', 'icofont-barricade ', 'icofont-bolt ', 'icofont-bricks ', 'icofont-building-alt ', 'icofont-bull-dozer ', 'icofont-calculations ', 'icofont-cement-mix ', 'icofont-cement-mixer ', 'icofont-concrete-mixer ', 'icofont-danger-zone ', 'icofont-drill ', 'icofont-eco-energy ', 'icofont-eco-environmen ', 'icofont-energy-air ', 'icofont-energy-oil ', 'icofont-energy-savings ', 'icofont-energy-solar ', 'icofont-energy-water ', 'icofont-engineer ', 'icofont-fire-extinguisher-alt ', 'icofont-fire-extinguisher ', 'icofont-fix-tools ', 'icofont-fork-lift ', 'icofont-glue-oil ', 'icofont-hammer-alt ', 'icofont-hammer ', 'icofont-help-robot ', 'icofont-industries-1 ', 'icofont-industries-2 ', 'icofont-industries-3 ', 'icofont-industries-4 ', 'icofont-industries-5 ', 'icofont-industries ', 'icofont-labour ', 'icofont-mining ', 'icofont-paint-brush ', 'icofont-pollution ', 'icofont-power-zone ', 'icofont-radio-active ', 'icofont-recycle-alt ', 'icofont-recycling-man ', 'icofont-safety-hat-light ', 'icofont-safety-hat ', 'icofont-saw ', 'icofont-screw-driver ', 'icofont-tools-1 ', 'icofont-tools-bag ', 'icofont-tow-truck ', 'icofont-trolley ', 'icofont-trowel ', 'icofont-under-construction-alt ', 'icofont-under-construction ', 'icofont-vehicle-cement ', 'icofont-vehicle-crane ', 'icofont-vehicle-delivery-van ', 'icofont-vehicle-dozer ', 'icofont-vehicle-excavator ', 'icofont-vehicle-trucktor ', 'icofont-vehicle-wrecking ', 'icofont-worker ', 'icofont-workers-group ', 'icofont-wrench ', 'icofont-afghani-false ', 'icofont-afghani-minus ', 'icofont-afghani-plus ', 'icofont-afghani-true ', 'icofont-afghani ', 'icofont-baht-false ', 'icofont-baht-minus ', 'icofont-baht-plus ', 'icofont-baht-true ', 'icofont-baht ', 'icofont-bitcoin-false ', 'icofont-bitcoin-minus ', 'icofont-bitcoin-plus ', 'icofont-bitcoin-true ', 'icofont-bitcoin ', 'icofont-dollar-flase ', 'icofont-dollar-minus ', 'icofont-dollar-plus ', 'icofont-dollar-true ', 'icofont-dollar ', 'icofont-dong-false ', 'icofont-dong-minus ', 'icofont-dong-plus ', 'icofont-dong-true ', 'icofont-dong ', 'icofont-euro-false ', 'icofont-euro-minus ', 'icofont-euro-plus ', 'icofont-euro-true ', 'icofont-euro ', 'icofont-frank-false ', 'icofont-frank-minus ', 'icofont-frank-plus ', 'icofont-frank-true ', 'icofont-frank ', 'icofont-hryvnia-false ', 'icofont-hryvnia-minus ', 'icofont-hryvnia-plus ', 'icofont-hryvnia-true ', 'icofont-hryvnia ', 'icofont-lira-false ', 'icofont-lira-minus ', 'icofont-lira-plus ', 'icofont-lira-true ', 'icofont-lira ', 'icofont-peseta-false ', 'icofont-peseta-minus ', 'icofont-peseta-plus ', 'icofont-peseta-true ', 'icofont-peseta ', 'icofont-peso-false ', 'icofont-peso-minus ', 'icofont-peso-plus ', 'icofont-peso-true ', 'icofont-peso ', 'icofont-pound-false ', 'icofont-pound-minus ', 'icofont-pound-plus ', 'icofont-pound-true ', 'icofont-pound ', 'icofont-renminbi-false ', 'icofont-renminbi-minus ', 'icofont-renminbi-plus ', 'icofont-renminbi-true ', 'icofont-renminbi ', 'icofont-riyal-false ', 'icofont-riyal-minus ', 'icofont-riyal-plus ', 'icofont-riyal-true ', 'icofont-riyal ', 'icofont-rouble-false ', 'icofont-rouble-minus ', 'icofont-rouble-plus ', 'icofont-rouble-true ', 'icofont-rouble ', 'icofont-rupee-false ', 'icofont-rupee-minus ', 'icofont-rupee-plus ', 'icofont-rupee-true ', 'icofont-rupee ', 'icofont-taka-false ', 'icofont-taka-minus ', 'icofont-taka-plus ', 'icofont-taka-true ', 'icofont-taka ', 'icofont-turkish-lira-false ', 'icofont-turkish-lira-minus ', 'icofont-turkish-lira-plus ', 'icofont-turkish-lira-true ', 'icofont-turkish-lira ', 'icofont-won-false ', 'icofont-won-minus ', 'icofont-won-plus ', 'icofont-won-true ', 'icofont-won ', 'icofont-yen-false ', 'icofont-yen-minus ', 'icofont-yen-plus ', 'icofont-yen-true ', 'icofont-yen ', 'icofont-android-nexus ', 'icofont-android-tablet ', 'icofont-apple-watch ', 'icofont-drawing-tablet ', 'icofont-earphone ', 'icofont-flash-drive ', 'icofont-game-console ', 'icofont-game-controller ', 'icofont-game-pad ', 'icofont-game ', 'icofont-headphone-alt-1 ', 'icofont-headphone-alt-2 ', 'icofont-headphone-alt-3 ', 'icofont-headphone-alt ', 'icofont-headphone ', 'icofont-htc-one ', 'icofont-imac ', 'icofont-ipad ', 'icofont-iphone ', 'icofont-ipod-nano ', 'icofont-ipod-touch ', 'icofont-keyboard-alt ', 'icofont-keyboard-wireless ', 'icofont-keyboard ', 'icofont-laptop-alt ', 'icofont-laptop ', 'icofont-macbook ', 'icofont-magic-mouse ', 'icofont-micro-chip ', 'icofont-microphone-alt ', 'icofont-microphone ', 'icofont-monitor ', 'icofont-mouse ', 'icofont-mp3-player ', 'icofont-nintendo ', 'icofont-playstation-alt ', 'icofont-psvita ', 'icofont-radio-mic ', 'icofont-radio ', 'icofont-refrigerator ', 'icofont-samsung-galaxy ', 'icofont-surface-tablet ', 'icofont-ui-head-phone ', 'icofont-ui-keyboard ', 'icofont-washing-machine ', 'icofont-wifi-router ', 'icofont-wii-u ', 'icofont-windows-lumia ', 'icofont-wireless-mouse ', 'icofont-xbox-360 ', 'icofont-arrow-down ', 'icofont-arrow-left ', 'icofont-arrow-right ', 'icofont-arrow-up ', 'icofont-block-down ', 'icofont-block-left ', 'icofont-block-right ', 'icofont-block-up ', 'icofont-bubble-down ', 'icofont-bubble-left ', 'icofont-bubble-right ', 'icofont-bubble-up ', 'icofont-caret-down ', 'icofont-caret-left ', 'icofont-caret-right ', 'icofont-caret-up ', 'icofont-circled-down ', 'icofont-circled-left ', 'icofont-circled-right ', 'icofont-circled-up ', 'icofont-collapse ', 'icofont-cursor-drag ', 'icofont-curved-double-left ', 'icofont-curved-double-right ', 'icofont-curved-down ', 'icofont-curved-left ', 'icofont-curved-right ', 'icofont-curved-up ', 'icofont-dotted-down ', 'icofont-dotted-left ', 'icofont-dotted-right ', 'icofont-dotted-up ', 'icofont-double-left ', 'icofont-double-right ', 'icofont-expand-alt ', 'icofont-hand-down ', 'icofont-hand-drag ', 'icofont-hand-drag1 ', 'icofont-hand-drag2 ', 'icofont-hand-drawn-alt-down ', 'icofont-hand-drawn-alt-left ', 'icofont-hand-drawn-alt-right ', 'icofont-hand-drawn-alt-up ', 'icofont-hand-drawn-down ', 'icofont-hand-drawn-left ', 'icofont-hand-drawn-right ', 'icofont-hand-drawn-up ', 'icofont-hand-grippers ', 'icofont-hand-left ', 'icofont-hand-right ', 'icofont-hand-up ', 'icofont-line-block-down ', 'icofont-line-block-left ', 'icofont-line-block-right ', 'icofont-line-block-up ', 'icofont-long-arrow-down ', 'icofont-long-arrow-left ', 'icofont-long-arrow-right ', 'icofont-long-arrow-up ', 'icofont-rounded-collapse ', 'icofont-rounded-double-left ', 'icofont-rounded-double-right ', 'icofont-rounded-down ', 'icofont-rounded-expand ', 'icofont-rounded-left-down ', 'icofont-rounded-left-up ', 'icofont-rounded-left ', 'icofont-rounded-right-down ', 'icofont-rounded-right-up ', 'icofont-rounded-right ', 'icofont-rounded-up ', 'icofont-scroll-bubble-down ', 'icofont-scroll-bubble-left ', 'icofont-scroll-bubble-right ', 'icofont-scroll-bubble-up ', 'icofont-scroll-double-down ', 'icofont-scroll-double-left ', 'icofont-scroll-double-right ', 'icofont-scroll-double-up ', 'icofont-scroll-down ', 'icofont-scroll-left ', 'icofont-scroll-long-down ', 'icofont-scroll-long-left ', 'icofont-scroll-long-right ', 'icofont-scroll-long-up ', 'icofont-scroll-right ', 'icofont-scroll-up ', 'icofont-simple-down ', 'icofont-simple-left-down ', 'icofont-simple-left-up ', 'icofont-simple-left ', 'icofont-simple-right-down ', 'icofont-simple-right-up ', 'icofont-simple-right ', 'icofont-simple-up ', 'icofont-square-down ', 'icofont-square-left ', 'icofont-square-right ', 'icofont-square-up ', 'icofont-stylish-down ', 'icofont-stylish-left ', 'icofont-stylish-right ', 'icofont-stylish-up ', 'icofont-swoosh-down ', 'icofont-swoosh-left ', 'icofont-swoosh-right ', 'icofont-swoosh-up ', 'icofont-thin-double-left ', 'icofont-thin-double-right ', 'icofont-thin-down ', 'icofont-thin-left ', 'icofont-thin-right ', 'icofont-thin-up ', 'icofont-abc ', 'icofont-atom ', 'icofont-award ', 'icofont-bell-alt ', 'icofont-black-board ', 'icofont-book-alt ', 'icofont-book ', 'icofont-brainstorming ', 'icofont-certificate-alt-1 ', 'icofont-certificate-alt-2 ', 'icofont-certificate ', 'icofont-education ', 'icofont-electron ', 'icofont-fountain-pen ', 'icofont-globe-alt ', 'icofont-graduate-alt ', 'icofont-graduate ', 'icofont-group-students ', 'icofont-hat-alt ', 'icofont-hat ', 'icofont-instrument ', 'icofont-lamp-light ', 'icofont-medal ', 'icofont-microscope-alt ', 'icofont-microscope ', 'icofont-paper ', 'icofont-pen-alt-4 ', 'icofont-pen-nib ', 'icofont-pencil-alt-5 ', 'icofont-quill-pen ', 'icofont-read-book-alt ', 'icofont-read-book ', 'icofont-school-bag ', 'icofont-school-bus ', 'icofont-student-alt ', 'icofont-student ', 'icofont-teacher ', 'icofont-test-bulb ', 'icofont-test-tube-alt ', 'icofont-university ', 'icofont-angry ', 'icofont-astonished ', 'icofont-confounded ', 'icofont-confused ', 'icofont-crying ', 'icofont-dizzy ', 'icofont-expressionless ', 'icofont-heart-eyes ', 'icofont-laughing ', 'icofont-nerd-smile ', 'icofont-open-mouth ', 'icofont-rage ', 'icofont-rolling-eyes ', 'icofont-sad ', 'icofont-simple-smile ', 'icofont-slightly-smile ', 'icofont-smirk ', 'icofont-stuck-out-tongue ', 'icofont-wink-smile ', 'icofont-worried ', 'icofont-file-alt ', 'icofont-file-audio ', 'icofont-file-avi-mp4 ', 'icofont-file-bmp ', 'icofont-file-code ', 'icofont-file-css ', 'icofont-file-document ', 'icofont-file-eps ', 'icofont-file-excel ', 'icofont-file-exe ', 'icofont-file-file ', 'icofont-file-flv ', 'icofont-file-gif ', 'icofont-file-html5 ', 'icofont-file-image ', 'icofont-file-iso ', 'icofont-file-java ', 'icofont-file-javascript ', 'icofont-file-jpg ', 'icofont-file-midi ', 'icofont-file-mov ', 'icofont-file-mp3 ', 'icofont-file-pdf ', 'icofont-file-php ', 'icofont-file-png ', 'icofont-file-powerpoint ', 'icofont-file-presentation ', 'icofont-file-psb ', 'icofont-file-psd ', 'icofont-file-python ', 'icofont-file-ruby ', 'icofont-file-spreadsheet ', 'icofont-file-sql ', 'icofont-file-svg ', 'icofont-file-text ', 'icofont-file-tiff ', 'icofont-file-video ', 'icofont-file-wave ', 'icofont-file-wmv ', 'icofont-file-word ', 'icofont-file-zip ', 'icofont-cycling-alt ', 'icofont-cycling ', 'icofont-dumbbell ', 'icofont-dumbbells ', 'icofont-gym-alt-1 ', 'icofont-gym-alt-2 ', 'icofont-gym-alt-3 ', 'icofont-gym ', 'icofont-muscle-weight ', 'icofont-muscle ', 'icofont-apple ', 'icofont-arabian-coffee ', 'icofont-artichoke ', 'icofont-asparagus ', 'icofont-avocado ', 'icofont-baby-food ', 'icofont-banana ', 'icofont-bbq ', 'icofont-beans ', 'icofont-beer ', 'icofont-bell-pepper-capsicum ', 'icofont-birthday-cake ', 'icofont-bread ', 'icofont-broccoli ', 'icofont-burger ', 'icofont-cabbage ', 'icofont-carrot ', 'icofont-cauli-flower ', 'icofont-cheese ', 'icofont-chef ', 'icofont-cherry ', 'icofont-chicken-fry ', 'icofont-chicken ', 'icofont-cocktail ', 'icofont-coconut-water ', 'icofont-coconut ', 'icofont-coffee-alt ', 'icofont-coffee-cup ', 'icofont-coffee-mug ', 'icofont-coffee-pot ', 'icofont-cola ', 'icofont-corn ', 'icofont-croissant ', 'icofont-crop-plant ', 'icofont-cucumber ', 'icofont-culinary ', 'icofont-cup-cake ', 'icofont-dining-table ', 'icofont-donut ', 'icofont-egg-plant ', 'icofont-egg-poached ', 'icofont-farmer-alt ', 'icofont-farmer ', 'icofont-fast-food ', 'icofont-food-basket ', 'icofont-food-cart ', 'icofont-fork-and-knife ', 'icofont-french-fries ', 'icofont-fruits ', 'icofont-grapes ', 'icofont-honey ', 'icofont-hot-dog ', 'icofont-ice-cream-alt ', 'icofont-ice-cream ', 'icofont-juice ', 'icofont-ketchup ', 'icofont-kiwi ', 'icofont-layered-cake ', 'icofont-lemon-alt ', 'icofont-lemon ', 'icofont-lobster ', 'icofont-mango ', 'icofont-milk ', 'icofont-mushroom ', 'icofont-noodles ', 'icofont-onion ', 'icofont-orange ', 'icofont-pear ', 'icofont-peas ', 'icofont-pepper ', 'icofont-pie-alt ', 'icofont-pie ', 'icofont-pineapple ', 'icofont-pizza-slice ', 'icofont-pizza ', 'icofont-plant ', 'icofont-popcorn ', 'icofont-potato ', 'icofont-pumpkin ', 'icofont-raddish ', 'icofont-restaurant-menu ', 'icofont-restaurant ', 'icofont-salt-and-pepper ', 'icofont-sandwich ', 'icofont-sausage ', 'icofont-soft-drinks ', 'icofont-soup-bowl ', 'icofont-spoon-and-fork ', 'icofont-steak ', 'icofont-strawberry ', 'icofont-sub-sandwich ', 'icofont-sushi ', 'icofont-taco ', 'icofont-tea-pot ', 'icofont-tea ', 'icofont-tomato ', 'icofont-watermelon ', 'icofont-wheat ', 'icofont-baby-backpack ', 'icofont-baby-cloth ', 'icofont-baby-milk-bottle ', 'icofont-baby-trolley ', 'icofont-baby ', 'icofont-candy ', 'icofont-holding-hands ', 'icofont-infant-nipple ', 'icofont-kids-scooter ', 'icofont-safety-pin ', 'icofont-teddy-bear ', 'icofont-toy-ball ', 'icofont-toy-cat ', 'icofont-toy-duck ', 'icofont-toy-elephant ', 'icofont-toy-hand ', 'icofont-toy-horse ', 'icofont-toy-lattu ', 'icofont-toy-train ', 'icofont-burglar ', 'icofont-cannon-firing ', 'icofont-cc-camera ', 'icofont-cop-badge ', 'icofont-cop ', 'icofont-court-hammer ', 'icofont-court ', 'icofont-finger-print ', 'icofont-gavel ', 'icofont-handcuff-alt ', 'icofont-handcuff ', 'icofont-investigation ', 'icofont-investigator ', 'icofont-jail ', 'icofont-judge ', 'icofont-law-alt-1 ', 'icofont-law-alt-2 ', 'icofont-law-alt-3 ', 'icofont-law-book ', 'icofont-law-document ', 'icofont-law-order ', 'icofont-law-protect ', 'icofont-law-scales ', 'icofont-law ', 'icofont-lawyer-alt-1 ', 'icofont-lawyer-alt-2 ', 'icofont-lawyer ', 'icofont-legal ', 'icofont-pistol ', 'icofont-police-badge ', 'icofont-police-cap ', 'icofont-police-car-alt-1 ', 'icofont-police-car-alt-2 ', 'icofont-police-car ', 'icofont-police-hat ', 'icofont-police-van ', 'icofont-police ', 'icofont-thief-alt ', 'icofont-thief ', 'icofont-abacus-alt ', 'icofont-abacus ', 'icofont-angle-180 ', 'icofont-angle-45 ', 'icofont-angle-90 ', 'icofont-angle ', 'icofont-calculator-alt-1 ', 'icofont-calculator-alt-2 ', 'icofont-calculator ', 'icofont-circle-ruler-alt ', 'icofont-circle-ruler ', 'icofont-compass-alt-1 ', 'icofont-compass-alt-2 ', 'icofont-compass-alt-3 ', 'icofont-compass-alt-4 ', 'icofont-golden-ratio ', 'icofont-marker-alt-1 ', 'icofont-marker-alt-2 ', 'icofont-marker-alt-3 ', 'icofont-marker ', 'icofont-math ', 'icofont-mathematical-alt-1 ', 'icofont-mathematical-alt-2 ', 'icofont-mathematical ', 'icofont-pen-alt-1 ', 'icofont-pen-alt-2 ', 'icofont-pen-alt-3 ', 'icofont-pen-holder-alt-1 ', 'icofont-pen-holder ', 'icofont-pen ', 'icofont-pencil-alt-1 ', 'icofont-pencil-alt-2 ', 'icofont-pencil-alt-3 ', 'icofont-pencil-alt-4 ', 'icofont-pencil ', 'icofont-ruler-alt-1 ', 'icofont-ruler-alt-2 ', 'icofont-ruler-compass-alt ', 'icofont-ruler-compass ', 'icofont-ruler-pencil-alt-1 ', 'icofont-ruler-pencil-alt-2 ', 'icofont-ruler-pencil ', 'icofont-ruler ', 'icofont-rulers-alt ', 'icofont-rulers ', 'icofont-square-root ', 'icofont-ui-calculator ', 'icofont-aids ', 'icofont-ambulance-crescent ', 'icofont-ambulance-cross ', 'icofont-ambulance ', 'icofont-autism ', 'icofont-bandage ', 'icofont-blind ', 'icofont-blood-drop ', 'icofont-blood-test ', 'icofont-blood ', 'icofont-brain-alt ', 'icofont-brain ', 'icofont-capsule ', 'icofont-crutch ', 'icofont-disabled ', 'icofont-dna-alt-1 ', 'icofont-dna-alt-2 ', 'icofont-dna ', 'icofont-doctor-alt ', 'icofont-doctor ', 'icofont-drug-pack ', 'icofont-drug ', 'icofont-first-aid-alt ', 'icofont-first-aid ', 'icofont-heart-beat-alt ', 'icofont-heart-beat ', 'icofont-heartbeat ', 'icofont-herbal ', 'icofont-hospital ', 'icofont-icu ', 'icofont-injection-syringe ', 'icofont-laboratory ', 'icofont-medical-sign-alt ', 'icofont-medical-sign ', 'icofont-nurse-alt ', 'icofont-nurse ', 'icofont-nursing-home ', 'icofont-operation-theater ', 'icofont-paralysis-disability ', 'icofont-patient-bed ', 'icofont-patient-file ', 'icofont-pills ', 'icofont-prescription ', 'icofont-pulse ', 'icofont-stethoscope-alt ', 'icofont-stethoscope ', 'icofont-stretcher ', 'icofont-surgeon-alt ', 'icofont-surgeon ', 'icofont-tablets ', 'icofont-test-bottle ', 'icofont-test-tube ', 'icofont-thermometer-alt ', 'icofont-thermometer ', 'icofont-tooth ', 'icofont-xray ', 'icofont-ui-add ', 'icofont-ui-alarm ', 'icofont-ui-battery ', 'icofont-ui-block ', 'icofont-ui-bluetooth ', 'icofont-ui-brightness ', 'icofont-ui-browser ', 'icofont-ui-calendar ', 'icofont-ui-call ', 'icofont-ui-camera ', 'icofont-ui-cart ', 'icofont-ui-cell-phone ', 'icofont-ui-chat ', 'icofont-ui-check ', 'icofont-ui-clip-board ', 'icofont-ui-clip ', 'icofont-ui-clock ', 'icofont-ui-close ', 'icofont-ui-contact-list ', 'icofont-ui-copy ', 'icofont-ui-cut ', 'icofont-ui-delete ', 'icofont-ui-dial-phone ', 'icofont-ui-edit ', 'icofont-ui-email ', 'icofont-ui-file ', 'icofont-ui-fire-wall ', 'icofont-ui-flash-light ', 'icofont-ui-flight ', 'icofont-ui-folder ', 'icofont-ui-game ', 'icofont-ui-handicapped ', 'icofont-ui-home ', 'icofont-ui-image ', 'icofont-ui-laoding ', 'icofont-ui-lock ', 'icofont-ui-love-add ', 'icofont-ui-love-broken ', 'icofont-ui-love-remove ', 'icofont-ui-love ', 'icofont-ui-map ', 'icofont-ui-message ', 'icofont-ui-messaging ', 'icofont-ui-movie ', 'icofont-ui-music-player ', 'icofont-ui-music ', 'icofont-ui-mute ', 'icofont-ui-network ', 'icofont-ui-next ', 'icofont-ui-note ', 'icofont-ui-office ', 'icofont-ui-password ', 'icofont-ui-pause ', 'icofont-ui-play-stop ', 'icofont-ui-play ', 'icofont-ui-pointer ', 'icofont-ui-power ', 'icofont-ui-press ', 'icofont-ui-previous ', 'icofont-ui-rate-add ', 'icofont-ui-rate-blank ', 'icofont-ui-rate-remove ', 'icofont-ui-rating ', 'icofont-ui-record ', 'icofont-ui-remove ', 'icofont-ui-reply ', 'icofont-ui-rotation ', 'icofont-ui-rss ', 'icofont-ui-search ', 'icofont-ui-settings ', 'icofont-ui-social-link ', 'icofont-ui-tag ', 'icofont-ui-text-chat ', 'icofont-ui-text-loading ', 'icofont-ui-theme ', 'icofont-ui-timer ', 'icofont-ui-touch-phone ', 'icofont-ui-travel ', 'icofont-ui-unlock ', 'icofont-ui-user-group ', 'icofont-ui-user ', 'icofont-ui-v-card ', 'icofont-ui-video-chat ', 'icofont-ui-video-message ', 'icofont-ui-video-play ', 'icofont-ui-video ', 'icofont-ui-volume ', 'icofont-ui-weather ', 'icofont-ui-wifi ', 'icofont-ui-zoom-in ', 'icofont-ui-zoom-out ', 'icofont-cassette-player ', 'icofont-cassette ', 'icofont-forward ', 'icofont-guiter ', 'icofont-movie ', 'icofont-multimedia ', 'icofont-music-alt ', 'icofont-music-disk ', 'icofont-music-note ', 'icofont-music-notes ', 'icofont-music ', 'icofont-mute-volume ', 'icofont-pause ', 'icofont-play-alt-1 ', 'icofont-play-alt-2 ', 'icofont-play-alt-3 ', 'icofont-play-pause ', 'icofont-play ', 'icofont-record ', 'icofont-retro-music-disk ', 'icofont-rewind ', 'icofont-song-notes ', 'icofont-sound-wave-alt ', 'icofont-sound-wave ', 'icofont-stop ', 'icofont-video-alt ', 'icofont-video-cam ', 'icofont-video-clapper ', 'icofont-video ', 'icofont-volume-bar ', 'icofont-volume-down ', 'icofont-volume-mute ', 'icofont-volume-off ', 'icofont-volume-up ', 'icofont-youtube-play ', 'icofont-2checkout-alt ', 'icofont-2checkout ', 'icofont-amazon-alt ', 'icofont-amazon ', 'icofont-american-express-alt ', 'icofont-american-express ', 'icofont-apple-pay-alt ', 'icofont-apple-pay ', 'icofont-bank-transfer-alt ', 'icofont-bank-transfer ', 'icofont-braintree-alt ', 'icofont-braintree ', 'icofont-cash-on-delivery-alt ', 'icofont-cash-on-delivery ', 'icofont-diners-club-alt-1 ', 'icofont-diners-club-alt-2 ', 'icofont-diners-club-alt-3 ', 'icofont-diners-club ', 'icofont-discover-alt ', 'icofont-discover ', 'icofont-eway-alt ', 'icofont-eway ', 'icofont-google-wallet-alt-1 ', 'icofont-google-wallet-alt-2 ', 'icofont-google-wallet-alt-3 ', 'icofont-google-wallet ', 'icofont-jcb-alt ', 'icofont-jcb ', 'icofont-maestro-alt ', 'icofont-maestro ', 'icofont-mastercard-alt ', 'icofont-mastercard ', 'icofont-payoneer-alt ', 'icofont-payoneer ', 'icofont-paypal-alt ', 'icofont-paypal ', 'icofont-sage-alt ', 'icofont-sage ', 'icofont-skrill-alt ', 'icofont-skrill ', 'icofont-stripe-alt ', 'icofont-stripe ', 'icofont-visa-alt ', 'icofont-visa-electron ', 'icofont-visa ', 'icofont-western-union-alt ', 'icofont-western-union ', 'icofont-boy ', 'icofont-business-man-alt-1 ', 'icofont-business-man-alt-2 ', 'icofont-business-man-alt-3 ', 'icofont-business-man ', 'icofont-female ', 'icofont-funky-man ', 'icofont-girl-alt ', 'icofont-girl ', 'icofont-group ', 'icofont-hotel-boy-alt ', 'icofont-hotel-boy ', 'icofont-kid ', 'icofont-man-in-glasses ', 'icofont-people ', 'icofont-support ', 'icofont-user-alt-1 ', 'icofont-user-alt-2 ', 'icofont-user-alt-3 ', 'icofont-user-alt-4 ', 'icofont-user-alt-5 ', 'icofont-user-alt-6 ', 'icofont-user-alt-7 ', 'icofont-user-female ', 'icofont-user-male ', 'icofont-user-suited ', 'icofont-user ', 'icofont-users-alt-1 ', 'icofont-users-alt-2 ', 'icofont-users-alt-3 ', 'icofont-users-alt-4 ', 'icofont-users-alt-5 ', 'icofont-users-alt-6 ', 'icofont-users-social ', 'icofont-users ', 'icofont-waiter-alt ', 'icofont-waiter ', 'icofont-woman-in-glasses ', 'icofont-search-1 ', 'icofont-search-2 ', 'icofont-search-document ', 'icofont-search-folder ', 'icofont-search-job ', 'icofont-search-map ', 'icofont-search-property ', 'icofont-search-restaurant ', 'icofont-search-stock ', 'icofont-search-user ', 'icofont-search ', 'icofont-500px ', 'icofont-aim ', 'icofont-badoo ', 'icofont-baidu-tieba ', 'icofont-bbm-messenger ', 'icofont-bebo ', 'icofont-behance ', 'icofont-blogger ', 'icofont-bootstrap ', 'icofont-brightkite ', 'icofont-cloudapp ', 'icofont-concrete5 ', 'icofont-delicious ', 'icofont-designbump ', 'icofont-designfloat ', 'icofont-deviantart ', 'icofont-digg ', 'icofont-dotcms ', 'icofont-dribbble ', 'icofont-dribble ', 'icofont-dropbox ', 'icofont-ebuddy ', 'icofont-ello ', 'icofont-ember ', 'icofont-envato ', 'icofont-evernote ', 'icofont-facebook-messenger ', 'icofont-facebook ', 'icofont-feedburner ', 'icofont-flikr ', 'icofont-folkd ', 'icofont-foursquare ', 'icofont-friendfeed ', 'icofont-ghost ', 'icofont-github ', 'icofont-gnome ', 'icofont-google-buzz ', 'icofont-google-hangouts ', 'icofont-google-map ', 'icofont-google-plus ', 'icofont-google-talk ', 'icofont-hype-machine ', 'icofont-instagram ', 'icofont-kakaotalk ', 'icofont-kickstarter ', 'icofont-kik ', 'icofont-kiwibox ', 'icofont-line-messenger ', 'icofont-line ', 'icofont-linkedin ', 'icofont-linux-mint ', 'icofont-live-messenger ', 'icofont-livejournal ', 'icofont-magento ', 'icofont-meetme ', 'icofont-meetup ', 'icofont-mixx ', 'icofont-newsvine ', 'icofont-nimbuss ', 'icofont-odnoklassniki ', 'icofont-opencart ', 'icofont-oscommerce ', 'icofont-pandora ', 'icofont-photobucket ', 'icofont-picasa ', 'icofont-pinterest ', 'icofont-prestashop ', 'icofont-qik ', 'icofont-qq ', 'icofont-readernaut ', 'icofont-reddit ', 'icofont-renren ', 'icofont-rss ', 'icofont-shopify ', 'icofont-silverstripe ', 'icofont-skype ', 'icofont-slack ', 'icofont-slashdot ', 'icofont-slidshare ', 'icofont-smugmug ', 'icofont-snapchat ', 'icofont-soundcloud ', 'icofont-spotify ', 'icofont-stack-exchange ', 'icofont-stack-overflow ', 'icofont-steam ', 'icofont-stumbleupon ', 'icofont-tagged ', 'icofont-technorati ', 'icofont-telegram ', 'icofont-tinder ', 'icofont-trello ', 'icofont-tumblr ', 'icofont-twitch ', 'icofont-twitter ', 'icofont-typo3 ', 'icofont-ubercart ', 'icofont-viber ', 'icofont-viddler ', 'icofont-vimeo ', 'icofont-vine ', 'icofont-virb ', 'icofont-virtuemart ', 'icofont-vk ', 'icofont-wechat ', 'icofont-weibo ', 'icofont-whatsapp ', 'icofont-xing ', 'icofont-yahoo ', 'icofont-yelp ', 'icofont-youku ', 'icofont-youtube ', 'icofont-zencart ', 'icofont-badminton-birdie ', 'icofont-baseball ', 'icofont-baseballer ', 'icofont-basketball-hoop ', 'icofont-basketball ', 'icofont-billiard-ball ', 'icofont-boot-alt-1 ', 'icofont-boot-alt-2 ', 'icofont-boot ', 'icofont-bowling-alt ', 'icofont-bowling ', 'icofont-canoe ', 'icofont-cheer-leader ', 'icofont-climbing ', 'icofont-corner ', 'icofont-field-alt ', 'icofont-field ', 'icofont-football-alt ', 'icofont-football-american ', 'icofont-football ', 'icofont-foul ', 'icofont-goal-keeper ', 'icofont-goal ', 'icofont-golf-alt ', 'icofont-golf-bag ', 'icofont-golf-cart ', 'icofont-golf-field ', 'icofont-golf ', 'icofont-golfer ', 'icofont-helmet ', 'icofont-hockey-alt ', 'icofont-hockey ', 'icofont-ice-skate ', 'icofont-jersey-alt ', 'icofont-jersey ', 'icofont-jumping ', 'icofont-kick ', 'icofont-leg ', 'icofont-match-review ', 'icofont-medal-sport ', 'icofont-offside ', 'icofont-olympic-logo ', 'icofont-olympic ', 'icofont-padding ', 'icofont-penalty-card ', 'icofont-racer ', 'icofont-racing-car ', 'icofont-racing-flag-alt ', 'icofont-racing-flag ', 'icofont-racings-wheel ', 'icofont-referee ', 'icofont-refree-jersey ', 'icofont-result-sport ', 'icofont-rugby-ball ', 'icofont-rugby-player ', 'icofont-rugby ', 'icofont-runner-alt-1 ', 'icofont-runner-alt-2 ', 'icofont-runner ', 'icofont-score-board ', 'icofont-skiing-man ', 'icofont-skydiving-goggles ', 'icofont-snow-mobile ', 'icofont-steering ', 'icofont-stopwatch ', 'icofont-substitute ', 'icofont-swimmer ', 'icofont-table-tennis ', 'icofont-team-alt ', 'icofont-team ', 'icofont-tennis-player ', 'icofont-tennis ', 'icofont-tracking ', 'icofont-trophy-alt ', 'icofont-trophy ', 'icofont-volleyball-alt ', 'icofont-volleyball-fire ', 'icofont-volleyball ', 'icofont-water-bottle ', 'icofont-whistle-alt ', 'icofont-whistle ', 'icofont-win-trophy ', 'icofont-align-center ', 'icofont-align-left ', 'icofont-align-right ', 'icofont-all-caps ', 'icofont-bold ', 'icofont-brush ', 'icofont-clip-board ', 'icofont-code-alt ', 'icofont-color-bucket ', 'icofont-color-picker ', 'icofont-copy-invert ', 'icofont-copy ', 'icofont-cut ', 'icofont-delete-alt ', 'icofont-edit-alt ', 'icofont-eraser-alt ', 'icofont-font ', 'icofont-heading ', 'icofont-indent ', 'icofont-italic-alt ', 'icofont-italic ', 'icofont-justify-all ', 'icofont-justify-center ', 'icofont-justify-left ', 'icofont-justify-right ', 'icofont-link-broken ', 'icofont-outdent ', 'icofont-paper-clip ', 'icofont-paragraph ', 'icofont-pin ', 'icofont-printer ', 'icofont-redo ', 'icofont-rotation ', 'icofont-save ', 'icofont-small-cap ', 'icofont-strike-through ', 'icofont-sub-listing ', 'icofont-subscript ', 'icofont-superscript ', 'icofont-table ', 'icofont-text-height ', 'icofont-text-width ', 'icofont-trash ', 'icofont-underline ', 'icofont-undo ', 'icofont-air-balloon ', 'icofont-airplane-alt ', 'icofont-airplane ', 'icofont-articulated-truck ', 'icofont-auto-mobile ', 'icofont-auto-rickshaw ', 'icofont-bicycle-alt-1 ', 'icofont-bicycle-alt-2 ', 'icofont-bicycle ', 'icofont-bus-alt-1 ', 'icofont-bus-alt-2 ', 'icofont-bus-alt-3 ', 'icofont-bus ', 'icofont-cab ', 'icofont-cable-car ', 'icofont-car-alt-1 ', 'icofont-car-alt-2 ', 'icofont-car-alt-3 ', 'icofont-car-alt-4 ', 'icofont-car ', 'icofont-delivery-time ', 'icofont-fast-delivery ', 'icofont-fire-truck-alt ', 'icofont-fire-truck ', 'icofont-free-delivery ', 'icofont-helicopter ', 'icofont-motor-bike-alt ', 'icofont-motor-bike ', 'icofont-motor-biker ', 'icofont-oil-truck ', 'icofont-rickshaw ', 'icofont-rocket-alt-1 ', 'icofont-rocket-alt-2 ', 'icofont-rocket ', 'icofont-sail-boat-alt-1 ', 'icofont-sail-boat-alt-2 ', 'icofont-sail-boat ', 'icofont-scooter ', 'icofont-sea-plane ', 'icofont-ship-alt ', 'icofont-ship ', 'icofont-speed-boat ', 'icofont-taxi ', 'icofont-tractor ', 'icofont-train-line ', 'icofont-train-steam ', 'icofont-tram ', 'icofont-truck-alt ', 'icofont-truck-loaded ', 'icofont-truck ', 'icofont-van-alt ', 'icofont-van ', 'icofont-yacht ', 'icofont-5-star-hotel ', 'icofont-air-ticket ', 'icofont-beach-bed ', 'icofont-beach ', 'icofont-camping-vest ', 'icofont-direction-sign ', 'icofont-hill-side ', 'icofont-hill ', 'icofont-hotel ', 'icofont-island-alt ', 'icofont-island ', 'icofont-sandals-female ', 'icofont-sandals-male ', 'icofont-travelling ', 'icofont-breakdown ', 'icofont-celsius ', 'icofont-clouds ', 'icofont-cloudy ', 'icofont-dust ', 'icofont-eclipse ', 'icofont-fahrenheit ', 'icofont-forest-fire ', 'icofont-full-night ', 'icofont-full-sunny ', 'icofont-hail-night ', 'icofont-hail-rainy-night ', 'icofont-hail-rainy-sunny ', 'icofont-hail-rainy ', 'icofont-hail-sunny ', 'icofont-hail-thunder-night ', 'icofont-hail-thunder-sunny ', 'icofont-hail-thunder ', 'icofont-hail ', 'icofont-hill-night ', 'icofont-hill-sunny ', 'icofont-hurricane ', 'icofont-meteor ', 'icofont-night ', 'icofont-rainy-night ', 'icofont-rainy-sunny ', 'icofont-rainy-thunder ', 'icofont-rainy ', 'icofont-snow-alt ', 'icofont-snow-flake ', 'icofont-snow-temp ', 'icofont-snow ', 'icofont-snowy-hail ', 'icofont-snowy-night-hail ', 'icofont-snowy-night-rainy ', 'icofont-snowy-night ', 'icofont-snowy-rainy ', 'icofont-snowy-sunny-hail ', 'icofont-snowy-sunny-rainy ', 'icofont-snowy-sunny ', 'icofont-snowy-thunder-night ', 'icofont-snowy-thunder-sunny ', 'icofont-snowy-thunder ', 'icofont-snowy-windy-night ', 'icofont-snowy-windy-sunny ', 'icofont-snowy-windy ', 'icofont-snowy ', 'icofont-sun-alt ', 'icofont-sun-rise ', 'icofont-sun-set ', 'icofont-sun ', 'icofont-sunny-day-temp ', 'icofont-sunny ', 'icofont-thunder-light ', 'icofont-tornado ', 'icofont-umbrella-alt ', 'icofont-umbrella ', 'icofont-volcano ', 'icofont-wave ', 'icofont-wind-scale-0 ', 'icofont-wind-scale-1 ', 'icofont-wind-scale-10 ', 'icofont-wind-scale-11 ', 'icofont-wind-scale-12 ', 'icofont-wind-scale-2 ', 'icofont-wind-scale-3 ', 'icofont-wind-scale-4 ', 'icofont-wind-scale-5 ', 'icofont-wind-scale-6 ', 'icofont-wind-scale-7 ', 'icofont-wind-scale-8 ', 'icofont-wind-scale-9 ', 'icofont-wind-waves ', 'icofont-wind ', 'icofont-windy-hail ', 'icofont-windy-night ', 'icofont-windy-raining ', 'icofont-windy-sunny ', 'icofont-windy-thunder-raining ', 'icofont-windy-thunder ', 'icofont-windy ', 'icofont-addons ', 'icofont-address-book ', 'icofont-adjust ', 'icofont-alarm ', 'icofont-anchor ', 'icofont-archive ', 'icofont-at ', 'icofont-attachment ', 'icofont-audio ', 'icofont-automation ', 'icofont-badge ', 'icofont-bag-alt ', 'icofont-bag ', 'icofont-ban ', 'icofont-bar-code ', 'icofont-bars ', 'icofont-basket ', 'icofont-battery-empty ', 'icofont-battery-full ', 'icofont-battery-half ', 'icofont-battery-low ', 'icofont-beaker ', 'icofont-beard ', 'icofont-bed ', 'icofont-bell ', 'icofont-beverage ', 'icofont-bill ', 'icofont-bin ', 'icofont-binary ', 'icofont-binoculars ', 'icofont-bluetooth ', 'icofont-bomb ', 'icofont-book-mark ', 'icofont-box ', 'icofont-briefcase ', 'icofont-broken ', 'icofont-bucket ', 'icofont-bucket1 ', 'icofont-bucket2 ', 'icofont-bug ', 'icofont-building ', 'icofont-bulb-alt ', 'icofont-bullet ', 'icofont-bullhorn ', 'icofont-bullseye ', 'icofont-calendar ', 'icofont-camera-alt ', 'icofont-camera ', 'icofont-card ', 'icofont-cart-alt ', 'icofont-cart ', 'icofont-cc ', 'icofont-charging ', 'icofont-chat ', 'icofont-check-alt ', 'icofont-check-circled ', 'icofont-check ', 'icofont-checked ', 'icofont-children-care ', 'icofont-clip ', 'icofont-clock-time ', 'icofont-close-circled ', 'icofont-close-line-circled ', 'icofont-close-line-squared-alt ', 'icofont-close-line-squared ', 'icofont-close-line ', 'icofont-close-squared-alt ', 'icofont-close-squared ', 'icofont-close ', 'icofont-cloud-download ', 'icofont-cloud-refresh ', 'icofont-cloud-upload ', 'icofont-cloud ', 'icofont-code-not-allowed ', 'icofont-code ', 'icofont-comment ', 'icofont-compass-alt ', 'icofont-compass ', 'icofont-computer ', 'icofont-connection ', 'icofont-console ', 'icofont-contacts ', 'icofont-contrast ', 'icofont-copyright ', 'icofont-credit-card ', 'icofont-crop ', 'icofont-crown ', 'icofont-cube ', 'icofont-cubes ', 'icofont-dashboard-web ', 'icofont-dashboard ', 'icofont-data ', 'icofont-database-add ', 'icofont-database-locked ', 'icofont-database-remove ', 'icofont-database ', 'icofont-delete ', 'icofont-diamond ', 'icofont-dice-multiple ', 'icofont-dice ', 'icofont-disc ', 'icofont-diskette ', 'icofont-document-folder ', 'icofont-download-alt ', 'icofont-download ', 'icofont-downloaded ', 'icofont-drag ', 'icofont-drag1 ', 'icofont-drag2 ', 'icofont-drag3 ', 'icofont-earth ', 'icofont-ebook ', 'icofont-edit ', 'icofont-eject ', 'icofont-email ', 'icofont-envelope-open ', 'icofont-envelope ', 'icofont-eraser ', 'icofont-error ', 'icofont-excavator ', 'icofont-exchange ', 'icofont-exclamation-circle ', 'icofont-exclamation-square ', 'icofont-exclamation-tringle ', 'icofont-exclamation ', 'icofont-exit ', 'icofont-expand ', 'icofont-external-link ', 'icofont-external ', 'icofont-eye-alt ', 'icofont-eye-blocked ', 'icofont-eye-dropper ', 'icofont-eye ', 'icofont-favourite ', 'icofont-fax ', 'icofont-file-fill ', 'icofont-film ', 'icofont-filter ', 'icofont-fire-alt ', 'icofont-fire-burn ', 'icofont-fire ', 'icofont-flag-alt-1 ', 'icofont-flag-alt-2 ', 'icofont-flag ', 'icofont-flame-torch ', 'icofont-flash-light ', 'icofont-flash ', 'icofont-flask ', 'icofont-focus ', 'icofont-folder-open ', 'icofont-folder ', 'icofont-foot-print ', 'icofont-garbage ', 'icofont-gear-alt ', 'icofont-gear ', 'icofont-gears ', 'icofont-gift ', 'icofont-glass ', 'icofont-globe ', 'icofont-graffiti ', 'icofont-grocery ', 'icofont-hand ', 'icofont-hanger ', 'icofont-hard-disk ', 'icofont-heart-alt ', 'icofont-heart ', 'icofont-history ', 'icofont-home ', 'icofont-horn ', 'icofont-hour-glass ', 'icofont-id ', 'icofont-image ', 'icofont-inbox ', 'icofont-infinite ', 'icofont-info-circle ', 'icofont-info-square ', 'icofont-info ', 'icofont-institution ', 'icofont-interface ', 'icofont-invisible ', 'icofont-jacket ', 'icofont-jar ', 'icofont-jewlery ', 'icofont-karate ', 'icofont-key-hole ', 'icofont-key ', 'icofont-label ', 'icofont-lamp ', 'icofont-layers ', 'icofont-layout ', 'icofont-leaf ', 'icofont-leaflet ', 'icofont-learn ', 'icofont-lego ', 'icofont-lens ', 'icofont-letter ', 'icofont-letterbox ', 'icofont-library ', 'icofont-license ', 'icofont-life-bouy ', 'icofont-life-buoy ', 'icofont-life-jacket ', 'icofont-life-ring ', 'icofont-light-bulb ', 'icofont-lighter ', 'icofont-lightning-ray ', 'icofont-like ', 'icofont-line-height ', 'icofont-link-alt ', 'icofont-link ', 'icofont-list ', 'icofont-listening ', 'icofont-listine-dots ', 'icofont-listing-box ', 'icofont-listing-number ', 'icofont-live-support ', 'icofont-location-arrow ', 'icofont-location-pin ', 'icofont-lock ', 'icofont-login ', 'icofont-logout ', 'icofont-lollipop ', 'icofont-long-drive ', 'icofont-look ', 'icofont-loop ', 'icofont-luggage ', 'icofont-lunch ', 'icofont-lungs ', 'icofont-magic-alt ', 'icofont-magic ', 'icofont-magnet ', 'icofont-mail-box ', 'icofont-mail ', 'icofont-male ', 'icofont-map-pins ', 'icofont-map ', 'icofont-maximize ', 'icofont-measure ', 'icofont-medicine ', 'icofont-mega-phone ', 'icofont-megaphone-alt ', 'icofont-megaphone ', 'icofont-memorial ', 'icofont-memory-card ', 'icofont-mic-mute ', 'icofont-mic ', 'icofont-military ', 'icofont-mill ', 'icofont-minus-circle ', 'icofont-minus-square ', 'icofont-minus ', 'icofont-mobile-phone ', 'icofont-molecule ', 'icofont-money ', 'icofont-moon ', 'icofont-mop ', 'icofont-muffin ', 'icofont-mustache ', 'icofont-navigation-menu ', 'icofont-navigation ', 'icofont-network-tower ', 'icofont-network ', 'icofont-news ', 'icofont-newspaper ', 'icofont-no-smoking ', 'icofont-not-allowed ', 'icofont-notebook ', 'icofont-notepad ', 'icofont-notification ', 'icofont-numbered ', 'icofont-opposite ', 'icofont-optic ', 'icofont-options ', 'icofont-package ', 'icofont-page ', 'icofont-paint ', 'icofont-paper-plane ', 'icofont-paperclip ', 'icofont-papers ', 'icofont-pay ', 'icofont-penguin-linux ', 'icofont-pestle ', 'icofont-phone-circle ', 'icofont-phone ', 'icofont-picture ', 'icofont-pine ', 'icofont-pixels ', 'icofont-plugin ', 'icofont-plus-circle ', 'icofont-plus-square ', 'icofont-plus ', 'icofont-polygonal ', 'icofont-power ', 'icofont-price ', 'icofont-print ', 'icofont-puzzle ', 'icofont-qr-code ', 'icofont-queen ', 'icofont-question-circle ', 'icofont-question-square ', 'icofont-question ', 'icofont-quote-left ', 'icofont-quote-right ', 'icofont-random ', 'icofont-recycle ', 'icofont-refresh ', 'icofont-repair ', 'icofont-reply-all ', 'icofont-reply ', 'icofont-resize ', 'icofont-responsive ', 'icofont-retweet ', 'icofont-road ', 'icofont-robot ', 'icofont-royal ', 'icofont-rss-feed ', 'icofont-safety ', 'icofont-sale-discount ', 'icofont-satellite ', 'icofont-send-mail ', 'icofont-server ', 'icofont-settings-alt ', 'icofont-settings ', 'icofont-share-alt ', 'icofont-share-boxed ', 'icofont-share ', 'icofont-shield ', 'icofont-shopping-cart ', 'icofont-sign-in ', 'icofont-sign-out ', 'icofont-signal ', 'icofont-site-map ', 'icofont-smart-phone ', 'icofont-soccer ', 'icofont-sort-alt ', 'icofont-sort ', 'icofont-space ', 'icofont-spanner ', 'icofont-speech-comments ', 'icofont-speed-meter ', 'icofont-spinner-alt-1 ', 'icofont-spinner-alt-2 ', 'icofont-spinner-alt-3 ', 'icofont-spinner-alt-4 ', 'icofont-spinner-alt-5 ', 'icofont-spinner-alt-6 ', 'icofont-spinner ', 'icofont-spreadsheet ', 'icofont-square ', 'icofont-ssl-security ', 'icofont-star-alt-1 ', 'icofont-star-alt-2 ', 'icofont-star ', 'icofont-street-view ', 'icofont-support-faq ', 'icofont-tack-pin ', 'icofont-tag ', 'icofont-tags ', 'icofont-tasks-alt ', 'icofont-tasks ', 'icofont-telephone ', 'icofont-telescope ', 'icofont-terminal ', 'icofont-thumbs-down ', 'icofont-thumbs-up ', 'icofont-tick-boxed ', 'icofont-tick-mark ', 'icofont-ticket ', 'icofont-tie ', 'icofont-toggle-off ', 'icofont-toggle-on ', 'icofont-tools-alt-2 ', 'icofont-tools ', 'icofont-touch ', 'icofont-traffic-light ', 'icofont-transparent ', 'icofont-tree ', 'icofont-unique-idea ', 'icofont-unlock ', 'icofont-unlocked ', 'icofont-upload-alt ', 'icofont-upload ', 'icofont-usb-drive ', 'icofont-usb ', 'icofont-vector-path ', 'icofont-verification-check ', 'icofont-wall-clock ', 'icofont-wall ', 'icofont-wallet ', 'icofont-warning-alt ', 'icofont-warning ', 'icofont-water-drop ', 'icofont-web ', 'icofont-wheelchair ', 'icofont-wifi-alt ', 'icofont-wifi ', 'icofont-world ', 'icofont-zigzag ', 'icofont-zipped ', 'icofont-xs ', 'icofont-sm ', 'icofont-md ', 'icofont-lg ', 'icofont-1x ', 'icofont-2x ', 'icofont-3x ', 'icofont-4x ', 'icofont-5x ', 'icofont-6x ', 'icofont-7x ', 'icofont-8x ', 'icofont-9x ', 'icofont-10x ', 'icofont-fw ', 'icofont-ul ', 'icofont-border ', 'icofont-spin ', 'icofont-pulse'];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (iconfontClasses);

/***/ }),

/***/ "./src/components/icon-picker/index.js":
/*!*********************************************!*\
  !*** ./src/components/icon-picker/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/link.js");
/* harmony import */ var _fontawesome_classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fontawesome-classes */ "./src/components/icon-picker/fontawesome-classes.js");
/* harmony import */ var _iconfont_classes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./iconfont-classes */ "./src/components/icon-picker/iconfont-classes.js");
/* harmony import */ var _bootstrap_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bootstrap-icons */ "./src/components/icon-picker/bootstrap-icons.js");
const {
  Component,
  RawHTML
} = wp.element;








class PGIconPicker extends Component {
  render() {
    var {
      library,
      srcType,
      iconSrc,
      onChange
    } = this.props;

    function MyFunction() {
      const [iconsArr, setIconsArr] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(_fontawesome_classes__WEBPACK_IMPORTED_MODULE_2__["default"]);
      const [pickerOpen, setPickerOpen] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
      const [iconData, setIconData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)({
        keyword: '',
        library: library,
        filtered: []
      });
      const [filteredIcons, setFilteredIcons] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
      (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
        //console.log('value updated: ' + iconData.library);
        if (iconData.library == 'fontAwesome') {
          setIconsArr(_fontawesome_classes__WEBPACK_IMPORTED_MODULE_2__["default"]);
        }

        if (iconData.library == 'iconFont') {
          setIconsArr(_iconfont_classes__WEBPACK_IMPORTED_MODULE_3__["default"]);
        }

        if (iconData.library == 'bootstrap') {
          setIconsArr(_bootstrap_icons__WEBPACK_IMPORTED_MODULE_4__["default"]);
        }
      }, [iconData]);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "relative"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "border border-gray-500",
        onClick: ev => {
          setPickerOpen(prev => !prev);
        }
      }, iconSrc.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Button, {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_5__["default"]
      }), iconSrc.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "w-8 h-8 text-lg border cursor-pointer hover:bg-gray-200 border-gray-500 text-center"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
        className: iconSrc
      }))), pickerOpen && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.Popover, {
        position: "bottom right"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "w-72 p-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.SelectControl, {
        label: "",
        value: iconData.library,
        options: [{
          label: 'Choose Library',
          value: ''
        }, {
          label: 'Font Awesome',
          value: 'fontAwesome'
        }, {
          label: 'IconFont',
          value: 'iconFont'
        }, {
          label: 'Bootstrap Icons',
          value: 'bootstrap'
        } // { label: 'Material', value: 'material' },
        ],
        onChange: newVal => {
          setIconData({ ...iconData,
            library: newVal
          });
          onChange({
            iconSrc: iconSrc,
            library: newVal,
            srcType: srcType
          });
        }
      }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_0__.__experimentalInputControl, {
        placeholder: "Search for icons",
        value: iconData.keyword,
        onChange: newVal => {
          setIconData({ ...iconData,
            keyword: newVal
          });
          setFilteredIcons([]);
          var icons = [];
          iconsArr.map(icon => {
            if (icon.indexOf(newVal) > 0) {
              icons.push(icon);
            }
          });
          setFilteredIcons(icons);
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, iconData.keyword.length == 0 && iconsArr.map(icon => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          onClick: ev => {
            onChange({
              iconSrc: icon,
              library: library,
              srcType: srcType
            });
          },
          className: "m-1 text-lg w-10 text-center cursor-pointer hover:bg-slate-400 p-2 inline-block"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: icon
        }));
      }), iconData.keyword.length > 0 && filteredIcons.map(icon => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
          onClick: ev => {
            onChange({
              iconSrc: icon,
              library: library,
              srcType: srcType
            });
          },
          className: "m-1 text-lg w-10 text-center cursor-pointer hover:bg-slate-400 p-2 inline-block"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: icon
        }));
      }), filteredIcons.length == 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
        className: "text-center p-2 text-red-500 "
      }, "No icons found.")))));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)(MyFunction, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGIconPicker);

/***/ }),

/***/ "./src/components/icon-toggle/index.js":
/*!*********************************************!*\
  !*** ./src/components/icon-toggle/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;


class IconToggle extends Component {
  render() {
    const {
      position,
      variant,
      iconList,
      //[{"label":"Select..","icon":"","value":""}]
      buttonTitle,
      onChange,
      activeIcon,
      value
    } = this.props;
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, {
      position: position,
      renderToggle: _ref => {
        let {
          isOpen,
          onToggle
        } = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "border border-solid border-gray-400 p-1 px-2 cursor-pointer",
          title: buttonTitle,
          variant: variant,
          onClick: onToggle,
          "aria-expanded": isOpen
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, {
          className: "text-sm "
        }, activeIcon));
      },
      renderContent: () => (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: ""
      }, iconList.map((x, index) => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: ' text-lg px-2 font-bold border-b inline-block hover:bg-blue-400 hover:text-white cursor-pointer',
          onClick: ev => {
            onChange(x, index);
          }
        }, !x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          class: "icon-close"
        })), x.value && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(RawHTML, null, x.icon));
      }))
    }));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconToggle);

/***/ }),

/***/ "./src/components/input-select/index.js":
/*!**********************************************!*\
  !*** ./src/components/input-select/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component
} = wp.element;




class PGinputSelect extends Component {
  render() {
    var {
      val,
      options,
      multiple,
      onChange
    } = this.props;

    function Html() {
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "w-full"
      }, multiple == true && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("select", {
        className: "w-full",
        multiple: true,
        onChange: event => {
          var options = event.target.options;
          var selected = [];

          for (var i = 0, l = options.length; i < l; i++) {
            if (options[i].selected) {
              selected.push(options[i].value);
            }
          }

          onChange(selected);
        }
      }, options.map(x => {
        var isSelected = val.includes(x.value);
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
          value: x.value,
          selected: isSelected
        }, x.label);
      }))), multiple == false && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("select", {
        onChange: event => {
          var currentVal = options[event.target.options.selectedIndex].value;
          onChange(currentVal);
        }
      }, options.map(x => {
        var selected = val.includes(x.value);
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("option", {
          value: x.value,
          selected: selected
        }, x.label);
      }))));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGinputSelect);

/***/ }),

/***/ "./src/components/mail-subscribe/index.js":
/*!************************************************!*\
  !*** ./src/components/mail-subscribe/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);

const {
  Component,
  RawHTML
} = wp.element;






class PGMailSubsctibe extends Component {
  render() {
    var {// library,
      // srcType,
    } = this.props;

    function SubscribeForm() {
      const [emailSubscribe, setEmailSubscribe] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({
        email: '',
        status: null,
        loading: false
      });
      const [hasSubscribed, setHasSubscribed] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
      const [PostGridPluginData, setPostGridPluginData] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(window.PostGridPluginData);
      (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
          path: '/post-grid/v2/get_site_details',
          method: 'POST',
          data: {}
        }).then(res => {
          ////console.log(res);
          setEmailSubscribe({ ...emailSubscribe,
            email: res.email,
            status: res.subscribe_status
          });
          var hasSubscribed = res.subscribe_status == 'subscribed' ? true : false;
          setPostGridPluginData({ ...PostGridPluginData,
            hasSubscribed: hasSubscribed
          });
        });
      }, []);
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "grid grid-cols-2 gap-2 mb-5"
      }, hasSubscribed && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "col-span-2 bg-green-700 text-white py-2 px-2 my-2"
      }, "Thanks for subscribe!"), PostGridPluginData.hasSubscribed == false && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "col-span-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        value: emailSubscribe.email,
        className: "!py-2 rounded-none",
        onChange: newVal => {//setEmailSubscribe({ ...emailSubscribe, email: newVal });
        }
      })), emailSubscribe.loading && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Spinner, null), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "col-span-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "px-3 py-2 text-center bg-lime-700 text-white cursor-pointer",
        onClick: ev => {
          setEmailSubscribe({ ...emailSubscribe,
            loading: true
          });
          _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
            path: '/post-grid/v2/email_subscribe',
            method: 'POST',
            data: {
              email: emailSubscribe.email
            }
          }).then(res => {
            ////console.log(res);
            setEmailSubscribe({ ...emailSubscribe,
              loading: false,
              status: res.subscribe_status
            });
            setHasSubscribed(true);
            setPostGridPluginData({ ...PostGridPluginData,
              hasSubscribed: true
            });
            setTimeout(() => {
              setHasSubscribed(false);
            }, 3000);
          });
        }
      }, "Subscribe to News")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "col-span-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "px-3 py-2 text-center bg-gray-700 text-white cursor-pointer",
        onClick: ev => {
          setEmailSubscribe({ ...emailSubscribe,
            loading: true
          });
          _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default()({
            path: '/post-grid/v2/email_subscribe',
            method: 'POST',
            data: {
              interested: false
            }
          }).then(res => {
            ////console.log(res);
            setEmailSubscribe({ ...emailSubscribe,
              loading: false,
              status: res.subscribe_status
            });
          });
        }
      }, "No Interested"))));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(SubscribeForm, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGMailSubsctibe);

/***/ }),

/***/ "./src/components/pro-wrapper/index.js":
/*!*********************************************!*\
  !*** ./src/components/pro-wrapper/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML,
  useState,
  useEffect
} = wp.element;



class PGproWrapper extends Component {
  render() {
    const {
      utmUrl,
      initialOpen,
      befroeTitle,
      children
    } = this.props;

    function Html() {
      const [postGridData, setPostGridData] = useState(window.PostGridPluginData);
      useEffect(() => {
        setPostGridData(window.PostGridPluginData);
      }, [window.PostGridPluginData]);

      if (postGridData != null && postGridData.license_status != 'active') {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "proWrapper my-5"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "proInfo "
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "bg-amber-400 px-3 py-2 "
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
          className: "text-lg text-white hover:text-white font-bold flex justify-between",
          target: "_blank",
          href: postGridData.proUrl + utmUrl
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          className: " underline"
        }, "Pre Order"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          className: " "
        }, "Grab 25% Off")))), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "proInner  bg-amber-100 p-2"
        }, children));
      } else {
        return '';
      }
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGproWrapper);

/***/ }),

/***/ "./src/components/styles/index.js":
/*!****************************************!*\
  !*** ./src/components/styles/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _components_dropdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/dropdown */ "./src/components/dropdown/index.js");
/* harmony import */ var _components_breakpoint_toggle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../components/breakpoint-toggle */ "./src/components/breakpoint-toggle/index.js");
/* harmony import */ var _components_css_align_content__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../components/css-align-content */ "./src/components/css-align-content/index.js");
/* harmony import */ var _components_css_align_items__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../components/css-align-items */ "./src/components/css-align-items/index.js");
/* harmony import */ var _components_css_align_self__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/css-align-self */ "./src/components/css-align-self/index.js");
/* harmony import */ var _components_css_backface_visibility__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/css-backface-visibility */ "./src/components/css-backface-visibility/index.js");
/* harmony import */ var _components_css_background_attachment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/css-background-attachment */ "./src/components/css-background-attachment/index.js");
/* harmony import */ var _components_css_background_blend_mode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/css-background-blend-mode */ "./src/components/css-background-blend-mode/index.js");
/* harmony import */ var _components_css_background_clip__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../components/css-background-clip */ "./src/components/css-background-clip/index.js");
/* harmony import */ var _components_css_background_color__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/css-background-color */ "./src/components/css-background-color/index.js");
/* harmony import */ var _components_css_background_origin__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/css-background-origin */ "./src/components/css-background-origin/index.js");
/* harmony import */ var _components_css_background_position__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/css-background-position */ "./src/components/css-background-position/index.js");
/* harmony import */ var _components_css_background_repeat__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/css-background-repeat */ "./src/components/css-background-repeat/index.js");
/* harmony import */ var _components_css_background_size__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../components/css-background-size */ "./src/components/css-background-size/index.js");
/* harmony import */ var _components_css_border_radius__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../components/css-border-radius */ "./src/components/css-border-radius/index.js");
/* harmony import */ var _components_css_bottom__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../components/css-bottom */ "./src/components/css-bottom/index.js");
/* harmony import */ var _components_css_box_sizing__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../components/css-box-sizing */ "./src/components/css-box-sizing/index.js");
/* harmony import */ var _components_css_clear__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../components/css-clear */ "./src/components/css-clear/index.js");
/* harmony import */ var _components_css_color__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../components/css-color */ "./src/components/css-color/index.js");
/* harmony import */ var _components_css_display__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../components/css-display */ "./src/components/css-display/index.js");
/* harmony import */ var _components_css_filter__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../components/css-filter */ "./src/components/css-filter/index.js");
/* harmony import */ var _components_css_float__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../components/css-float */ "./src/components/css-float/index.js");
/* harmony import */ var _components_css_font_size__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../components/css-font-size */ "./src/components/css-font-size/index.js");
/* harmony import */ var _components_css_font_stretch__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../components/css-font-stretch */ "./src/components/css-font-stretch/index.js");
/* harmony import */ var _components_css_font_style__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../components/css-font-style */ "./src/components/css-font-style/index.js");
/* harmony import */ var _components_css_font_weight__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../components/css-font-weight */ "./src/components/css-font-weight/index.js");
/* harmony import */ var _components_css_height__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../../components/css-height */ "./src/components/css-height/index.js");
/* harmony import */ var _components_css_left__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../../components/css-left */ "./src/components/css-left/index.js");
/* harmony import */ var _components_css_letter_spacing__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../components/css-letter-spacing */ "./src/components/css-letter-spacing/index.js");
/* harmony import */ var _components_css_line_height__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../../components/css-line-height */ "./src/components/css-line-height/index.js");
/* harmony import */ var _components_css_margin__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../../components/css-margin */ "./src/components/css-margin/index.js");
/* harmony import */ var _components_css_object_fit__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../../components/css-object-fit */ "./src/components/css-object-fit/index.js");
/* harmony import */ var _components_css_opacity__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../../components/css-opacity */ "./src/components/css-opacity/index.js");
/* harmony import */ var _components_css_outline__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../../components/css-outline */ "./src/components/css-outline/index.js");
/* harmony import */ var _components_css_outline_offset__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../../components/css-outline-offset */ "./src/components/css-outline-offset/index.js");
/* harmony import */ var _components_css_overflow__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../../components/css-overflow */ "./src/components/css-overflow/index.js");
/* harmony import */ var _components_css_overflow_x__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../../components/css-overflow-x */ "./src/components/css-overflow-x/index.js");
/* harmony import */ var _components_css_overflow_y__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../../components/css-overflow-y */ "./src/components/css-overflow-y/index.js");
/* harmony import */ var _components_css_padding__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../../components/css-padding */ "./src/components/css-padding/index.js");
/* harmony import */ var _components_css_position__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../../components/css-position */ "./src/components/css-position/index.js");
/* harmony import */ var _components_css_right__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../../components/css-right */ "./src/components/css-right/index.js");
/* harmony import */ var _components_css_text_align__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../../components/css-text-align */ "./src/components/css-text-align/index.js");
/* harmony import */ var _components_css_text_decoration__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../../components/css-text-decoration */ "./src/components/css-text-decoration/index.js");
/* harmony import */ var _components_css_text_indent__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../../components/css-text-indent */ "./src/components/css-text-indent/index.js");
/* harmony import */ var _components_css_text_justify__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../../components/css-text-justify */ "./src/components/css-text-justify/index.js");
/* harmony import */ var _components_css_text_shadow__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../../components/css-text-shadow */ "./src/components/css-text-shadow/index.js");
/* harmony import */ var _components_css_text_transform__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../../components/css-text-transform */ "./src/components/css-text-transform/index.js");
/* harmony import */ var _components_css_top__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../../components/css-top */ "./src/components/css-top/index.js");
/* harmony import */ var _components_css_vertical_align__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../../components/css-vertical-align */ "./src/components/css-vertical-align/index.js");
/* harmony import */ var _components_css_visibility__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../../components/css-visibility */ "./src/components/css-visibility/index.js");
/* harmony import */ var _components_css_width__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../../components/css-width */ "./src/components/css-width/index.js");
/* harmony import */ var _components_css_word_break__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../../components/css-word-break */ "./src/components/css-word-break/index.js");
/* harmony import */ var _components_css_word_spacing__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../../components/css-word-spacing */ "./src/components/css-word-spacing/index.js");
/* harmony import */ var _components_css_z_index__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../../components/css-z-index */ "./src/components/css-z-index/index.js");
/* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../../breakpoints */ "./src/breakpoints.js");
/* harmony import */ var _components_icon_toggle__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../../components/icon-toggle */ "./src/components/icon-toggle/index.js");

const {
  Component,
  RawHTML
} = wp.element;















 // import PGcssBackgroundImage from '../../components/css-background-image'




 // import PGcssBorder from '../../components/css-border'


 // import PGcssBoxShadow from '../../components/css-box-shadow'


 // import PGcssClip from '../../components/css-clip'
// import PGcssClipPath from '../../components/css-clip-path'

 // import PGcssCursor from '../../components/css-cursor'
// import PGcssDirection from '../../components/css-direction'



 // import PGcssFontFamily from '../../components/css-font-family'








 // import PGcssListStyle from '../../components/css-list-style'















 // import PGcssTextOverflow from '../../components/css-text-overflow'



 // import PGcssTransform from '../../components/css-transform'
// import PGcssTransition from '../../components/css-transition'







var myStore = wp.data.select('postgrid-shop');



class PGStyles extends Component {
  render() {
    var {
      obj,
      onChange,
      onAdd,
      onRemove
    } = this.props;

    function Html() {
      var sudoScourceArgs = [{
        label: 'Select..',
        value: ''
      }, {
        label: 'Idle',
        value: 'styles'
      }, {
        label: 'Hover',
        value: 'hover'
      }, {
        label: 'Typo',
        value: 'typo'
      }, {
        label: 'After',
        value: 'after'
      }, {
        label: 'Before',
        value: 'before'
      }, {
        label: 'First-child',
        value: 'first-child'
      }, {
        label: 'Last-child',
        value: 'last-child'
      }, {
        label: 'Visited',
        value: 'visited'
      }, {
        label: 'Selection',
        value: 'selection'
      }, {
        label: 'First-letter',
        value: 'first-letter'
      }, {
        label: 'First-line',
        value: 'first-line'
      }];
      const [sudoScources, setSudoScources] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
      const [sudoScource, setSudoScource] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('styles');
      const [styles, setStyles] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
      const [cssAtts, setcssAtts] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)({});
      const [breakPointX, setBreakPointX] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(myStore.getBreakPoint());
      var cssProps = {
        alignContent: {
          id: 'alignContent',
          label: 'Align Content'
        },
        alignItems: {
          id: 'alignItems',
          label: 'Align Items'
        },
        alignSelf: {
          id: 'alignSelf',
          label: 'Align Self'
        },
        backfaceVisibility: {
          id: 'backfaceVisibility',
          label: 'Backface Visibility'
        },
        background: {
          id: 'background',
          label: 'Background'
        },
        backgroundAttachment: {
          id: 'backgroundAttachment',
          label: 'Background Attachment'
        },
        backgroundBlendMode: {
          id: 'backgroundBlendMode',
          label: 'Background Blend Mode'
        },
        backgroundClip: {
          id: 'backgroundClip',
          label: 'Background Clip'
        },
        backgroundColor: {
          id: 'backgroundColor',
          label: 'BackgroundColor'
        },
        backgroundImage: {
          id: 'backgroundImage',
          label: 'Background Image'
        },
        backgroundOrigin: {
          id: 'backgroundOrigin',
          label: 'Background Origin'
        },
        backgroundRepeat: {
          id: 'backgroundRepeat',
          label: 'Background Repeat'
        },
        backgroundPosition: {
          id: 'backgroundPosition',
          label: 'Background Position'
        },
        backgroundSize: {
          id: 'backgroundSize',
          label: 'Background Size'
        },
        border: {
          id: 'border',
          label: 'Border'
        },
        borderCollapse: {
          id: 'borderCollapse',
          label: 'Border Collapse'
        },
        borderImage: {
          id: 'borderImage',
          label: 'Border Image'
        },
        borderRadius: {
          id: 'borderRadius',
          label: 'Border Radius'
        },
        borderSpacing: {
          id: 'borderSpacing',
          label: 'Border Spacing'
        },
        bottom: {
          id: 'bottom',
          label: 'Bottom'
        },
        boxShadow: {
          id: 'boxShadow',
          label: 'Box Shadow'
        },
        boxSizing: {
          id: 'boxSizing',
          label: 'Box Sizing'
        },
        clear: {
          id: 'clear',
          label: 'Clear'
        },
        clip: {
          id: 'clip',
          label: 'Clip'
        },
        clipPath: {
          id: 'clipPath',
          label: 'Clip Path'
        },
        color: {
          id: 'color',
          label: 'Color'
        },
        columnCount: {
          id: 'columnCount',
          label: 'Column Count'
        },
        content: {
          id: 'content',
          label: 'Content'
        },
        cursor: {
          id: 'cursor',
          label: 'Cursor'
        },
        display: {
          id: 'display',
          label: 'Display'
        },
        direction: {
          id: 'direction',
          label: 'Direction'
        },
        float: {
          id: 'float',
          label: 'Float'
        },
        filter: {
          id: 'filter',
          label: 'Filter'
        },
        fontSize: {
          id: 'fontSize',
          label: 'Font Size'
        },
        fontFamily: {
          id: 'fontFamily',
          label: 'Font Family'
        },
        fontStretch: {
          id: 'fontStretch',
          label: 'Font Stretch'
        },
        fontStyle: {
          id: 'fontStyle',
          label: 'Font Style'
        },
        fontVariantCaps: {
          id: 'fontVariantCaps',
          label: 'Font VariantCaps'
        },
        fontWeight: {
          id: 'fontWeight',
          label: 'Font Weight'
        },
        height: {
          id: 'height',
          label: 'Height'
        },
        left: {
          id: 'left',
          label: 'Left'
        },
        letterSpacing: {
          id: 'letterSpacing',
          label: 'Letter Spacing'
        },
        lineHeight: {
          id: 'lineHeight',
          label: 'Line Height'
        },
        listStyle: {
          id: 'listStyle',
          label: 'ListStyle'
        },
        margin: {
          id: 'margin',
          label: 'Margin'
        },
        maxHeight: {
          id: 'maxHeight',
          label: 'Max Height'
        },
        maxWidth: {
          id: 'maxWidth',
          label: 'Max Width'
        },
        minHeight: {
          id: 'minHeight',
          label: 'Min Height'
        },
        minWidth: {
          id: 'minWidth',
          label: 'Min Width'
        },
        opacity: {
          id: 'opacity',
          label: 'Opacity'
        },
        outline: {
          id: 'outline',
          label: 'Outline'
        },
        overflow: {
          id: 'overflow',
          label: 'Overflow'
        },
        overflowX: {
          id: 'overflowX',
          label: 'OverflowX'
        },
        overflowY: {
          id: 'overflowY',
          label: 'OverflowY'
        },
        padding: {
          id: 'padding',
          label: 'Padding'
        },
        perspective: {
          id: 'perspective',
          label: 'Perspective'
        },
        position: {
          id: 'position',
          label: 'Position'
        },
        right: {
          id: 'right',
          label: 'Right'
        },
        textAlign: {
          id: 'textAlign',
          label: 'Text Align'
        },
        top: {
          id: 'top',
          label: 'Top'
        },
        transform: {
          id: 'transform',
          label: 'Transform'
        },
        transition: {
          id: 'transition',
          label: 'Transition'
        },
        verticalAlign: {
          id: 'verticalAlign',
          label: 'Vertical Align'
        },
        visibility: {
          id: 'visibility',
          label: 'Visibility'
        },
        width: {
          id: 'width',
          label: 'Width'
        },
        zIndex: {
          id: 'zIndex',
          label: 'Z-Index'
        },
        textDecoration: {
          id: 'textDecoration',
          label: 'Text Decoration'
        },
        textIndent: {
          id: 'textIndent',
          label: 'Text Indent'
        },
        textJustify: {
          id: 'textJustify',
          label: 'Text Indent'
        },
        textOverflow: {
          id: 'textOverflow',
          label: 'Text Overflow'
        },
        textShadow: {
          id: 'textShadow',
          label: 'Text Shadow'
        },
        textTransform: {
          id: 'textTransform',
          label: 'Text Transform'
        },
        wordBreak: {
          id: 'wordBreak',
          label: 'Word Break'
        },
        wordSpacing: {
          id: 'wordSpacing',
          label: 'Word Spacing'
        },
        wordWrap: {
          id: 'wordWrap',
          label: 'Word Wrap'
        },
        writingMode: {
          id: 'writingMode',
          label: 'Writing Mode'
        }
      };
      (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        sudoScourceArgs.map(sudo => {
          if (obj[sudo.value] != undefined) {
            sudoScources.push(sudo);
          }
        });
      }, [obj]);
      (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        setcssAtts(obj[sudoScource]);
      }, [sudoScource]);

      function setCssAttr(option, index) {
        //console.log(option);
        //console.log(cssAtts);
        if (cssAtts[option.id] == undefined) {
          cssAtts[option.id] = {};
        } //console.log(cssAtts);


        onAdd(sudoScource, option.id);
      }

      function onChangeCssVal(newVal, attr) {
        //console.log(newVal);
        onChange(sudoScource, newVal, attr);
      }

      const {
        __experimentalSetPreviewDeviceType: setPreviewDeviceType
      } = wp.data.dispatch('core/edit-post');
      var breakPointList = [];

      for (var x in _breakpoints__WEBPACK_IMPORTED_MODULE_57__["default"]) {
        var item = _breakpoints__WEBPACK_IMPORTED_MODULE_57__["default"][x];
        breakPointList.push({
          label: item.name,
          icon: item.icon,
          value: item.id
        });
      }

      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelBody, {
        className: "my-5",
        title: "Style",
        initialOpen: true
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Style Source"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.SelectControl, {
        label: "",
        value: sudoScource,
        options: sudoScources,
        onChange: newVal => {
          setSudoScource(newVal);
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, "Add Style"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_dropdown__WEBPACK_IMPORTED_MODULE_3__["default"], {
        position: "bottom right",
        variant: "secondary",
        options: cssProps,
        buttonTitle: "Choose",
        onChange: setCssAttr,
        values: ""
      })), JSON.stringify(cssAtts), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, Object.entries(cssAtts).map(_ref => {
        let [key, value] = _ref;
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "border-b-2 border-solid py-4 hover:border-gray-600 border-t-2 hover:border-t-2 hover:border-b-2 border-t-transparent",
          key: key
        }, JSON.stringify(value), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, {
          className: ""
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", null, cssProps[key] != undefined ? cssProps[key].label : key), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "inline-block bg-blue-500 text-white"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_icon_toggle__WEBPACK_IMPORTED_MODULE_58__["default"], {
          position: "bottom",
          variant: "secondary",
          iconList: breakPointList,
          buttonTitle: "Break Point Switch",
          onChange: (x, index) => {
            setPreviewDeviceType(x.value);
            var asdsdsd = wp.data.dispatch('postgrid-shop').setBreakPoint(x.value);
            asdsdsd.then(res => {
              setBreakPointX(res.breakpoint);
            });
          },
          activeIcon: _breakpoints__WEBPACK_IMPORTED_MODULE_57__["default"][breakPointX].icon,
          value: breakPointX
        })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
          className: "hover:bg-red-500 bg-red-400 text-white m-1 inline-block p-1 cursor-pointer",
          onClick: ev => {
            onRemove(sudoScource, key);
          }
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          class: "dashicons dashicons-no-alt"
        })))), key == 'alignContent' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_align_content__WEBPACK_IMPORTED_MODULE_5__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'alignItems' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_align_items__WEBPACK_IMPORTED_MODULE_6__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'alignSelf' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_align_self__WEBPACK_IMPORTED_MODULE_7__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'backfaceVisibility' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_backface_visibility__WEBPACK_IMPORTED_MODULE_8__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'backgroundAttachment' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_background_attachment__WEBPACK_IMPORTED_MODULE_9__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'backgroundBlendMode' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_background_blend_mode__WEBPACK_IMPORTED_MODULE_10__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'backgroundClip' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_background_clip__WEBPACK_IMPORTED_MODULE_11__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'bgColor' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_background_color__WEBPACK_IMPORTED_MODULE_12__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'backgroundOrigin' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_background_origin__WEBPACK_IMPORTED_MODULE_13__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'backgroundRepeat' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_background_repeat__WEBPACK_IMPORTED_MODULE_15__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'backgroundSize' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_background_size__WEBPACK_IMPORTED_MODULE_16__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'backgroundPosition' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_background_position__WEBPACK_IMPORTED_MODULE_14__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'borderRadius' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_border_radius__WEBPACK_IMPORTED_MODULE_17__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'bottom' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_bottom__WEBPACK_IMPORTED_MODULE_18__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'top' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_top__WEBPACK_IMPORTED_MODULE_50__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'left' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_left__WEBPACK_IMPORTED_MODULE_30__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'right' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_right__WEBPACK_IMPORTED_MODULE_43__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'boxSizing' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_box_sizing__WEBPACK_IMPORTED_MODULE_19__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'clear' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_clear__WEBPACK_IMPORTED_MODULE_20__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'color' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_color__WEBPACK_IMPORTED_MODULE_21__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'filter' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_filter__WEBPACK_IMPORTED_MODULE_23__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'float' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_float__WEBPACK_IMPORTED_MODULE_24__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'fontSize' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_font_size__WEBPACK_IMPORTED_MODULE_25__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'fontStyle' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_font_style__WEBPACK_IMPORTED_MODULE_27__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'fontStretch' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_font_stretch__WEBPACK_IMPORTED_MODULE_26__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'fontWeight' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_font_weight__WEBPACK_IMPORTED_MODULE_28__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'letterSpacing' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_letter_spacing__WEBPACK_IMPORTED_MODULE_31__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'lineHeight' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_line_height__WEBPACK_IMPORTED_MODULE_32__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'objectFit' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_object_fit__WEBPACK_IMPORTED_MODULE_34__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'opacity' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_opacity__WEBPACK_IMPORTED_MODULE_35__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'outline' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_outline__WEBPACK_IMPORTED_MODULE_36__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'outlineOffset' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_outline_offset__WEBPACK_IMPORTED_MODULE_37__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'position' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_position__WEBPACK_IMPORTED_MODULE_42__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'textIndent' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_text_indent__WEBPACK_IMPORTED_MODULE_46__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'textJustify' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_text_justify__WEBPACK_IMPORTED_MODULE_47__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'textTransform' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_text_transform__WEBPACK_IMPORTED_MODULE_49__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'textDecoration' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_text_decoration__WEBPACK_IMPORTED_MODULE_45__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'textShadow' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_text_shadow__WEBPACK_IMPORTED_MODULE_48__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'textAlign' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_text_align__WEBPACK_IMPORTED_MODULE_44__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'visibility' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_visibility__WEBPACK_IMPORTED_MODULE_52__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'wordBreak' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_word_break__WEBPACK_IMPORTED_MODULE_54__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'wordSpacing' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_word_spacing__WEBPACK_IMPORTED_MODULE_55__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'zIndex' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_z_index__WEBPACK_IMPORTED_MODULE_56__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'padding' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_padding__WEBPACK_IMPORTED_MODULE_41__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'margin' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_margin__WEBPACK_IMPORTED_MODULE_33__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'display' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_display__WEBPACK_IMPORTED_MODULE_22__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'width' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_width__WEBPACK_IMPORTED_MODULE_53__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'height' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_height__WEBPACK_IMPORTED_MODULE_29__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'verticalAlign' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_vertical_align__WEBPACK_IMPORTED_MODULE_51__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'overflow' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_overflow__WEBPACK_IMPORTED_MODULE_38__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'overflowX' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_overflow_x__WEBPACK_IMPORTED_MODULE_39__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }), key == 'overflowY' && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_components_css_overflow_y__WEBPACK_IMPORTED_MODULE_40__["default"], {
          val: value[breakPointX],
          onChange: onChangeCssVal
        }));
      }))));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null);
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGStyles);

/***/ }),

/***/ "./src/components/toggle/index.js":
/*!****************************************!*\
  !*** ./src/components/toggle/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/icon/index.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/chevron-down.js");
/* harmony import */ var _wordpress_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wordpress/icons */ "./node_modules/@wordpress/icons/build-module/library/chevron-up.js");

const {
  Component,
  RawHTML,
  useState
} = wp.element;



class PGtoggle extends Component {
  render() {
    const {
      title,
      initialOpen,
      befroeTitle,
      children
    } = this.props;

    function MyFunction() {
      const [isOpen, setIsOpen] = useState(initialOpen);
      var icon = ''; // useEffect(() => {
      // }, [keyword]);
      //console.log(isOpen);

      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "toggleWrapper"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "toggleHeader border-b border-solid hover:bg-gray-200 px-2 py-3 flex justify-between"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "flex"
      }, befroeTitle, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
        className: "cursor-pointer px-2",
        onClick: ev => {
          setIsOpen(!isOpen);
        }
      }, title)), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, isOpen ? (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_3__["default"]
      }) : (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_icons__WEBPACK_IMPORTED_MODULE_2__["default"], {
        icon: _wordpress_icons__WEBPACK_IMPORTED_MODULE_4__["default"]
      }))), isOpen && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "toggleContent py-3"
      }, children));
    }

    var args = [{
      "label": "Select..",
      "value": ""
    }, {
      "label": "None",
      "value": "none"
    }, {
      "label": "Inline",
      "value": "inline"
    }, {
      "label": "Inline Block",
      "value": "inline-block"
    }];
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(MyFunction, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGtoggle);

/***/ }),

/***/ "./src/components/tutorials/index.js":
/*!*******************************************!*\
  !*** ./src/components/tutorials/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;





class PGTutorials extends Component {
  render() {
    var {
      links
    } = this.props;

    function Html(props) {
      const [filteredLinks, setfilteredLinks] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
      const [keyword, setKeyword] = (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)('');
      return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-2"
      }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
        type: "text",
        className: "w-full rounded-none px-3 py-2",
        placeholder: "Search Tutorials",
        value: keyword,
        onChange: newVal => {
          setKeyword(newVal);
          setfilteredLinks([]);
          var newLinks = [];
          var xLink = links.map((x, index) => {
            var linkObj = {};
            let position = x.label.toLowerCase().search(newVal.toLowerCase());

            if (position < 0) {
              linkObj.exclude = true;
            } else {
              linkObj.exclude = false;
            }

            if (newVal.length > 0) {
              let label = x.label.replace(newVal, "<span class='bg-amber-500'>" + newVal + "</span>");
              linkObj.label = label;
            } else {
              linkObj.label = x.label;
            }

            linkObj = { ...x,
              exclude: linkObj.exclude,
              label: linkObj.label
            };
            return linkObj; //newLinks.push(x);
          }); ////console.log(xLink);

          setfilteredLinks(xLink);
        }
      })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
        className: "my-5"
      }, keyword.length == 0 && links.map(link => {
        return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, link.url.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
          className: "block my-1 text-[14px] hover:underline",
          href: link.url,
          target: "_blank"
        }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
          class: "dashicons dashicons-editor-help"
        }), " ", link.label));
      }), keyword.length > 0 && filteredLinks.map(link => {
        if (link.exclude === false) {
          return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, link.url.length > 0 && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", {
            className: "block my-1 text-[14px] hover:underline",
            href: link.url,
            target: "_blank"
          }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
            class: "dashicons dashicons-editor-help"
          }), " ", link.label));
        }
      })));
    }

    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(Html, null));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PGTutorials);

/***/ }),

/***/ "./src/components/typography/index.js":
/*!********************************************!*\
  !*** ./src/components/typography/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ "@wordpress/element");
/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/components */ "@wordpress/components");
/* harmony import */ var _wordpress_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__);

const {
  Component,
  RawHTML
} = wp.element;



class Typography extends Component {
  render() {
    var {
      typo,
      breakPointX,
      onChange,
      setAttributes,
      obj
    } = this.props;
    return (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, typo.fontFamily != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Font Family")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
      value: typo.fontFamily[breakPointX] != undefined ? typo.fontFamily[breakPointX] : '',
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(obj.styles.fontFamily).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = obj.styles.fontFamily;
          newValuesObj[breakPointX] = newVal;
        }

        var typoX = { ...obj.styles,
          fontFamily: newValuesObj
        };
        onChange(typoX);
      }
    })))), typo.fontSize != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Font Size")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
      type: "number",
      value: typo.fontSize[breakPointX] != undefined ? typo.fontSize[breakPointX].val : '',
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(obj.styles.fontSize).length == 0) {
          newValuesObj[breakPointX] = { ...obj.styles.fontSize[breakPointX],
            val: newVal
          };
        } else {
          newValuesObj = obj.styles.fontSize;
          newValuesObj[breakPointX] = { ...obj.styles.fontSize[breakPointX],
            val: newVal
          };
        }

        var typoX = { ...obj.styles,
          fontSize: newValuesObj
        };
        onChange(typoX);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.SelectControl, {
      label: "",
      value: typo.fontSize[breakPointX] != undefined ? typo.fontSize[breakPointX].unit : '',
      options: [{
        label: 'Select Unit',
        value: ''
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }, {
        label: 'ex',
        value: 'ex'
      }, {
        label: 'rem',
        value: 'rem'
      }, {
        label: 'vh',
        value: 'vh'
      }, {
        label: 'vw',
        value: 'vw'
      }, {
        label: 'pt',
        value: 'pt'
      }, {
        label: 'pc',
        value: 'pc'
      }, {
        label: 'ch',
        value: 'ch'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(obj.styles.fontSize).length == 0) {
          newValuesObj[breakPointX] = { ...obj.styles.fontSize[breakPointX],
            unit: newVal
          };
        } else {
          newValuesObj = obj.styles.fontSize;
          newValuesObj[breakPointX] = { ...obj.styles.fontSize[breakPointX],
            unit: newVal
          };
        }

        var typoX = { ...obj.styles,
          fontSize: newValuesObj
        };
        onChange(typoX);
      }
    }))), typo.lineHeight != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Line Height")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
      type: "number",
      value: typo.lineHeight[breakPointX] != undefined ? typo.lineHeight[breakPointX].val : '',
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(obj.styles.lineHeight).length == 0) {
          newValuesObj[breakPointX] = { ...obj.styles.lineHeight[breakPointX],
            val: newVal
          };
        } else {
          newValuesObj = obj.styles.lineHeight;
          newValuesObj[breakPointX] = { ...obj.styles.lineHeight[breakPointX],
            val: newVal
          };
        }

        var typoX = { ...obj.styles,
          lineHeight: newValuesObj
        };
        onChange(typoX);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.SelectControl, {
      label: "",
      value: typo.lineHeight[breakPointX] != undefined ? typo.lineHeight[breakPointX].unit : '',
      options: [{
        label: 'Select Unit',
        value: ''
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }, {
        label: 'ex',
        value: 'ex'
      }, {
        label: 'rem',
        value: 'rem'
      }, {
        label: 'vh',
        value: 'vh'
      }, {
        label: 'vw',
        value: 'vw'
      }, {
        label: 'pt',
        value: 'pt'
      }, {
        label: 'pc',
        value: 'pc'
      }, {
        label: 'ch',
        value: 'ch'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(obj.styles.lineHeight).length == 0) {
          newValuesObj[breakPointX] = { ...obj.styles.lineHeight[breakPointX],
            unit: newVal
          };
        } else {
          newValuesObj = obj.styles.lineHeight;
          newValuesObj[breakPointX] = { ...obj.styles.lineHeight[breakPointX],
            unit: newVal
          };
        }

        var typoX = { ...obj.styles,
          lineHeight: newValuesObj
        };
        onChange(typoX);
      }
    }))), typo.letterSpacing != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Letter Spacing")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.__experimentalInputControl, {
      type: "number",
      value: typo.letterSpacing[breakPointX] != undefined ? typo.letterSpacing[breakPointX].val : '',
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(obj.styles.letterSpacing).length == 0) {
          newValuesObj[breakPointX] = { ...obj.styles.letterSpacing[breakPointX],
            val: newVal
          };
        } else {
          newValuesObj = obj.styles.letterSpacing;
          newValuesObj[breakPointX] = { ...obj.styles.letterSpacing[breakPointX],
            val: newVal
          };
        }

        var typoX = { ...obj.styles,
          letterSpacing: newValuesObj
        };
        onChange(typoX);
      }
    }), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.SelectControl, {
      label: "",
      value: typo.letterSpacing[breakPointX] != undefined ? typo.letterSpacing[breakPointX].unit : '',
      options: [{
        label: 'Select Unit',
        value: ''
      }, {
        label: 'px',
        value: 'px'
      }, {
        label: '%',
        value: '%'
      }, {
        label: 'em',
        value: 'em'
      }, {
        label: 'ex',
        value: 'ex'
      }, {
        label: 'rem',
        value: 'rem'
      }, {
        label: 'vh',
        value: 'vh'
      }, {
        label: 'vw',
        value: 'vw'
      }, {
        label: 'pt',
        value: 'pt'
      }, {
        label: 'pc',
        value: 'pc'
      }, {
        label: 'ch',
        value: 'ch'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(obj.styles.letterSpacing).length == 0) {
          newValuesObj[breakPointX] = { ...obj.styles.letterSpacing[breakPointX],
            unit: newVal
          };
        } else {
          newValuesObj = obj.styles.letterSpacing;
          newValuesObj[breakPointX] = { ...obj.styles.letterSpacing[breakPointX],
            unit: newVal
          };
        }

        var typoX = { ...obj.styles,
          letterSpacing: newValuesObj
        };
        onChange(typoX);
      }
    }))), typo.fontWeight != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Font Weight"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.SelectControl, {
      label: "",
      value: typo.fontWeight[breakPointX] != undefined ? typo.fontWeight[breakPointX] : '',
      options: [{
        label: 'Select...',
        value: ''
      }, {
        label: 'bold',
        value: 'bold'
      }, {
        label: 'bolder',
        value: 'bolder'
      }, {
        label: 'lighter',
        value: 'lighter'
      }, {
        label: '100',
        value: '100'
      }, {
        label: '200',
        value: '200'
      }, {
        label: '300',
        value: '300'
      }, {
        label: '400',
        value: '400'
      }, {
        label: '500',
        value: '500'
      }, {
        label: '600',
        value: '600'
      }, {
        label: '700',
        value: '700'
      }, {
        label: '800',
        value: '800'
      }, {
        label: '900',
        value: '900'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(obj.styles.fontWeight).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = obj.styles.fontWeight;
          newValuesObj[breakPointX] = newVal;
        }

        var typoX = { ...obj.styles,
          fontWeight: newValuesObj
        };
        onChange(typoX);
      }
    }))), typo.textTransform != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Text Transform"), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.SelectControl, {
      label: "",
      value: typo.textTransform[breakPointX] != undefined ? typo.textTransform[breakPointX] : '',
      options: [{
        label: 'Select...',
        value: ''
      }, {
        label: 'Uppercase',
        value: 'uppercase'
      }, {
        label: 'Lowercase',
        value: 'lowercase'
      }, {
        label: 'Capitalize',
        value: 'capitalize'
      }],
      onChange: newVal => {
        var newValuesObj = {};

        if (Object.keys(obj.styles.textTransform).length == 0) {
          newValuesObj[breakPointX] = newVal;
        } else {
          newValuesObj = obj.styles.textTransform;
          newValuesObj[breakPointX] = newVal;
        }

        var typoX = { ...obj.styles,
          textTransform: newValuesObj
        };
        onChange(typoX);
      }
    }))), typo.textDecoration != undefined && (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.PanelRow, null, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("label", {
      for: ""
    }, "Text Decoration")), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "flex justify-between"
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
      className: obj.styles.textDecoration[breakPointX] != undefined && obj.styles.textDecoration[breakPointX].indexOf('underline') !== -1 ? '!bg-blue-300 ' : '',
      variant: "secondary",
      onClick: ev => {
        var newVal = 'underline';
        var newValuesObj = {};

        if (Object.keys(obj.styles.textDecoration).length == 0) {
          newValuesObj[breakPointX] = [newVal];
        } else {
          newValuesObj = obj.styles.textDecoration;

          if (newValuesObj[breakPointX].indexOf(newVal) !== -1) {
            var arr = newValuesObj[breakPointX].filter(item => item !== newVal);
            newValuesObj[breakPointX] = arr;
          } else {
            newValuesObj[breakPointX].push(newVal);
          }
        }

        var typoX = { ...obj.styles,
          textDecoration: newValuesObj
        };
        onChange(typoX);
      }
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      class: "icon-underline"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
      className: obj.styles.textDecoration[breakPointX] != undefined && obj.styles.textDecoration[breakPointX].indexOf('line-through') !== -1 ? '!bg-blue-300 ' : '',
      variant: "secondary",
      onClick: ev => {
        var newVal = 'line-through';
        var newValuesObj = {};

        if (Object.keys(obj.styles.textDecoration).length == 0) {
          newValuesObj[breakPointX] = [newVal];
        } else {
          newValuesObj = obj.styles.textDecoration;

          if (newValuesObj[breakPointX].indexOf(newVal) !== -1) {
            var arr = newValuesObj[breakPointX].filter(item => item !== newVal);
            newValuesObj[breakPointX] = arr;
          } else {
            newValuesObj[breakPointX].push(newVal);
          }
        }

        var typoX = { ...obj.styles,
          textDecoration: newValuesObj
        };
        onChange(typoX);
      }
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      class: "icon-strikethrough"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
      className: obj.styles.textDecoration[breakPointX] != undefined && obj.styles.textDecoration[breakPointX].indexOf('overline') !== -1 ? '!bg-blue-300 ' : '',
      variant: "secondary",
      onClick: ev => {
        var newVal = 'overline';
        var newValuesObj = {};

        if (Object.keys(obj.styles.textDecoration).length == 0) {
          newValuesObj[breakPointX] = [newVal];
        } else {
          newValuesObj = obj.styles.textDecoration;

          if (newValuesObj[breakPointX].indexOf(newVal) !== -1) {
            var arr = newValuesObj[breakPointX].filter(item => item !== newVal);
            newValuesObj[breakPointX] = arr;
          } else {
            newValuesObj[breakPointX].push(newVal);
          }
        }

        var typoX = { ...obj.styles,
          textDecoration: newValuesObj
        };
        onChange(typoX);
      }
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      class: "icon-overline"
    })), (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)(_wordpress_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
      className: obj.styles.textDecoration[breakPointX] != undefined && obj.styles.textDecoration[breakPointX].indexOf('none') !== -1 ? '!bg-blue-300 ' : '',
      variant: "secondary",
      onClick: ev => {
        var newVal = 'none';
        var newValuesObj = {};

        if (Object.keys(obj.styles.textDecoration).length == 0) {
          newValuesObj[breakPointX] = [newVal];
        } else {
          newValuesObj = obj.styles.textDecoration;

          if (newValuesObj[breakPointX].indexOf(newVal) !== -1) {
            var arr = newValuesObj[breakPointX].filter(item => item !== newVal);
            newValuesObj[breakPointX] = arr;
          } else {
            newValuesObj[breakPointX] = [newVal];
          }
        }

        var typoX = { ...obj.styles,
          textDecoration: newValuesObj
        };
        onChange(typoX);
      }
    }, (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      class: "icon-close"
    })))));
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Typography);

/***/ }),

/***/ "./src/store.js":
/*!**********************!*\
  !*** ./src/store.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "store": () => (/* binding */ store)
/* harmony export */ });
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/data */ "@wordpress/data");
/* harmony import */ var _wordpress_data__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_data__WEBPACK_IMPORTED_MODULE_1__);


const DEFAULT_STATE = {
  breakPoint: 'Desktop',
  clientdata: {},
  proinfo: {
    proInstalled: false,
    status: 'inactive-initial'
  },
  license: {
    license_status: '',
    license_key: ''
  }
};
var selectors = {
  getBreakPoint(state) {
    const {
      breakPoint
    } = state;
    return breakPoint;
  },

  getclientdata(state) {
    const {
      clientdata
    } = state;
    return clientdata;
  },

  getproinfo(state) {
    console.log('step: 1');
    const {
      proinfo
    } = state;
    console.log(proinfo);
    return proinfo;
  },

  getLicense(state) {
    const {
      license
    } = state;
    return license;
  }

};
var resolvers = {
  *getLicense() {
    const path = '/post-grid/v2/get_license';
    const res = yield actions.fetchLicense(path); ////console.log(res);

    return actions.setLicense(res);
  },

  *getclientdata() {
    const path = '/post-grid/v2/get_site_details';
    const res = yield actions.fetchclientdata(path); ////console.log(res);

    return actions.setclientdata(res);
  },

  *getproinfo() {
    console.log('step: 2');
    const path = '/post-grid/v2/get_pro_info';
    const res = yield actions.fetchproinfo(path);
    console.log(res);
    return actions.setproinfo(res);
  }

};
const actions = {
  setBreakPoint(breakpoint) {
    return {
      type: 'SET_BREAKPOINT',
      breakpoint
    };
  },

  setclientdata(clientdata) {
    return {
      type: 'SET_CLIENTDATA',
      clientdata
    };
  },

  setproinfo(proinfo) {
    console.log('step: 3');
    console.log(proinfo);
    return {
      type: 'SET_PROINFO',
      proinfo
    };
  },

  setLicense(license) {
    return {
      type: 'SET_LICENSE',
      license
    };
  },

  fetchLicense(path) {
    return {
      type: 'FETCH_LICENSE_FROM_API',
      path
    };
  },

  fetchclientdata(path) {
    return {
      type: 'FETCH_CLIENTDATA_FROM_API',
      path
    };
  },

  fetchproinfo(path) {
    console.log('step: 4');
    return {
      type: 'FETCH_PRO_INFO_FROM_API',
      path
    };
  }

};
var controls = {
  FETCH_LICENSE_FROM_API(action) {
    return _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0___default()({
      path: action.path,
      method: 'POST',
      data: {}
    });
  },

  FETCH_CLIENTDATA_FROM_API(action) {
    return _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0___default()({
      path: action.path,
      method: 'POST',
      data: {}
    });
  },

  FETCH_PRO_INFO_FROM_API(action) {
    console.log('step: 5');
    return _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0___default()({
      path: action.path,
      method: 'POST',
      data: {}
    });
  }

};
const store = (0,_wordpress_data__WEBPACK_IMPORTED_MODULE_1__.createReduxStore)('postgrid-shop', {
  reducer() {
    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;
    let action = arguments.length > 1 ? arguments[1] : undefined;

    switch (action.type) {
      case 'SET_BREAKPOINT':
        return { ...state,
          breakPoint: action.breakpoint
        };

      case 'SET_CLIENTDATA':
        return { ...state,
          clientdata: action.clientdata
        };

      case 'SET_PROINFO':
        console.log('step: 3');
        console.log(action.proinfo);
        return { ...state,
          proinfo: action.proinfo
        };

      case 'SET_LICENSE':
        return { ...state,
          license: action.license
        };
    }

    return state;
  },

  actions,
  selectors,
  controls,
  resolvers
});
(0,_wordpress_data__WEBPACK_IMPORTED_MODULE_1__.register)(store);
(0,_wordpress_data__WEBPACK_IMPORTED_MODULE_1__.subscribe)(() => {});


/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ ((module, exports) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "./node_modules/react-sortablejs/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-sortablejs/dist/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var $8zHUo$sortablejs = __webpack_require__(/*! sortablejs */ "./node_modules/sortablejs/modular/sortable.esm.js");
var $8zHUo$classnames = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
var $8zHUo$react = __webpack_require__(/*! react */ "react");
var $8zHUo$tinyinvariant = __webpack_require__(/*! tiny-invariant */ "./node_modules/tiny-invariant/dist/tiny-invariant.esm.js");

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$exportWildcard(dest, source) {
  Object.keys(source).forEach(function(key) {
    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {
      return;
    }

    Object.defineProperty(dest, key, {
      enumerable: true,
      get: function get() {
        return source[key];
      }
    });
  });

  return dest;
}

$parcel$export(module.exports, "Sortable", () => $882b6d93070905b3$re_export$Sortable);
$parcel$export(module.exports, "Direction", () => $882b6d93070905b3$re_export$Direction);
$parcel$export(module.exports, "DOMRect", () => $882b6d93070905b3$re_export$DOMRect);
$parcel$export(module.exports, "GroupOptions", () => $882b6d93070905b3$re_export$GroupOptions);
$parcel$export(module.exports, "MoveEvent", () => $882b6d93070905b3$re_export$MoveEvent);
$parcel$export(module.exports, "Options", () => $882b6d93070905b3$re_export$Options);
$parcel$export(module.exports, "PullResult", () => $882b6d93070905b3$re_export$PullResult);
$parcel$export(module.exports, "PutResult", () => $882b6d93070905b3$re_export$PutResult);
$parcel$export(module.exports, "SortableEvent", () => $882b6d93070905b3$re_export$SortableEvent);
$parcel$export(module.exports, "SortableOptions", () => $882b6d93070905b3$re_export$SortableOptions);
$parcel$export(module.exports, "Utils", () => $882b6d93070905b3$re_export$Utils);
$parcel$export(module.exports, "ReactSortable", () => $7fe8e3ea572bda7a$export$11bbed9ee0012c13);





function $eb03e74f8f7db1f3$export$1d0aa160432dfea5(node) {
    if (node.parentElement !== null) node.parentElement.removeChild(node);
}
function $eb03e74f8f7db1f3$export$6d240faa51aa562f(parent, newChild, index) {
    const refChild = parent.children[index] || null;
    parent.insertBefore(newChild, refChild);
}
function $eb03e74f8f7db1f3$export$d7d742816c28cf91(customs) {
    $eb03e74f8f7db1f3$export$77f49a256021c8de(customs);
    $eb03e74f8f7db1f3$export$a6177d5829f70ebc(customs);
}
function $eb03e74f8f7db1f3$export$77f49a256021c8de(customs) {
    customs.forEach((curr)=>$eb03e74f8f7db1f3$export$1d0aa160432dfea5(curr.element));
}
function $eb03e74f8f7db1f3$export$a6177d5829f70ebc(customs) {
    customs.forEach((curr)=>{
        $eb03e74f8f7db1f3$export$6d240faa51aa562f(curr.parentElement, curr.element, curr.oldIndex);
    });
}
function $eb03e74f8f7db1f3$export$4655efe700f887a(evt, list) {
    const mode = $eb03e74f8f7db1f3$export$1fc0f6205829e19c(evt);
    const parentElement = {
        parentElement: evt.from
    };
    let custom = [];
    switch(mode){
        case "normal":
            /* eslint-disable */ const item = {
                element: evt.item,
                newIndex: evt.newIndex,
                oldIndex: evt.oldIndex,
                parentElement: evt.from
            };
            custom = [
                item
            ];
            break;
        case "swap":
            const drag = {
                element: evt.item,
                oldIndex: evt.oldIndex,
                newIndex: evt.newIndex,
                ...parentElement
            };
            const swap = {
                element: evt.swapItem,
                oldIndex: evt.newIndex,
                newIndex: evt.oldIndex,
                ...parentElement
            };
            custom = [
                drag,
                swap
            ];
            break;
        case "multidrag":
            custom = evt.oldIndicies.map((curr, index)=>({
                    element: curr.multiDragElement,
                    oldIndex: curr.index,
                    newIndex: evt.newIndicies[index].index,
                    ...parentElement
                }));
            break;
    }
    /* eslint-enable */ const customs = $eb03e74f8f7db1f3$export$bc06a3af7dc65f53(custom, list);
    return customs;
}
function $eb03e74f8f7db1f3$export$c25cf8080bd305ec(normalized, list) {
    const a = $eb03e74f8f7db1f3$export$be2da95e6167b0bd(normalized, list);
    const b = $eb03e74f8f7db1f3$export$eca851ee65ae17e4(normalized, a);
    return b;
}
function $eb03e74f8f7db1f3$export$be2da95e6167b0bd(normalized, list) {
    const newList = [
        ...list
    ];
    normalized.concat().reverse().forEach((curr)=>newList.splice(curr.oldIndex, 1));
    return newList;
}
function $eb03e74f8f7db1f3$export$eca851ee65ae17e4(normalized, list, evt, clone) {
    const newList = [
        ...list
    ];
    normalized.forEach((curr)=>{
        const newItem = clone && evt && clone(curr.item, evt);
        newList.splice(curr.newIndex, 0, newItem || curr.item);
    });
    return newList;
}
function $eb03e74f8f7db1f3$export$1fc0f6205829e19c(evt) {
    if (evt.oldIndicies && evt.oldIndicies.length > 0) return "multidrag";
    if (evt.swapItem) return "swap";
    return "normal";
}
function $eb03e74f8f7db1f3$export$bc06a3af7dc65f53(inputs, list) {
    const normalized = inputs.map((curr)=>({
            ...curr,
            item: list[curr.oldIndex]
        })).sort((a, b)=>a.oldIndex - b.oldIndex);
    return normalized;
}
function $eb03e74f8f7db1f3$export$7553c81e62e31b7e(props) {
    /* eslint-disable */ const { list: // react sortable props
    list , setList: setList , children: children , tag: tag , style: style , className: className , clone: clone , onAdd: // sortable options that have methods we want to overwrite
    onAdd , onChange: onChange , onChoose: onChoose , onClone: onClone , onEnd: onEnd , onFilter: onFilter , onRemove: onRemove , onSort: onSort , onStart: onStart , onUnchoose: onUnchoose , onUpdate: onUpdate , onMove: onMove , onSpill: onSpill , onSelect: onSelect , onDeselect: onDeselect , ...options } = props;
    /* eslint-enable */ return options;
}


/** Holds a global reference for which react element is being dragged */ // @todo - use context to manage this. How does one use 2 different providers?
const $7fe8e3ea572bda7a$var$store = {
    dragging: null
};
class $7fe8e3ea572bda7a$export$11bbed9ee0012c13 extends (0, $8zHUo$react.Component) {
    /* eslint-disable-next-line */ static defaultProps = {
        clone: (item)=>item
    };
    constructor(props){
        super(props);
        // @todo forward ref this component
        this.ref = /*#__PURE__*/ (0, $8zHUo$react.createRef)();
        // make all state false because we can't change sortable unless a mouse gesture is made.
        const newList = [
            ...props.list
        ].map((item)=>Object.assign(item, {
                chosen: false,
                selected: false
            }));
        props.setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
        (0, ($parcel$interopDefault($8zHUo$tinyinvariant)))(//@ts-expect-error: Doesn't exist. Will deprecate soon.
        !props.plugins, `
Plugins prop is no longer supported.
Instead, mount it with "Sortable.mount(new MultiDrag())"
Please read the updated README.md at https://github.com/SortableJS/react-sortablejs.
      `);
    }
    componentDidMount() {
        if (this.ref.current === null) return;
        const newOptions = this.makeOptions();
        (0, ($parcel$interopDefault($8zHUo$sortablejs))).create(this.ref.current, newOptions);
    }
    componentDidUpdate(prevProps) {
        if (prevProps.disabled !== this.props.disabled && this.sortable) this.sortable.option("disabled", this.props.disabled);
    }
    render() {
        const { tag: tag , style: style , className: className , id: id  } = this.props;
        const classicProps = {
            style: style,
            className: className,
            id: id
        };
        // if no tag, default to a `div` element.
        const newTag = !tag || tag === null ? "div" : tag;
        return /*#__PURE__*/ (0, $8zHUo$react.createElement)(newTag, {
            // @todo - find a way (perhaps with the callback) to allow AntD components to work
            ref: this.ref,
            ...classicProps
        }, this.getChildren());
    }
    getChildren() {
        const { children: children , dataIdAttr: dataIdAttr , selectedClass: selectedClass = "sortable-selected" , chosenClass: chosenClass = "sortable-chosen" , dragClass: /* eslint-disable */ dragClass = "sortable-drag" , fallbackClass: fallbackClass = "sortable-falback" , ghostClass: ghostClass = "sortable-ghost" , swapClass: swapClass = "sortable-swap-highlight" , filter: /* eslint-enable */ filter = "sortable-filter" , list: list ,  } = this.props;
        // if no children, don't do anything.
        if (!children || children == null) return null;
        const dataid = dataIdAttr || "data-id";
        /* eslint-disable-next-line */ return (0, $8zHUo$react.Children).map(children, (child, index)=>{
            if (child === undefined) return undefined;
            const item = list[index] || {};
            const { className: prevClassName  } = child.props;
            // @todo - handle the function if avalable. I don't think anyone will be doing this soon.
            const filtered = typeof filter === "string" && {
                [filter.replace(".", "")]: !!item.filtered
            };
            const className = (0, ($parcel$interopDefault($8zHUo$classnames)))(prevClassName, {
                [selectedClass]: item.selected,
                [chosenClass]: item.chosen,
                ...filtered
            });
            return /*#__PURE__*/ (0, $8zHUo$react.cloneElement)(child, {
                [dataid]: child.key,
                className: className
            });
        });
    }
    /** Appends the `sortable` property to this component */ get sortable() {
        const el = this.ref.current;
        if (el === null) return null;
        const key = Object.keys(el).find((k)=>k.includes("Sortable"));
        if (!key) return null;
        //@ts-expect-error: fix me.
        return el[key];
    }
    /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */ makeOptions() {
        const DOMHandlers = [
            "onAdd",
            "onChoose",
            "onDeselect",
            "onEnd",
            "onRemove",
            "onSelect",
            "onSpill",
            "onStart",
            "onUnchoose",
            "onUpdate", 
        ];
        const NonDOMHandlers = [
            "onChange",
            "onClone",
            "onFilter",
            "onSort", 
        ];
        const newOptions = (0, $eb03e74f8f7db1f3$export$7553c81e62e31b7e)(this.props);
        DOMHandlers.forEach((name)=>newOptions[name] = this.prepareOnHandlerPropAndDOM(name));
        NonDOMHandlers.forEach((name)=>newOptions[name] = this.prepareOnHandlerProp(name));
        /** onMove has 2 arguments and needs to be handled seperately. */ const onMove1 = (evt, originalEvt)=>{
            const { onMove: onMove  } = this.props;
            const defaultValue = evt.willInsertAfter || -1;
            if (!onMove) return defaultValue;
            const result = onMove(evt, originalEvt, this.sortable, $7fe8e3ea572bda7a$var$store);
            if (typeof result === "undefined") return false;
            return result;
        };
        return {
            ...newOptions,
            onMove: onMove1
        };
    }
    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */ prepareOnHandlerPropAndDOM(evtName) {
        return (evt)=>{
            // call the component prop
            this.callOnHandlerProp(evt, evtName);
            // calls state change
            //@ts-expect-error: until @types multidrag item is in
            this[evtName](evt);
        };
    }
    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */ prepareOnHandlerProp(evtName) {
        return (evt)=>{
            // call the component prop
            this.callOnHandlerProp(evt, evtName);
        };
    }
    /** Calls the `props.on[Handler]` function */ callOnHandlerProp(evt, evtName) {
        const propEvent = this.props[evtName];
        if (propEvent) propEvent(evt, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    // SORTABLE DOM HANDLING
    onAdd(evt) {
        const { list: list , setList: setList , clone: clone  } = this.props;
        /* eslint-disable-next-line */ const otherList = [
            ...$7fe8e3ea572bda7a$var$store.dragging.props.list
        ];
        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, otherList);
        (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customs);
        const newList = (0, $eb03e74f8f7db1f3$export$eca851ee65ae17e4)(customs, list, evt, clone).map((item)=>Object.assign(item, {
                selected: false
            }));
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onRemove(evt) {
        const { list: list , setList: setList  } = this.props;
        const mode = (0, $eb03e74f8f7db1f3$export$1fc0f6205829e19c)(evt);
        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, list);
        (0, $eb03e74f8f7db1f3$export$a6177d5829f70ebc)(customs);
        let newList = [
            ...list
        ];
        // remove state if not in clone mode. otherwise, keep.
        if (evt.pullMode !== "clone") newList = (0, $eb03e74f8f7db1f3$export$be2da95e6167b0bd)(customs, newList);
        else {
            // switch used to get the clone
            let customClones = customs;
            switch(mode){
                case "multidrag":
                    customClones = customs.map((item, index)=>({
                            ...item,
                            element: evt.clones[index]
                        }));
                    break;
                case "normal":
                    customClones = customs.map((item)=>({
                            ...item,
                            element: evt.clone
                        }));
                    break;
                case "swap":
                default:
                    (0, ($parcel$interopDefault($8zHUo$tinyinvariant)))(true, `mode "${mode}" cannot clone. Please remove "props.clone" from <ReactSortable/> when using the "${mode}" plugin`);
            }
            (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customClones);
            // replace selected items with cloned items
            customs.forEach((curr)=>{
                const index = curr.oldIndex;
                /* eslint-disable-next-line */ const newItem = this.props.clone(curr.item, evt);
                newList.splice(index, 1, newItem);
            });
        }
        // remove item.selected from list
        newList = newList.map((item)=>Object.assign(item, {
                selected: false
            }));
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onUpdate(evt) {
        const { list: list , setList: setList  } = this.props;
        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, list);
        (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customs);
        (0, $eb03e74f8f7db1f3$export$a6177d5829f70ebc)(customs);
        const newList = (0, $eb03e74f8f7db1f3$export$c25cf8080bd305ec)(customs, list);
        return setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onStart() {
        $7fe8e3ea572bda7a$var$store.dragging = this;
    }
    onEnd() {
        $7fe8e3ea572bda7a$var$store.dragging = null;
    }
    onChoose(evt) {
        const { list: list , setList: setList  } = this.props;
        const newList = list.map((item, index)=>{
            let newItem = item;
            if (index === evt.oldIndex) newItem = Object.assign(item, {
                chosen: true
            });
            return newItem;
        });
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onUnchoose(evt) {
        const { list: list , setList: setList  } = this.props;
        const newList = list.map((item, index)=>{
            let newItem = item;
            if (index === evt.oldIndex) newItem = Object.assign(newItem, {
                chosen: false
            });
            return newItem;
        });
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onSpill(evt) {
        const { removeOnSpill: removeOnSpill , revertOnSpill: revertOnSpill  } = this.props;
        if (removeOnSpill && !revertOnSpill) (0, $eb03e74f8f7db1f3$export$1d0aa160432dfea5)(evt.item);
    }
    onSelect(evt) {
        const { list: list , setList: setList  } = this.props;
        const newList = list.map((item)=>Object.assign(item, {
                selected: false
            }));
        evt.newIndicies.forEach((curr)=>{
            const index = curr.index;
            if (index === -1) {
                console.log(`"${evt.type}" had indice of "${curr.index}", which is probably -1 and doesn't usually happen here.`);
                console.log(evt);
                return;
            }
            newList[index].selected = true;
        });
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
    onDeselect(evt) {
        const { list: list , setList: setList  } = this.props;
        const newList = list.map((item)=>Object.assign(item, {
                selected: false
            }));
        evt.newIndicies.forEach((curr)=>{
            const index = curr.index;
            if (index === -1) return;
            newList[index].selected = true;
        });
        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);
    }
}


var $faefaad95e5fcca0$exports = {};


$parcel$exportWildcard(module.exports, $faefaad95e5fcca0$exports);


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/sortablejs/modular/sortable.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/sortablejs/modular/sortable.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MultiDrag": () => (/* binding */ MultiDragPlugin),
/* harmony export */   "Sortable": () => (/* binding */ Sortable),
/* harmony export */   "Swap": () => (/* binding */ SwapPlugin),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**!
 * Sortable 1.15.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var version = "1.15.0";

function userAgent(pattern) {
  if (typeof window !== 'undefined' && window.navigator) {
    return !! /*@__PURE__*/navigator.userAgent.match(pattern);
  }
}

var IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i);
var Edge = userAgent(/Edge/i);
var FireFox = userAgent(/firefox/i);
var Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);
var IOS = userAgent(/iP(ad|od|hone)/i);
var ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);

var captureMode = {
  capture: false,
  passive: false
};

function on(el, event, fn) {
  el.addEventListener(event, fn, !IE11OrLess && captureMode);
}

function off(el, event, fn) {
  el.removeEventListener(event, fn, !IE11OrLess && captureMode);
}

function matches(
/**HTMLElement*/
el,
/**String*/
selector) {
  if (!selector) return;
  selector[0] === '>' && (selector = selector.substring(1));

  if (el) {
    try {
      if (el.matches) {
        return el.matches(selector);
      } else if (el.msMatchesSelector) {
        return el.msMatchesSelector(selector);
      } else if (el.webkitMatchesSelector) {
        return el.webkitMatchesSelector(selector);
      }
    } catch (_) {
      return false;
    }
  }

  return false;
}

function getParentOrHost(el) {
  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;
}

function closest(
/**HTMLElement*/
el,
/**String*/
selector,
/**HTMLElement*/
ctx, includeCTX) {
  if (el) {
    ctx = ctx || document;

    do {
      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {
        return el;
      }

      if (el === ctx) break;
      /* jshint boss:true */
    } while (el = getParentOrHost(el));
  }

  return null;
}

var R_SPACE = /\s+/g;

function toggleClass(el, name, state) {
  if (el && name) {
    if (el.classList) {
      el.classList[state ? 'add' : 'remove'](name);
    } else {
      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');
      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');
    }
  }
}

function css(el, prop, val) {
  var style = el && el.style;

  if (style) {
    if (val === void 0) {
      if (document.defaultView && document.defaultView.getComputedStyle) {
        val = document.defaultView.getComputedStyle(el, '');
      } else if (el.currentStyle) {
        val = el.currentStyle;
      }

      return prop === void 0 ? val : val[prop];
    } else {
      if (!(prop in style) && prop.indexOf('webkit') === -1) {
        prop = '-webkit-' + prop;
      }

      style[prop] = val + (typeof val === 'string' ? '' : 'px');
    }
  }
}

function matrix(el, selfOnly) {
  var appliedTransforms = '';

  if (typeof el === 'string') {
    appliedTransforms = el;
  } else {
    do {
      var transform = css(el, 'transform');

      if (transform && transform !== 'none') {
        appliedTransforms = transform + ' ' + appliedTransforms;
      }
      /* jshint boss:true */

    } while (!selfOnly && (el = el.parentNode));
  }

  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
  /*jshint -W056 */

  return matrixFn && new matrixFn(appliedTransforms);
}

function find(ctx, tagName, iterator) {
  if (ctx) {
    var list = ctx.getElementsByTagName(tagName),
        i = 0,
        n = list.length;

    if (iterator) {
      for (; i < n; i++) {
        iterator(list[i], i);
      }
    }

    return list;
  }

  return [];
}

function getWindowScrollingElement() {
  var scrollingElement = document.scrollingElement;

  if (scrollingElement) {
    return scrollingElement;
  } else {
    return document.documentElement;
  }
}
/**
 * Returns the "bounding client rect" of given element
 * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted
 * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container
 * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr
 * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone
 * @param  {[HTMLElement]} container              The parent the element will be placed in
 * @return {Object}                               The boundingClientRect of el, with specified adjustments
 */


function getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {
  if (!el.getBoundingClientRect && el !== window) return;
  var elRect, top, left, bottom, right, height, width;

  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {
    elRect = el.getBoundingClientRect();
    top = elRect.top;
    left = elRect.left;
    bottom = elRect.bottom;
    right = elRect.right;
    height = elRect.height;
    width = elRect.width;
  } else {
    top = 0;
    left = 0;
    bottom = window.innerHeight;
    right = window.innerWidth;
    height = window.innerHeight;
    width = window.innerWidth;
  }

  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {
    // Adjust for translate()
    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)
    // Not needed on <= IE11

    if (!IE11OrLess) {
      do {
        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {
          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container

          top -= containerRect.top + parseInt(css(container, 'border-top-width'));
          left -= containerRect.left + parseInt(css(container, 'border-left-width'));
          bottom = top + elRect.height;
          right = left + elRect.width;
          break;
        }
        /* jshint boss:true */

      } while (container = container.parentNode);
    }
  }

  if (undoScale && el !== window) {
    // Adjust for scale()
    var elMatrix = matrix(container || el),
        scaleX = elMatrix && elMatrix.a,
        scaleY = elMatrix && elMatrix.d;

    if (elMatrix) {
      top /= scaleY;
      left /= scaleX;
      width /= scaleX;
      height /= scaleY;
      bottom = top + height;
      right = left + width;
    }
  }

  return {
    top: top,
    left: left,
    bottom: bottom,
    right: right,
    width: width,
    height: height
  };
}
/**
 * Checks if a side of an element is scrolled past a side of its parents
 * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question
 * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')
 * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')
 * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element
 */


function isScrolledPast(el, elSide, parentSide) {
  var parent = getParentAutoScrollElement(el, true),
      elSideVal = getRect(el)[elSide];
  /* jshint boss:true */

  while (parent) {
    var parentSideVal = getRect(parent)[parentSide],
        visible = void 0;

    if (parentSide === 'top' || parentSide === 'left') {
      visible = elSideVal >= parentSideVal;
    } else {
      visible = elSideVal <= parentSideVal;
    }

    if (!visible) return parent;
    if (parent === getWindowScrollingElement()) break;
    parent = getParentAutoScrollElement(parent, false);
  }

  return false;
}
/**
 * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)
 * and non-draggable elements
 * @param  {HTMLElement} el       The parent element
 * @param  {Number} childNum      The index of the child
 * @param  {Object} options       Parent Sortable's options
 * @return {HTMLElement}          The child at index childNum, or null if not found
 */


function getChild(el, childNum, options, includeDragEl) {
  var currentChild = 0,
      i = 0,
      children = el.children;

  while (i < children.length) {
    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {
      if (currentChild === childNum) {
        return children[i];
      }

      currentChild++;
    }

    i++;
  }

  return null;
}
/**
 * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)
 * @param  {HTMLElement} el       Parent element
 * @param  {selector} selector    Any other elements that should be ignored
 * @return {HTMLElement}          The last child, ignoring ghostEl
 */


function lastChild(el, selector) {
  var last = el.lastElementChild;

  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {
    last = last.previousElementSibling;
  }

  return last || null;
}
/**
 * Returns the index of an element within its parent for a selected set of
 * elements
 * @param  {HTMLElement} el
 * @param  {selector} selector
 * @return {number}
 */


function index(el, selector) {
  var index = 0;

  if (!el || !el.parentNode) {
    return -1;
  }
  /* jshint boss:true */


  while (el = el.previousElementSibling) {
    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {
      index++;
    }
  }

  return index;
}
/**
 * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.
 * The value is returned in real pixels.
 * @param  {HTMLElement} el
 * @return {Array}             Offsets in the format of [left, top]
 */


function getRelativeScrollOffset(el) {
  var offsetLeft = 0,
      offsetTop = 0,
      winScroller = getWindowScrollingElement();

  if (el) {
    do {
      var elMatrix = matrix(el),
          scaleX = elMatrix.a,
          scaleY = elMatrix.d;
      offsetLeft += el.scrollLeft * scaleX;
      offsetTop += el.scrollTop * scaleY;
    } while (el !== winScroller && (el = el.parentNode));
  }

  return [offsetLeft, offsetTop];
}
/**
 * Returns the index of the object within the given array
 * @param  {Array} arr   Array that may or may not hold the object
 * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find
 * @return {Number}      The index of the object in the array, or -1
 */


function indexOfObject(arr, obj) {
  for (var i in arr) {
    if (!arr.hasOwnProperty(i)) continue;

    for (var key in obj) {
      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);
    }
  }

  return -1;
}

function getParentAutoScrollElement(el, includeSelf) {
  // skip to window
  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();
  var elem = el;
  var gotSelf = false;

  do {
    // we don't need to get elem css if it isn't even overflowing in the first place (performance)
    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {
      var elemCSS = css(elem);

      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {
        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();
        if (gotSelf || includeSelf) return elem;
        gotSelf = true;
      }
    }
    /* jshint boss:true */

  } while (elem = elem.parentNode);

  return getWindowScrollingElement();
}

function extend(dst, src) {
  if (dst && src) {
    for (var key in src) {
      if (src.hasOwnProperty(key)) {
        dst[key] = src[key];
      }
    }
  }

  return dst;
}

function isRectEqual(rect1, rect2) {
  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);
}

var _throttleTimeout;

function throttle(callback, ms) {
  return function () {
    if (!_throttleTimeout) {
      var args = arguments,
          _this = this;

      if (args.length === 1) {
        callback.call(_this, args[0]);
      } else {
        callback.apply(_this, args);
      }

      _throttleTimeout = setTimeout(function () {
        _throttleTimeout = void 0;
      }, ms);
    }
  };
}

function cancelThrottle() {
  clearTimeout(_throttleTimeout);
  _throttleTimeout = void 0;
}

function scrollBy(el, x, y) {
  el.scrollLeft += x;
  el.scrollTop += y;
}

function clone(el) {
  var Polymer = window.Polymer;
  var $ = window.jQuery || window.Zepto;

  if (Polymer && Polymer.dom) {
    return Polymer.dom(el).cloneNode(true);
  } else if ($) {
    return $(el).clone(true)[0];
  } else {
    return el.cloneNode(true);
  }
}

function setRect(el, rect) {
  css(el, 'position', 'absolute');
  css(el, 'top', rect.top);
  css(el, 'left', rect.left);
  css(el, 'width', rect.width);
  css(el, 'height', rect.height);
}

function unsetRect(el) {
  css(el, 'position', '');
  css(el, 'top', '');
  css(el, 'left', '');
  css(el, 'width', '');
  css(el, 'height', '');
}

var expando = 'Sortable' + new Date().getTime();

function AnimationStateManager() {
  var animationStates = [],
      animationCallbackId;
  return {
    captureAnimationState: function captureAnimationState() {
      animationStates = [];
      if (!this.options.animation) return;
      var children = [].slice.call(this.el.children);
      children.forEach(function (child) {
        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;
        animationStates.push({
          target: child,
          rect: getRect(child)
        });

        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation


        if (child.thisAnimationDuration) {
          var childMatrix = matrix(child, true);

          if (childMatrix) {
            fromRect.top -= childMatrix.f;
            fromRect.left -= childMatrix.e;
          }
        }

        child.fromRect = fromRect;
      });
    },
    addAnimationState: function addAnimationState(state) {
      animationStates.push(state);
    },
    removeAnimationState: function removeAnimationState(target) {
      animationStates.splice(indexOfObject(animationStates, {
        target: target
      }), 1);
    },
    animateAll: function animateAll(callback) {
      var _this = this;

      if (!this.options.animation) {
        clearTimeout(animationCallbackId);
        if (typeof callback === 'function') callback();
        return;
      }

      var animating = false,
          animationTime = 0;
      animationStates.forEach(function (state) {
        var time = 0,
            target = state.target,
            fromRect = target.fromRect,
            toRect = getRect(target),
            prevFromRect = target.prevFromRect,
            prevToRect = target.prevToRect,
            animatingRect = state.rect,
            targetMatrix = matrix(target, true);

        if (targetMatrix) {
          // Compensate for current animation
          toRect.top -= targetMatrix.f;
          toRect.left -= targetMatrix.e;
        }

        target.toRect = toRect;

        if (target.thisAnimationDuration) {
          // Could also check if animatingRect is between fromRect and toRect
          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect
          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {
            // If returning to same place as started from animation and on same axis
            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);
          }
        } // if fromRect != toRect: animate


        if (!isRectEqual(toRect, fromRect)) {
          target.prevFromRect = fromRect;
          target.prevToRect = toRect;

          if (!time) {
            time = _this.options.animation;
          }

          _this.animate(target, animatingRect, toRect, time);
        }

        if (time) {
          animating = true;
          animationTime = Math.max(animationTime, time);
          clearTimeout(target.animationResetTimer);
          target.animationResetTimer = setTimeout(function () {
            target.animationTime = 0;
            target.prevFromRect = null;
            target.fromRect = null;
            target.prevToRect = null;
            target.thisAnimationDuration = null;
          }, time);
          target.thisAnimationDuration = time;
        }
      });
      clearTimeout(animationCallbackId);

      if (!animating) {
        if (typeof callback === 'function') callback();
      } else {
        animationCallbackId = setTimeout(function () {
          if (typeof callback === 'function') callback();
        }, animationTime);
      }

      animationStates = [];
    },
    animate: function animate(target, currentRect, toRect, duration) {
      if (duration) {
        css(target, 'transition', '');
        css(target, 'transform', '');
        var elMatrix = matrix(this.el),
            scaleX = elMatrix && elMatrix.a,
            scaleY = elMatrix && elMatrix.d,
            translateX = (currentRect.left - toRect.left) / (scaleX || 1),
            translateY = (currentRect.top - toRect.top) / (scaleY || 1);
        target.animatingX = !!translateX;
        target.animatingY = !!translateY;
        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');
        this.forRepaintDummy = repaint(target); // repaint

        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));
        css(target, 'transform', 'translate3d(0,0,0)');
        typeof target.animated === 'number' && clearTimeout(target.animated);
        target.animated = setTimeout(function () {
          css(target, 'transition', '');
          css(target, 'transform', '');
          target.animated = false;
          target.animatingX = false;
          target.animatingY = false;
        }, duration);
      }
    }
  };
}

function repaint(target) {
  return target.offsetWidth;
}

function calculateRealTime(animatingRect, fromRect, toRect, options) {
  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;
}

var plugins = [];
var defaults = {
  initializeByDefault: true
};
var PluginManager = {
  mount: function mount(plugin) {
    // Set default static properties
    for (var option in defaults) {
      if (defaults.hasOwnProperty(option) && !(option in plugin)) {
        plugin[option] = defaults[option];
      }
    }

    plugins.forEach(function (p) {
      if (p.pluginName === plugin.pluginName) {
        throw "Sortable: Cannot mount plugin ".concat(plugin.pluginName, " more than once");
      }
    });
    plugins.push(plugin);
  },
  pluginEvent: function pluginEvent(eventName, sortable, evt) {
    var _this = this;

    this.eventCanceled = false;

    evt.cancel = function () {
      _this.eventCanceled = true;
    };

    var eventNameGlobal = eventName + 'Global';
    plugins.forEach(function (plugin) {
      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable

      if (sortable[plugin.pluginName][eventNameGlobal]) {
        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({
          sortable: sortable
        }, evt));
      } // Only fire plugin event if plugin is enabled in this sortable,
      // and plugin has event defined


      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {
        sortable[plugin.pluginName][eventName](_objectSpread2({
          sortable: sortable
        }, evt));
      }
    });
  },
  initializePlugins: function initializePlugins(sortable, el, defaults, options) {
    plugins.forEach(function (plugin) {
      var pluginName = plugin.pluginName;
      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;
      var initialized = new plugin(sortable, el, sortable.options);
      initialized.sortable = sortable;
      initialized.options = sortable.options;
      sortable[pluginName] = initialized; // Add default options from plugin

      _extends(defaults, initialized.defaults);
    });

    for (var option in sortable.options) {
      if (!sortable.options.hasOwnProperty(option)) continue;
      var modified = this.modifyOption(sortable, option, sortable.options[option]);

      if (typeof modified !== 'undefined') {
        sortable.options[option] = modified;
      }
    }
  },
  getEventProperties: function getEventProperties(name, sortable) {
    var eventProperties = {};
    plugins.forEach(function (plugin) {
      if (typeof plugin.eventProperties !== 'function') return;

      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));
    });
    return eventProperties;
  },
  modifyOption: function modifyOption(sortable, name, value) {
    var modifiedValue;
    plugins.forEach(function (plugin) {
      // Plugin must exist on the Sortable
      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin

      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {
        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);
      }
    });
    return modifiedValue;
  }
};

function dispatchEvent(_ref) {
  var sortable = _ref.sortable,
      rootEl = _ref.rootEl,
      name = _ref.name,
      targetEl = _ref.targetEl,
      cloneEl = _ref.cloneEl,
      toEl = _ref.toEl,
      fromEl = _ref.fromEl,
      oldIndex = _ref.oldIndex,
      newIndex = _ref.newIndex,
      oldDraggableIndex = _ref.oldDraggableIndex,
      newDraggableIndex = _ref.newDraggableIndex,
      originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      extraEventProperties = _ref.extraEventProperties;
  sortable = sortable || rootEl && rootEl[expando];
  if (!sortable) return;
  var evt,
      options = sortable.options,
      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent(name, {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent(name, true, true);
  }

  evt.to = toEl || rootEl;
  evt.from = fromEl || rootEl;
  evt.item = targetEl || rootEl;
  evt.clone = cloneEl;
  evt.oldIndex = oldIndex;
  evt.newIndex = newIndex;
  evt.oldDraggableIndex = oldDraggableIndex;
  evt.newDraggableIndex = newDraggableIndex;
  evt.originalEvent = originalEvent;
  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;

  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));

  for (var option in allEventProperties) {
    evt[option] = allEventProperties[option];
  }

  if (rootEl) {
    rootEl.dispatchEvent(evt);
  }

  if (options[onName]) {
    options[onName].call(sortable, evt);
  }
}

var _excluded = ["evt"];

var pluginEvent = function pluginEvent(eventName, sortable) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      originalEvent = _ref.evt,
      data = _objectWithoutProperties(_ref, _excluded);

  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({
    dragEl: dragEl,
    parentEl: parentEl,
    ghostEl: ghostEl,
    rootEl: rootEl,
    nextEl: nextEl,
    lastDownEl: lastDownEl,
    cloneEl: cloneEl,
    cloneHidden: cloneHidden,
    dragStarted: moved,
    putSortable: putSortable,
    activeSortable: Sortable.active,
    originalEvent: originalEvent,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex,
    hideGhostForTarget: _hideGhostForTarget,
    unhideGhostForTarget: _unhideGhostForTarget,
    cloneNowHidden: function cloneNowHidden() {
      cloneHidden = true;
    },
    cloneNowShown: function cloneNowShown() {
      cloneHidden = false;
    },
    dispatchSortableEvent: function dispatchSortableEvent(name) {
      _dispatchEvent({
        sortable: sortable,
        name: name,
        originalEvent: originalEvent
      });
    }
  }, data));
};

function _dispatchEvent(info) {
  dispatchEvent(_objectSpread2({
    putSortable: putSortable,
    cloneEl: cloneEl,
    targetEl: dragEl,
    rootEl: rootEl,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex
  }, info));
}

var dragEl,
    parentEl,
    ghostEl,
    rootEl,
    nextEl,
    lastDownEl,
    cloneEl,
    cloneHidden,
    oldIndex,
    newIndex,
    oldDraggableIndex,
    newDraggableIndex,
    activeGroup,
    putSortable,
    awaitingDragStarted = false,
    ignoreNextClick = false,
    sortables = [],
    tapEvt,
    touchEvt,
    lastDx,
    lastDy,
    tapDistanceLeft,
    tapDistanceTop,
    moved,
    lastTarget,
    lastDirection,
    pastFirstInvertThresh = false,
    isCircumstantialInvert = false,
    targetMoveDistance,
    // For positioning ghost absolutely
ghostRelativeParent,
    ghostRelativeParentInitialScroll = [],
    // (left, top)
_silent = false,
    savedInputChecked = [];
/** @const */

var documentExists = typeof document !== 'undefined',
    PositionGhostAbsolutely = IOS,
    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',
    // This will not pass for IE9, because IE9 DnD only works on anchors
supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),
    supportCssPointerEvents = function () {
  if (!documentExists) return; // false when <= IE11

  if (IE11OrLess) {
    return false;
  }

  var el = document.createElement('x');
  el.style.cssText = 'pointer-events:auto';
  return el.style.pointerEvents === 'auto';
}(),
    _detectDirection = function _detectDirection(el, options) {
  var elCSS = css(el),
      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),
      child1 = getChild(el, 0, options),
      child2 = getChild(el, 1, options),
      firstChildCSS = child1 && css(child1),
      secondChildCSS = child2 && css(child2),
      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,
      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;

  if (elCSS.display === 'flex') {
    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';
  }

  if (elCSS.display === 'grid') {
    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';
  }

  if (child1 && firstChildCSS["float"] && firstChildCSS["float"] !== 'none') {
    var touchingSideChild2 = firstChildCSS["float"] === 'left' ? 'left' : 'right';
    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';
  }

  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';
},
    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {
  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,
      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,
      dragElOppLength = vertical ? dragRect.width : dragRect.height,
      targetS1Opp = vertical ? targetRect.left : targetRect.top,
      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,
      targetOppLength = vertical ? targetRect.width : targetRect.height;
  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;
},

/**
 * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.
 * @param  {Number} x      X position
 * @param  {Number} y      Y position
 * @return {HTMLElement}   Element of the first found nearest Sortable
 */
_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {
  var ret;
  sortables.some(function (sortable) {
    var threshold = sortable[expando].options.emptyInsertThreshold;
    if (!threshold || lastChild(sortable)) return;
    var rect = getRect(sortable),
        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,
        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;

    if (insideHorizontally && insideVertically) {
      return ret = sortable;
    }
  });
  return ret;
},
    _prepareGroup = function _prepareGroup(options) {
  function toFn(value, pull) {
    return function (to, from, dragEl, evt) {
      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;

      if (value == null && (pull || sameGroup)) {
        // Default pull value
        // Default pull and put value if same group
        return true;
      } else if (value == null || value === false) {
        return false;
      } else if (pull && value === 'clone') {
        return value;
      } else if (typeof value === 'function') {
        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);
      } else {
        var otherGroup = (pull ? to : from).options.group.name;
        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;
      }
    };
  }

  var group = {};
  var originalGroup = options.group;

  if (!originalGroup || _typeof(originalGroup) != 'object') {
    originalGroup = {
      name: originalGroup
    };
  }

  group.name = originalGroup.name;
  group.checkPull = toFn(originalGroup.pull, true);
  group.checkPut = toFn(originalGroup.put);
  group.revertClone = originalGroup.revertClone;
  options.group = group;
},
    _hideGhostForTarget = function _hideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', 'none');
  }
},
    _unhideGhostForTarget = function _unhideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', '');
  }
}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position


if (documentExists && !ChromeForAndroid) {
  document.addEventListener('click', function (evt) {
    if (ignoreNextClick) {
      evt.preventDefault();
      evt.stopPropagation && evt.stopPropagation();
      evt.stopImmediatePropagation && evt.stopImmediatePropagation();
      ignoreNextClick = false;
      return false;
    }
  }, true);
}

var nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {
  if (dragEl) {
    evt = evt.touches ? evt.touches[0] : evt;

    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);

    if (nearest) {
      // Create imitation event
      var event = {};

      for (var i in evt) {
        if (evt.hasOwnProperty(i)) {
          event[i] = evt[i];
        }
      }

      event.target = event.rootEl = nearest;
      event.preventDefault = void 0;
      event.stopPropagation = void 0;

      nearest[expando]._onDragOver(event);
    }
  }
};

var _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {
  if (dragEl) {
    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);
  }
};
/**
 * @class  Sortable
 * @param  {HTMLElement}  el
 * @param  {Object}       [options]
 */


function Sortable(el, options) {
  if (!(el && el.nodeType && el.nodeType === 1)) {
    throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(el));
  }

  this.el = el; // root element

  this.options = options = _extends({}, options); // Export instance

  el[expando] = this;
  var defaults = {
    group: null,
    sort: true,
    disabled: false,
    store: null,
    handle: null,
    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',
    swapThreshold: 1,
    // percentage; 0 <= x <= 1
    invertSwap: false,
    // invert always
    invertedSwapThreshold: null,
    // will be set to same as swapThreshold if default
    removeCloneOnHide: true,
    direction: function direction() {
      return _detectDirection(el, this.options);
    },
    ghostClass: 'sortable-ghost',
    chosenClass: 'sortable-chosen',
    dragClass: 'sortable-drag',
    ignore: 'a, img',
    filter: null,
    preventOnFilter: true,
    animation: 0,
    easing: null,
    setData: function setData(dataTransfer, dragEl) {
      dataTransfer.setData('Text', dragEl.textContent);
    },
    dropBubble: false,
    dragoverBubble: false,
    dataIdAttr: 'data-id',
    delay: 0,
    delayOnTouchOnly: false,
    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
    forceFallback: false,
    fallbackClass: 'sortable-fallback',
    fallbackOnBody: false,
    fallbackTolerance: 0,
    fallbackOffset: {
      x: 0,
      y: 0
    },
    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,
    emptyInsertThreshold: 5
  };
  PluginManager.initializePlugins(this, el, defaults); // Set default options

  for (var name in defaults) {
    !(name in options) && (options[name] = defaults[name]);
  }

  _prepareGroup(options); // Bind all private methods


  for (var fn in this) {
    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
      this[fn] = this[fn].bind(this);
    }
  } // Setup drag mode


  this.nativeDraggable = options.forceFallback ? false : supportDraggable;

  if (this.nativeDraggable) {
    // Touch start threshold cannot be greater than the native dragstart threshold
    this.options.touchStartThreshold = 1;
  } // Bind events


  if (options.supportPointer) {
    on(el, 'pointerdown', this._onTapStart);
  } else {
    on(el, 'mousedown', this._onTapStart);
    on(el, 'touchstart', this._onTapStart);
  }

  if (this.nativeDraggable) {
    on(el, 'dragover', this);
    on(el, 'dragenter', this);
  }

  sortables.push(this.el); // Restore sorting

  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager

  _extends(this, AnimationStateManager());
}

Sortable.prototype =
/** @lends Sortable.prototype */
{
  constructor: Sortable,
  _isOutsideThisEl: function _isOutsideThisEl(target) {
    if (!this.el.contains(target) && target !== this.el) {
      lastTarget = null;
    }
  },
  _getDirection: function _getDirection(evt, target) {
    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;
  },
  _onTapStart: function _onTapStart(
  /** Event|TouchEvent */
  evt) {
    if (!evt.cancelable) return;

    var _this = this,
        el = this.el,
        options = this.options,
        preventOnFilter = options.preventOnFilter,
        type = evt.type,
        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,
        target = (touch || evt).target,
        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,
        filter = options.filter;

    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.


    if (dragEl) {
      return;
    }

    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {
      return; // only left button and enabled
    } // cancel dnd if original target is content editable


    if (originalTarget.isContentEditable) {
      return;
    } // Safari ignores further event handling after mousedown


    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {
      return;
    }

    target = closest(target, options.draggable, el, false);

    if (target && target.animated) {
      return;
    }

    if (lastDownEl === target) {
      // Ignoring duplicate `down`
      return;
    } // Get the index of the dragged element within its parent


    oldIndex = index(target);
    oldDraggableIndex = index(target, options.draggable); // Check filter

    if (typeof filter === 'function') {
      if (filter.call(this, evt, target, this)) {
        _dispatchEvent({
          sortable: _this,
          rootEl: originalTarget,
          name: 'filter',
          targetEl: target,
          toEl: el,
          fromEl: el
        });

        pluginEvent('filter', _this, {
          evt: evt
        });
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    } else if (filter) {
      filter = filter.split(',').some(function (criteria) {
        criteria = closest(originalTarget, criteria.trim(), el, false);

        if (criteria) {
          _dispatchEvent({
            sortable: _this,
            rootEl: criteria,
            name: 'filter',
            targetEl: target,
            fromEl: el,
            toEl: el
          });

          pluginEvent('filter', _this, {
            evt: evt
          });
          return true;
        }
      });

      if (filter) {
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    }

    if (options.handle && !closest(originalTarget, options.handle, el, false)) {
      return;
    } // Prepare `dragstart`


    this._prepareDragStart(evt, touch, target);
  },
  _prepareDragStart: function _prepareDragStart(
  /** Event */
  evt,
  /** Touch */
  touch,
  /** HTMLElement */
  target) {
    var _this = this,
        el = _this.el,
        options = _this.options,
        ownerDocument = el.ownerDocument,
        dragStartFn;

    if (target && !dragEl && target.parentNode === el) {
      var dragRect = getRect(target);
      rootEl = el;
      dragEl = target;
      parentEl = dragEl.parentNode;
      nextEl = dragEl.nextSibling;
      lastDownEl = target;
      activeGroup = options.group;
      Sortable.dragged = dragEl;
      tapEvt = {
        target: dragEl,
        clientX: (touch || evt).clientX,
        clientY: (touch || evt).clientY
      };
      tapDistanceLeft = tapEvt.clientX - dragRect.left;
      tapDistanceTop = tapEvt.clientY - dragRect.top;
      this._lastX = (touch || evt).clientX;
      this._lastY = (touch || evt).clientY;
      dragEl.style['will-change'] = 'all';

      dragStartFn = function dragStartFn() {
        pluginEvent('delayEnded', _this, {
          evt: evt
        });

        if (Sortable.eventCanceled) {
          _this._onDrop();

          return;
        } // Delayed drag has been triggered
        // we can re-enable the events: touchmove/mousemove


        _this._disableDelayedDragEvents();

        if (!FireFox && _this.nativeDraggable) {
          dragEl.draggable = true;
        } // Bind the events: dragstart/dragend


        _this._triggerDragStart(evt, touch); // Drag start event


        _dispatchEvent({
          sortable: _this,
          name: 'choose',
          originalEvent: evt
        }); // Chosen item


        toggleClass(dragEl, options.chosenClass, true);
      }; // Disable "draggable"


      options.ignore.split(',').forEach(function (criteria) {
        find(dragEl, criteria.trim(), _disableDraggable);
      });
      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mouseup', _this._onDrop);
      on(ownerDocument, 'touchend', _this._onDrop);
      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)

      if (FireFox && this.nativeDraggable) {
        this.options.touchStartThreshold = 4;
        dragEl.draggable = true;
      }

      pluginEvent('delayStart', this, {
        evt: evt
      }); // Delay is impossible for native DnD in Edge or IE

      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {
        if (Sortable.eventCanceled) {
          this._onDrop();

          return;
        } // If the user moves the pointer or let go the click or touch
        // before the delay has been reached:
        // disable the delayed drag


        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);
        on(ownerDocument, 'touchend', _this._disableDelayedDrag);
        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);
        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);
        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);
        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);
        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);
      } else {
        dragStartFn();
      }
    }
  },
  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(
  /** TouchEvent|PointerEvent **/
  e) {
    var touch = e.touches ? e.touches[0] : e;

    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {
      this._disableDelayedDrag();
    }
  },
  _disableDelayedDrag: function _disableDelayedDrag() {
    dragEl && _disableDraggable(dragEl);
    clearTimeout(this._dragStartTimer);

    this._disableDelayedDragEvents();
  },
  _disableDelayedDragEvents: function _disableDelayedDragEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._disableDelayedDrag);
    off(ownerDocument, 'touchend', this._disableDelayedDrag);
    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);
    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);
  },
  _triggerDragStart: function _triggerDragStart(
  /** Event */
  evt,
  /** Touch */
  touch) {
    touch = touch || evt.pointerType == 'touch' && evt;

    if (!this.nativeDraggable || touch) {
      if (this.options.supportPointer) {
        on(document, 'pointermove', this._onTouchMove);
      } else if (touch) {
        on(document, 'touchmove', this._onTouchMove);
      } else {
        on(document, 'mousemove', this._onTouchMove);
      }
    } else {
      on(dragEl, 'dragend', this);
      on(rootEl, 'dragstart', this._onDragStart);
    }

    try {
      if (document.selection) {
        // Timeout neccessary for IE9
        _nextTick(function () {
          document.selection.empty();
        });
      } else {
        window.getSelection().removeAllRanges();
      }
    } catch (err) {}
  },
  _dragStarted: function _dragStarted(fallback, evt) {

    awaitingDragStarted = false;

    if (rootEl && dragEl) {
      pluginEvent('dragStarted', this, {
        evt: evt
      });

      if (this.nativeDraggable) {
        on(document, 'dragover', _checkOutsideTargetEl);
      }

      var options = this.options; // Apply effect

      !fallback && toggleClass(dragEl, options.dragClass, false);
      toggleClass(dragEl, options.ghostClass, true);
      Sortable.active = this;
      fallback && this._appendGhost(); // Drag start event

      _dispatchEvent({
        sortable: this,
        name: 'start',
        originalEvent: evt
      });
    } else {
      this._nulling();
    }
  },
  _emulateDragOver: function _emulateDragOver() {
    if (touchEvt) {
      this._lastX = touchEvt.clientX;
      this._lastY = touchEvt.clientY;

      _hideGhostForTarget();

      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
      var parent = target;

      while (target && target.shadowRoot) {
        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
        if (target === parent) break;
        parent = target;
      }

      dragEl.parentNode[expando]._isOutsideThisEl(target);

      if (parent) {
        do {
          if (parent[expando]) {
            var inserted = void 0;
            inserted = parent[expando]._onDragOver({
              clientX: touchEvt.clientX,
              clientY: touchEvt.clientY,
              target: target,
              rootEl: parent
            });

            if (inserted && !this.options.dragoverBubble) {
              break;
            }
          }

          target = parent; // store last element
        }
        /* jshint boss:true */
        while (parent = parent.parentNode);
      }

      _unhideGhostForTarget();
    }
  },
  _onTouchMove: function _onTouchMove(
  /**TouchEvent*/
  evt) {
    if (tapEvt) {
      var options = this.options,
          fallbackTolerance = options.fallbackTolerance,
          fallbackOffset = options.fallbackOffset,
          touch = evt.touches ? evt.touches[0] : evt,
          ghostMatrix = ghostEl && matrix(ghostEl, true),
          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,
          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,
          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),
          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),
          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging

      if (!Sortable.active && !awaitingDragStarted) {
        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {
          return;
        }

        this._onDragStart(evt, true);
      }

      if (ghostEl) {
        if (ghostMatrix) {
          ghostMatrix.e += dx - (lastDx || 0);
          ghostMatrix.f += dy - (lastDy || 0);
        } else {
          ghostMatrix = {
            a: 1,
            b: 0,
            c: 0,
            d: 1,
            e: dx,
            f: dy
          };
        }

        var cssMatrix = "matrix(".concat(ghostMatrix.a, ",").concat(ghostMatrix.b, ",").concat(ghostMatrix.c, ",").concat(ghostMatrix.d, ",").concat(ghostMatrix.e, ",").concat(ghostMatrix.f, ")");
        css(ghostEl, 'webkitTransform', cssMatrix);
        css(ghostEl, 'mozTransform', cssMatrix);
        css(ghostEl, 'msTransform', cssMatrix);
        css(ghostEl, 'transform', cssMatrix);
        lastDx = dx;
        lastDy = dy;
        touchEvt = touch;
      }

      evt.cancelable && evt.preventDefault();
    }
  },
  _appendGhost: function _appendGhost() {
    // Bug if using scale(): https://stackoverflow.com/questions/2637058
    // Not being adjusted for
    if (!ghostEl) {
      var container = this.options.fallbackOnBody ? document.body : rootEl,
          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),
          options = this.options; // Position absolutely

      if (PositionGhostAbsolutely) {
        // Get relatively positioned parent
        ghostRelativeParent = container;

        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {
          ghostRelativeParent = ghostRelativeParent.parentNode;
        }

        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {
          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();
          rect.top += ghostRelativeParent.scrollTop;
          rect.left += ghostRelativeParent.scrollLeft;
        } else {
          ghostRelativeParent = getWindowScrollingElement();
        }

        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);
      }

      ghostEl = dragEl.cloneNode(true);
      toggleClass(ghostEl, options.ghostClass, false);
      toggleClass(ghostEl, options.fallbackClass, true);
      toggleClass(ghostEl, options.dragClass, true);
      css(ghostEl, 'transition', '');
      css(ghostEl, 'transform', '');
      css(ghostEl, 'box-sizing', 'border-box');
      css(ghostEl, 'margin', 0);
      css(ghostEl, 'top', rect.top);
      css(ghostEl, 'left', rect.left);
      css(ghostEl, 'width', rect.width);
      css(ghostEl, 'height', rect.height);
      css(ghostEl, 'opacity', '0.8');
      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');
      css(ghostEl, 'zIndex', '100000');
      css(ghostEl, 'pointerEvents', 'none');
      Sortable.ghost = ghostEl;
      container.appendChild(ghostEl); // Set transform-origin

      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');
    }
  },
  _onDragStart: function _onDragStart(
  /**Event*/
  evt,
  /**boolean*/
  fallback) {
    var _this = this;

    var dataTransfer = evt.dataTransfer;
    var options = _this.options;
    pluginEvent('dragStart', this, {
      evt: evt
    });

    if (Sortable.eventCanceled) {
      this._onDrop();

      return;
    }

    pluginEvent('setupClone', this);

    if (!Sortable.eventCanceled) {
      cloneEl = clone(dragEl);
      cloneEl.removeAttribute("id");
      cloneEl.draggable = false;
      cloneEl.style['will-change'] = '';

      this._hideClone();

      toggleClass(cloneEl, this.options.chosenClass, false);
      Sortable.clone = cloneEl;
    } // #1143: IFrame support workaround


    _this.cloneId = _nextTick(function () {
      pluginEvent('clone', _this);
      if (Sortable.eventCanceled) return;

      if (!_this.options.removeCloneOnHide) {
        rootEl.insertBefore(cloneEl, dragEl);
      }

      _this._hideClone();

      _dispatchEvent({
        sortable: _this,
        name: 'clone'
      });
    });
    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events

    if (fallback) {
      ignoreNextClick = true;
      _this._loopId = setInterval(_this._emulateDragOver, 50);
    } else {
      // Undo what was set in _prepareDragStart before drag started
      off(document, 'mouseup', _this._onDrop);
      off(document, 'touchend', _this._onDrop);
      off(document, 'touchcancel', _this._onDrop);

      if (dataTransfer) {
        dataTransfer.effectAllowed = 'move';
        options.setData && options.setData.call(_this, dataTransfer, dragEl);
      }

      on(document, 'drop', _this); // #1276 fix:

      css(dragEl, 'transform', 'translateZ(0)');
    }

    awaitingDragStarted = true;
    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));
    on(document, 'selectstart', _this);
    moved = true;

    if (Safari) {
      css(document.body, 'user-select', 'none');
    }
  },
  // Returns true - if no further action is needed (either inserted or another condition)
  _onDragOver: function _onDragOver(
  /**Event*/
  evt) {
    var el = this.el,
        target = evt.target,
        dragRect,
        targetRect,
        revert,
        options = this.options,
        group = options.group,
        activeSortable = Sortable.active,
        isOwner = activeGroup === group,
        canSort = options.sort,
        fromSortable = putSortable || activeSortable,
        vertical,
        _this = this,
        completedFired = false;

    if (_silent) return;

    function dragOverEvent(name, extra) {
      pluginEvent(name, _this, _objectSpread2({
        evt: evt,
        isOwner: isOwner,
        axis: vertical ? 'vertical' : 'horizontal',
        revert: revert,
        dragRect: dragRect,
        targetRect: targetRect,
        canSort: canSort,
        fromSortable: fromSortable,
        target: target,
        completed: completed,
        onMove: function onMove(target, after) {
          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);
        },
        changed: changed
      }, extra));
    } // Capture animation state


    function capture() {
      dragOverEvent('dragOverAnimationCapture');

      _this.captureAnimationState();

      if (_this !== fromSortable) {
        fromSortable.captureAnimationState();
      }
    } // Return invocation when dragEl is inserted (or completed)


    function completed(insertion) {
      dragOverEvent('dragOverCompleted', {
        insertion: insertion
      });

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        } else {
          activeSortable._showClone(_this);
        }

        if (_this !== fromSortable) {
          // Set ghost class to new sortable's ghost class
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);
          toggleClass(dragEl, options.ghostClass, true);
        }

        if (putSortable !== _this && _this !== Sortable.active) {
          putSortable = _this;
        } else if (_this === Sortable.active && putSortable) {
          putSortable = null;
        } // Animation


        if (fromSortable === _this) {
          _this._ignoreWhileAnimating = target;
        }

        _this.animateAll(function () {
          dragOverEvent('dragOverAnimationComplete');
          _this._ignoreWhileAnimating = null;
        });

        if (_this !== fromSortable) {
          fromSortable.animateAll();
          fromSortable._ignoreWhileAnimating = null;
        }
      } // Null lastTarget if it is not inside a previously swapped element


      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {
        lastTarget = null;
      } // no bubbling and not fallback


      if (!options.dragoverBubble && !evt.rootEl && target !== document) {
        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted


        !insertion && nearestEmptyInsertDetectEvent(evt);
      }

      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();
      return completedFired = true;
    } // Call when dragEl has been inserted


    function changed() {
      newIndex = index(dragEl);
      newDraggableIndex = index(dragEl, options.draggable);

      _dispatchEvent({
        sortable: _this,
        name: 'change',
        toEl: el,
        newIndex: newIndex,
        newDraggableIndex: newDraggableIndex,
        originalEvent: evt
      });
    }

    if (evt.preventDefault !== void 0) {
      evt.cancelable && evt.preventDefault();
    }

    target = closest(target, options.draggable, el, true);
    dragOverEvent('dragOver');
    if (Sortable.eventCanceled) return completedFired;

    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {
      return completed(false);
    }

    ignoreNextClick = false;

    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list
    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {
      vertical = this._getDirection(evt, target) === 'vertical';
      dragRect = getRect(dragEl);
      dragOverEvent('dragOverValid');
      if (Sortable.eventCanceled) return completedFired;

      if (revert) {
        parentEl = rootEl; // actualization

        capture();

        this._hideClone();

        dragOverEvent('revert');

        if (!Sortable.eventCanceled) {
          if (nextEl) {
            rootEl.insertBefore(dragEl, nextEl);
          } else {
            rootEl.appendChild(dragEl);
          }
        }

        return completed(true);
      }

      var elLastChild = lastChild(el, options.draggable);

      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {
        // Insert to end of list
        // If already at end of list: Do not insert
        if (elLastChild === dragEl) {
          return completed(false);
        } // if there is a last element, it is the target


        if (elLastChild && el === evt.target) {
          target = elLastChild;
        }

        if (target) {
          targetRect = getRect(target);
        }

        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {
          capture();

          if (elLastChild && elLastChild.nextSibling) {
            // the last draggable element is not the last node
            el.insertBefore(dragEl, elLastChild.nextSibling);
          } else {
            el.appendChild(dragEl);
          }

          parentEl = el; // actualization

          changed();
          return completed(true);
        }
      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {
        // Insert to start of list
        var firstChild = getChild(el, 0, options, true);

        if (firstChild === dragEl) {
          return completed(false);
        }

        target = firstChild;
        targetRect = getRect(target);

        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {
          capture();
          el.insertBefore(dragEl, firstChild);
          parentEl = el; // actualization

          changed();
          return completed(true);
        }
      } else if (target.parentNode === el) {
        targetRect = getRect(target);
        var direction = 0,
            targetBeforeFirstSwap,
            differentLevel = dragEl.parentNode !== el,
            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),
            side1 = vertical ? 'top' : 'left',
            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),
            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;

        if (lastTarget !== target) {
          targetBeforeFirstSwap = targetRect[side1];
          pastFirstInvertThresh = false;
          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;
        }

        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);
        var sibling;

        if (direction !== 0) {
          // Check if target is beside dragEl in respective direction (ignoring hidden elements)
          var dragIndex = index(dragEl);

          do {
            dragIndex -= direction;
            sibling = parentEl.children[dragIndex];
          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));
        } // If dragEl is already beside target: Do not insert


        if (direction === 0 || sibling === target) {
          return completed(false);
        }

        lastTarget = target;
        lastDirection = direction;
        var nextSibling = target.nextElementSibling,
            after = false;
        after = direction === 1;

        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);

        if (moveVector !== false) {
          if (moveVector === 1 || moveVector === -1) {
            after = moveVector === 1;
          }

          _silent = true;
          setTimeout(_unsilent, 30);
          capture();

          if (after && !nextSibling) {
            el.appendChild(dragEl);
          } else {
            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
          } // Undo chrome's scroll adjustment (has no effect on other browsers)


          if (scrolledPastTop) {
            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);
          }

          parentEl = dragEl.parentNode; // actualization
          // must be done before animation

          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {
            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);
          }

          changed();
          return completed(true);
        }
      }

      if (el.contains(dragEl)) {
        return completed(false);
      }
    }

    return false;
  },
  _ignoreWhileAnimating: null,
  _offMoveEvents: function _offMoveEvents() {
    off(document, 'mousemove', this._onTouchMove);
    off(document, 'touchmove', this._onTouchMove);
    off(document, 'pointermove', this._onTouchMove);
    off(document, 'dragover', nearestEmptyInsertDetectEvent);
    off(document, 'mousemove', nearestEmptyInsertDetectEvent);
    off(document, 'touchmove', nearestEmptyInsertDetectEvent);
  },
  _offUpEvents: function _offUpEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._onDrop);
    off(ownerDocument, 'touchend', this._onDrop);
    off(ownerDocument, 'pointerup', this._onDrop);
    off(ownerDocument, 'touchcancel', this._onDrop);
    off(document, 'selectstart', this);
  },
  _onDrop: function _onDrop(
  /**Event*/
  evt) {
    var el = this.el,
        options = this.options; // Get the index of the dragged element within its parent

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);
    pluginEvent('drop', this, {
      evt: evt
    });
    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);

    if (Sortable.eventCanceled) {
      this._nulling();

      return;
    }

    awaitingDragStarted = false;
    isCircumstantialInvert = false;
    pastFirstInvertThresh = false;
    clearInterval(this._loopId);
    clearTimeout(this._dragStartTimer);

    _cancelNextTick(this.cloneId);

    _cancelNextTick(this._dragStartId); // Unbind events


    if (this.nativeDraggable) {
      off(document, 'drop', this);
      off(el, 'dragstart', this._onDragStart);
    }

    this._offMoveEvents();

    this._offUpEvents();

    if (Safari) {
      css(document.body, 'user-select', '');
    }

    css(dragEl, 'transform', '');

    if (evt) {
      if (moved) {
        evt.cancelable && evt.preventDefault();
        !options.dropBubble && evt.stopPropagation();
      }

      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);

      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        // Remove clone(s)
        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);
      }

      if (dragEl) {
        if (this.nativeDraggable) {
          off(dragEl, 'dragend', this);
        }

        _disableDraggable(dragEl);

        dragEl.style['will-change'] = ''; // Remove classes
        // ghostClass is added in dragStarted

        if (moved && !awaitingDragStarted) {
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);
        }

        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event

        _dispatchEvent({
          sortable: this,
          name: 'unchoose',
          toEl: parentEl,
          newIndex: null,
          newDraggableIndex: null,
          originalEvent: evt
        });

        if (rootEl !== parentEl) {
          if (newIndex >= 0) {
            // Add event
            _dispatchEvent({
              rootEl: parentEl,
              name: 'add',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            }); // Remove event


            _dispatchEvent({
              sortable: this,
              name: 'remove',
              toEl: parentEl,
              originalEvent: evt
            }); // drag from one list and drop into another


            _dispatchEvent({
              rootEl: parentEl,
              name: 'sort',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            });

            _dispatchEvent({
              sortable: this,
              name: 'sort',
              toEl: parentEl,
              originalEvent: evt
            });
          }

          putSortable && putSortable.save();
        } else {
          if (newIndex !== oldIndex) {
            if (newIndex >= 0) {
              // drag & drop within the same list
              _dispatchEvent({
                sortable: this,
                name: 'update',
                toEl: parentEl,
                originalEvent: evt
              });

              _dispatchEvent({
                sortable: this,
                name: 'sort',
                toEl: parentEl,
                originalEvent: evt
              });
            }
          }
        }

        if (Sortable.active) {
          /* jshint eqnull:true */
          if (newIndex == null || newIndex === -1) {
            newIndex = oldIndex;
            newDraggableIndex = oldDraggableIndex;
          }

          _dispatchEvent({
            sortable: this,
            name: 'end',
            toEl: parentEl,
            originalEvent: evt
          }); // Save sorting


          this.save();
        }
      }
    }

    this._nulling();
  },
  _nulling: function _nulling() {
    pluginEvent('nulling', this);
    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;
    savedInputChecked.forEach(function (el) {
      el.checked = true;
    });
    savedInputChecked.length = lastDx = lastDy = 0;
  },
  handleEvent: function handleEvent(
  /**Event*/
  evt) {
    switch (evt.type) {
      case 'drop':
      case 'dragend':
        this._onDrop(evt);

        break;

      case 'dragenter':
      case 'dragover':
        if (dragEl) {
          this._onDragOver(evt);

          _globalDragOver(evt);
        }

        break;

      case 'selectstart':
        evt.preventDefault();
        break;
    }
  },

  /**
   * Serializes the item into an array of string.
   * @returns {String[]}
   */
  toArray: function toArray() {
    var order = [],
        el,
        children = this.el.children,
        i = 0,
        n = children.length,
        options = this.options;

    for (; i < n; i++) {
      el = children[i];

      if (closest(el, options.draggable, this.el, false)) {
        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));
      }
    }

    return order;
  },

  /**
   * Sorts the elements according to the array.
   * @param  {String[]}  order  order of the items
   */
  sort: function sort(order, useAnimation) {
    var items = {},
        rootEl = this.el;
    this.toArray().forEach(function (id, i) {
      var el = rootEl.children[i];

      if (closest(el, this.options.draggable, rootEl, false)) {
        items[id] = el;
      }
    }, this);
    useAnimation && this.captureAnimationState();
    order.forEach(function (id) {
      if (items[id]) {
        rootEl.removeChild(items[id]);
        rootEl.appendChild(items[id]);
      }
    });
    useAnimation && this.animateAll();
  },

  /**
   * Save the current sorting
   */
  save: function save() {
    var store = this.options.store;
    store && store.set && store.set(this);
  },

  /**
   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
   * @param   {HTMLElement}  el
   * @param   {String}       [selector]  default: `options.draggable`
   * @returns {HTMLElement|null}
   */
  closest: function closest$1(el, selector) {
    return closest(el, selector || this.options.draggable, this.el, false);
  },

  /**
   * Set/get option
   * @param   {string} name
   * @param   {*}      [value]
   * @returns {*}
   */
  option: function option(name, value) {
    var options = this.options;

    if (value === void 0) {
      return options[name];
    } else {
      var modifiedValue = PluginManager.modifyOption(this, name, value);

      if (typeof modifiedValue !== 'undefined') {
        options[name] = modifiedValue;
      } else {
        options[name] = value;
      }

      if (name === 'group') {
        _prepareGroup(options);
      }
    }
  },

  /**
   * Destroy
   */
  destroy: function destroy() {
    pluginEvent('destroy', this);
    var el = this.el;
    el[expando] = null;
    off(el, 'mousedown', this._onTapStart);
    off(el, 'touchstart', this._onTapStart);
    off(el, 'pointerdown', this._onTapStart);

    if (this.nativeDraggable) {
      off(el, 'dragover', this);
      off(el, 'dragenter', this);
    } // Remove draggable attributes


    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {
      el.removeAttribute('draggable');
    });

    this._onDrop();

    this._disableDelayedDragEvents();

    sortables.splice(sortables.indexOf(this.el), 1);
    this.el = el = null;
  },
  _hideClone: function _hideClone() {
    if (!cloneHidden) {
      pluginEvent('hideClone', this);
      if (Sortable.eventCanceled) return;
      css(cloneEl, 'display', 'none');

      if (this.options.removeCloneOnHide && cloneEl.parentNode) {
        cloneEl.parentNode.removeChild(cloneEl);
      }

      cloneHidden = true;
    }
  },
  _showClone: function _showClone(putSortable) {
    if (putSortable.lastPutMode !== 'clone') {
      this._hideClone();

      return;
    }

    if (cloneHidden) {
      pluginEvent('showClone', this);
      if (Sortable.eventCanceled) return; // show clone at dragEl or original position

      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {
        rootEl.insertBefore(cloneEl, dragEl);
      } else if (nextEl) {
        rootEl.insertBefore(cloneEl, nextEl);
      } else {
        rootEl.appendChild(cloneEl);
      }

      if (this.options.group.revertClone) {
        this.animate(dragEl, cloneEl);
      }

      css(cloneEl, 'display', '');
      cloneHidden = false;
    }
  }
};

function _globalDragOver(
/**Event*/
evt) {
  if (evt.dataTransfer) {
    evt.dataTransfer.dropEffect = 'move';
  }

  evt.cancelable && evt.preventDefault();
}

function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {
  var evt,
      sortable = fromEl[expando],
      onMoveFn = sortable.options.onMove,
      retVal; // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent('move', {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent('move', true, true);
  }

  evt.to = toEl;
  evt.from = fromEl;
  evt.dragged = dragEl;
  evt.draggedRect = dragRect;
  evt.related = targetEl || toEl;
  evt.relatedRect = targetRect || getRect(toEl);
  evt.willInsertAfter = willInsertAfter;
  evt.originalEvent = originalEvent;
  fromEl.dispatchEvent(evt);

  if (onMoveFn) {
    retVal = onMoveFn.call(sortable, evt, originalEvent);
  }

  return retVal;
}

function _disableDraggable(el) {
  el.draggable = false;
}

function _unsilent() {
  _silent = false;
}

function _ghostIsFirst(evt, vertical, sortable) {
  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));
  var spacer = 10;
  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;
}

function _ghostIsLast(evt, vertical, sortable) {
  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));
  var spacer = 10;
  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;
}

function _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {
  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,
      targetLength = vertical ? targetRect.height : targetRect.width,
      targetS1 = vertical ? targetRect.top : targetRect.left,
      targetS2 = vertical ? targetRect.bottom : targetRect.right,
      invert = false;

  if (!invertSwap) {
    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold
    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {
      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2
      // check if past first invert threshold on side opposite of lastDirection
      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {
        // past first invert threshold, do not restrict inverted threshold to dragEl shadow
        pastFirstInvertThresh = true;
      }

      if (!pastFirstInvertThresh) {
        // dragEl shadow (target move distance shadow)
        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow
        : mouseOnAxis > targetS2 - targetMoveDistance) {
          return -lastDirection;
        }
      } else {
        invert = true;
      }
    } else {
      // Regular
      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {
        return _getInsertDirection(target);
      }
    }
  }

  invert = invert || invertSwap;

  if (invert) {
    // Invert of regular
    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {
      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;
    }
  }

  return 0;
}
/**
 * Gets the direction dragEl must be swapped relative to target in order to make it
 * seem that dragEl has been "inserted" into that element's position
 * @param  {HTMLElement} target       The target whose position dragEl is being inserted at
 * @return {Number}                   Direction dragEl must be swapped
 */


function _getInsertDirection(target) {
  if (index(dragEl) < index(target)) {
    return 1;
  } else {
    return -1;
  }
}
/**
 * Generate id
 * @param   {HTMLElement} el
 * @returns {String}
 * @private
 */


function _generateId(el) {
  var str = el.tagName + el.className + el.src + el.href + el.textContent,
      i = str.length,
      sum = 0;

  while (i--) {
    sum += str.charCodeAt(i);
  }

  return sum.toString(36);
}

function _saveInputCheckedState(root) {
  savedInputChecked.length = 0;
  var inputs = root.getElementsByTagName('input');
  var idx = inputs.length;

  while (idx--) {
    var el = inputs[idx];
    el.checked && savedInputChecked.push(el);
  }
}

function _nextTick(fn) {
  return setTimeout(fn, 0);
}

function _cancelNextTick(id) {
  return clearTimeout(id);
} // Fixed #973:


if (documentExists) {
  on(document, 'touchmove', function (evt) {
    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {
      evt.preventDefault();
    }
  });
} // Export utils


Sortable.utils = {
  on: on,
  off: off,
  css: css,
  find: find,
  is: function is(el, selector) {
    return !!closest(el, selector, el, false);
  },
  extend: extend,
  throttle: throttle,
  closest: closest,
  toggleClass: toggleClass,
  clone: clone,
  index: index,
  nextTick: _nextTick,
  cancelNextTick: _cancelNextTick,
  detectDirection: _detectDirection,
  getChild: getChild
};
/**
 * Get the Sortable instance of an element
 * @param  {HTMLElement} element The element
 * @return {Sortable|undefined}         The instance of Sortable
 */

Sortable.get = function (element) {
  return element[expando];
};
/**
 * Mount a plugin to Sortable
 * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted
 */


Sortable.mount = function () {
  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
  }

  if (plugins[0].constructor === Array) plugins = plugins[0];
  plugins.forEach(function (plugin) {
    if (!plugin.prototype || !plugin.prototype.constructor) {
      throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(plugin));
    }

    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);
    PluginManager.mount(plugin);
  });
};
/**
 * Create sortable instance
 * @param {HTMLElement}  el
 * @param {Object}      [options]
 */


Sortable.create = function (el, options) {
  return new Sortable(el, options);
}; // Export


Sortable.version = version;

var autoScrolls = [],
    scrollEl,
    scrollRootEl,
    scrolling = false,
    lastAutoScrollX,
    lastAutoScrollY,
    touchEvt$1,
    pointerElemChangedInterval;

function AutoScrollPlugin() {
  function AutoScroll() {
    this.defaults = {
      scroll: true,
      forceAutoScrollFallback: false,
      scrollSensitivity: 30,
      scrollSpeed: 10,
      bubbleScroll: true
    }; // Bind all private methods

    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }
  }

  AutoScroll.prototype = {
    dragStarted: function dragStarted(_ref) {
      var originalEvent = _ref.originalEvent;

      if (this.sortable.nativeDraggable) {
        on(document, 'dragover', this._handleAutoScroll);
      } else {
        if (this.options.supportPointer) {
          on(document, 'pointermove', this._handleFallbackAutoScroll);
        } else if (originalEvent.touches) {
          on(document, 'touchmove', this._handleFallbackAutoScroll);
        } else {
          on(document, 'mousemove', this._handleFallbackAutoScroll);
        }
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref2) {
      var originalEvent = _ref2.originalEvent;

      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)
      if (!this.options.dragOverBubble && !originalEvent.rootEl) {
        this._handleAutoScroll(originalEvent);
      }
    },
    drop: function drop() {
      if (this.sortable.nativeDraggable) {
        off(document, 'dragover', this._handleAutoScroll);
      } else {
        off(document, 'pointermove', this._handleFallbackAutoScroll);
        off(document, 'touchmove', this._handleFallbackAutoScroll);
        off(document, 'mousemove', this._handleFallbackAutoScroll);
      }

      clearPointerElemChangedInterval();
      clearAutoScrolls();
      cancelThrottle();
    },
    nulling: function nulling() {
      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;
      autoScrolls.length = 0;
    },
    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {
      this._handleAutoScroll(evt, true);
    },
    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {
      var _this = this;

      var x = (evt.touches ? evt.touches[0] : evt).clientX,
          y = (evt.touches ? evt.touches[0] : evt).clientY,
          elem = document.elementFromPoint(x, y);
      touchEvt$1 = evt; // IE does not seem to have native autoscroll,
      // Edge's autoscroll seems too conditional,
      // MACOS Safari does not have autoscroll,
      // Firefox and Chrome are good

      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {
        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change

        var ogElemScroller = getParentAutoScrollElement(elem, true);

        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {
          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour

          pointerElemChangedInterval = setInterval(function () {
            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);

            if (newElem !== ogElemScroller) {
              ogElemScroller = newElem;
              clearAutoScrolls();
            }

            autoScroll(evt, _this.options, newElem, fallback);
          }, 10);
          lastAutoScrollX = x;
          lastAutoScrollY = y;
        }
      } else {
        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll
        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {
          clearAutoScrolls();
          return;
        }

        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);
      }
    }
  };
  return _extends(AutoScroll, {
    pluginName: 'scroll',
    initializeByDefault: true
  });
}

function clearAutoScrolls() {
  autoScrolls.forEach(function (autoScroll) {
    clearInterval(autoScroll.pid);
  });
  autoScrolls = [];
}

function clearPointerElemChangedInterval() {
  clearInterval(pointerElemChangedInterval);
}

var autoScroll = throttle(function (evt, options, rootEl, isFallback) {
  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521
  if (!options.scroll) return;
  var x = (evt.touches ? evt.touches[0] : evt).clientX,
      y = (evt.touches ? evt.touches[0] : evt).clientY,
      sens = options.scrollSensitivity,
      speed = options.scrollSpeed,
      winScroller = getWindowScrollingElement();
  var scrollThisInstance = false,
      scrollCustomFn; // New scroll root, set scrollEl

  if (scrollRootEl !== rootEl) {
    scrollRootEl = rootEl;
    clearAutoScrolls();
    scrollEl = options.scroll;
    scrollCustomFn = options.scrollFn;

    if (scrollEl === true) {
      scrollEl = getParentAutoScrollElement(rootEl, true);
    }
  }

  var layersOut = 0;
  var currentParent = scrollEl;

  do {
    var el = currentParent,
        rect = getRect(el),
        top = rect.top,
        bottom = rect.bottom,
        left = rect.left,
        right = rect.right,
        width = rect.width,
        height = rect.height,
        canScrollX = void 0,
        canScrollY = void 0,
        scrollWidth = el.scrollWidth,
        scrollHeight = el.scrollHeight,
        elCSS = css(el),
        scrollPosX = el.scrollLeft,
        scrollPosY = el.scrollTop;

    if (el === winScroller) {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');
    } else {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');
    }

    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);
    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);

    if (!autoScrolls[layersOut]) {
      for (var i = 0; i <= layersOut; i++) {
        if (!autoScrolls[i]) {
          autoScrolls[i] = {};
        }
      }
    }

    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {
      autoScrolls[layersOut].el = el;
      autoScrolls[layersOut].vx = vx;
      autoScrolls[layersOut].vy = vy;
      clearInterval(autoScrolls[layersOut].pid);

      if (vx != 0 || vy != 0) {
        scrollThisInstance = true;
        /* jshint loopfunc:true */

        autoScrolls[layersOut].pid = setInterval(function () {
          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour
          if (isFallback && this.layer === 0) {
            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely

          }

          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;
          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;

          if (typeof scrollCustomFn === 'function') {
            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {
              return;
            }
          }

          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);
        }.bind({
          layer: layersOut
        }), 24);
      }
    }

    layersOut++;
  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));

  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not
}, 30);

var drop = function drop(_ref) {
  var originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      dragEl = _ref.dragEl,
      activeSortable = _ref.activeSortable,
      dispatchSortableEvent = _ref.dispatchSortableEvent,
      hideGhostForTarget = _ref.hideGhostForTarget,
      unhideGhostForTarget = _ref.unhideGhostForTarget;
  if (!originalEvent) return;
  var toSortable = putSortable || activeSortable;
  hideGhostForTarget();
  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;
  var target = document.elementFromPoint(touch.clientX, touch.clientY);
  unhideGhostForTarget();

  if (toSortable && !toSortable.el.contains(target)) {
    dispatchSortableEvent('spill');
    this.onSpill({
      dragEl: dragEl,
      putSortable: putSortable
    });
  }
};

function Revert() {}

Revert.prototype = {
  startIndex: null,
  dragStart: function dragStart(_ref2) {
    var oldDraggableIndex = _ref2.oldDraggableIndex;
    this.startIndex = oldDraggableIndex;
  },
  onSpill: function onSpill(_ref3) {
    var dragEl = _ref3.dragEl,
        putSortable = _ref3.putSortable;
    this.sortable.captureAnimationState();

    if (putSortable) {
      putSortable.captureAnimationState();
    }

    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);

    if (nextSibling) {
      this.sortable.el.insertBefore(dragEl, nextSibling);
    } else {
      this.sortable.el.appendChild(dragEl);
    }

    this.sortable.animateAll();

    if (putSortable) {
      putSortable.animateAll();
    }
  },
  drop: drop
};

_extends(Revert, {
  pluginName: 'revertOnSpill'
});

function Remove() {}

Remove.prototype = {
  onSpill: function onSpill(_ref4) {
    var dragEl = _ref4.dragEl,
        putSortable = _ref4.putSortable;
    var parentSortable = putSortable || this.sortable;
    parentSortable.captureAnimationState();
    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);
    parentSortable.animateAll();
  },
  drop: drop
};

_extends(Remove, {
  pluginName: 'removeOnSpill'
});

var lastSwapEl;

function SwapPlugin() {
  function Swap() {
    this.defaults = {
      swapClass: 'sortable-swap-highlight'
    };
  }

  Swap.prototype = {
    dragStart: function dragStart(_ref) {
      var dragEl = _ref.dragEl;
      lastSwapEl = dragEl;
    },
    dragOverValid: function dragOverValid(_ref2) {
      var completed = _ref2.completed,
          target = _ref2.target,
          onMove = _ref2.onMove,
          activeSortable = _ref2.activeSortable,
          changed = _ref2.changed,
          cancel = _ref2.cancel;
      if (!activeSortable.options.swap) return;
      var el = this.sortable.el,
          options = this.options;

      if (target && target !== el) {
        var prevSwapEl = lastSwapEl;

        if (onMove(target) !== false) {
          toggleClass(target, options.swapClass, true);
          lastSwapEl = target;
        } else {
          lastSwapEl = null;
        }

        if (prevSwapEl && prevSwapEl !== lastSwapEl) {
          toggleClass(prevSwapEl, options.swapClass, false);
        }
      }

      changed();
      completed(true);
      cancel();
    },
    drop: function drop(_ref3) {
      var activeSortable = _ref3.activeSortable,
          putSortable = _ref3.putSortable,
          dragEl = _ref3.dragEl;
      var toSortable = putSortable || this.sortable;
      var options = this.options;
      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);

      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {
        if (dragEl !== lastSwapEl) {
          toSortable.captureAnimationState();
          if (toSortable !== activeSortable) activeSortable.captureAnimationState();
          swapNodes(dragEl, lastSwapEl);
          toSortable.animateAll();
          if (toSortable !== activeSortable) activeSortable.animateAll();
        }
      }
    },
    nulling: function nulling() {
      lastSwapEl = null;
    }
  };
  return _extends(Swap, {
    pluginName: 'swap',
    eventProperties: function eventProperties() {
      return {
        swapItem: lastSwapEl
      };
    }
  });
}

function swapNodes(n1, n2) {
  var p1 = n1.parentNode,
      p2 = n2.parentNode,
      i1,
      i2;
  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;
  i1 = index(n1);
  i2 = index(n2);

  if (p1.isEqualNode(p2) && i1 < i2) {
    i2++;
  }

  p1.insertBefore(n2, p1.children[i1]);
  p2.insertBefore(n1, p2.children[i2]);
}

var multiDragElements = [],
    multiDragClones = [],
    lastMultiDragSelect,
    // for selection with modifier key down (SHIFT)
multiDragSortable,
    initialFolding = false,
    // Initial multi-drag fold when drag started
folding = false,
    // Folding any other time
dragStarted = false,
    dragEl$1,
    clonesFromRect,
    clonesHidden;

function MultiDragPlugin() {
  function MultiDrag(sortable) {
    // Bind all private methods
    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }

    if (!sortable.options.avoidImplicitDeselect) {
      if (sortable.options.supportPointer) {
        on(document, 'pointerup', this._deselectMultiDrag);
      } else {
        on(document, 'mouseup', this._deselectMultiDrag);
        on(document, 'touchend', this._deselectMultiDrag);
      }
    }

    on(document, 'keydown', this._checkKeyDown);
    on(document, 'keyup', this._checkKeyUp);
    this.defaults = {
      selectedClass: 'sortable-selected',
      multiDragKey: null,
      avoidImplicitDeselect: false,
      setData: function setData(dataTransfer, dragEl) {
        var data = '';

        if (multiDragElements.length && multiDragSortable === sortable) {
          multiDragElements.forEach(function (multiDragElement, i) {
            data += (!i ? '' : ', ') + multiDragElement.textContent;
          });
        } else {
          data = dragEl.textContent;
        }

        dataTransfer.setData('Text', data);
      }
    };
  }

  MultiDrag.prototype = {
    multiDragKeyDown: false,
    isMultiDrag: false,
    delayStartGlobal: function delayStartGlobal(_ref) {
      var dragged = _ref.dragEl;
      dragEl$1 = dragged;
    },
    delayEnded: function delayEnded() {
      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);
    },
    setupClone: function setupClone(_ref2) {
      var sortable = _ref2.sortable,
          cancel = _ref2.cancel;
      if (!this.isMultiDrag) return;

      for (var i = 0; i < multiDragElements.length; i++) {
        multiDragClones.push(clone(multiDragElements[i]));
        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;
        multiDragClones[i].draggable = false;
        multiDragClones[i].style['will-change'] = '';
        toggleClass(multiDragClones[i], this.options.selectedClass, false);
        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);
      }

      sortable._hideClone();

      cancel();
    },
    clone: function clone(_ref3) {
      var sortable = _ref3.sortable,
          rootEl = _ref3.rootEl,
          dispatchSortableEvent = _ref3.dispatchSortableEvent,
          cancel = _ref3.cancel;
      if (!this.isMultiDrag) return;

      if (!this.options.removeCloneOnHide) {
        if (multiDragElements.length && multiDragSortable === sortable) {
          insertMultiDragClones(true, rootEl);
          dispatchSortableEvent('clone');
          cancel();
        }
      }
    },
    showClone: function showClone(_ref4) {
      var cloneNowShown = _ref4.cloneNowShown,
          rootEl = _ref4.rootEl,
          cancel = _ref4.cancel;
      if (!this.isMultiDrag) return;
      insertMultiDragClones(false, rootEl);
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', '');
      });
      cloneNowShown();
      clonesHidden = false;
      cancel();
    },
    hideClone: function hideClone(_ref5) {
      var _this = this;

      var sortable = _ref5.sortable,
          cloneNowHidden = _ref5.cloneNowHidden,
          cancel = _ref5.cancel;
      if (!this.isMultiDrag) return;
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', 'none');

        if (_this.options.removeCloneOnHide && clone.parentNode) {
          clone.parentNode.removeChild(clone);
        }
      });
      cloneNowHidden();
      clonesHidden = true;
      cancel();
    },
    dragStartGlobal: function dragStartGlobal(_ref6) {
      var sortable = _ref6.sortable;

      if (!this.isMultiDrag && multiDragSortable) {
        multiDragSortable.multiDrag._deselectMultiDrag();
      }

      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.sortableIndex = index(multiDragElement);
      }); // Sort multi-drag elements

      multiDragElements = multiDragElements.sort(function (a, b) {
        return a.sortableIndex - b.sortableIndex;
      });
      dragStarted = true;
    },
    dragStarted: function dragStarted(_ref7) {
      var _this2 = this;

      var sortable = _ref7.sortable;
      if (!this.isMultiDrag) return;

      if (this.options.sort) {
        // Capture rects,
        // hide multi drag elements (by positioning them absolute),
        // set multi drag elements rects to dragRect,
        // show multi drag elements,
        // animate to rects,
        // unset rects & remove from DOM
        sortable.captureAnimationState();

        if (this.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            css(multiDragElement, 'position', 'absolute');
          });
          var dragRect = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRect);
          });
          folding = true;
          initialFolding = true;
        }
      }

      sortable.animateAll(function () {
        folding = false;
        initialFolding = false;

        if (_this2.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
        } // Remove all auxiliary multidrag items from el, if sorting enabled


        if (_this2.options.sort) {
          removeMultiDragElements();
        }
      });
    },
    dragOver: function dragOver(_ref8) {
      var target = _ref8.target,
          completed = _ref8.completed,
          cancel = _ref8.cancel;

      if (folding && ~multiDragElements.indexOf(target)) {
        completed(false);
        cancel();
      }
    },
    revert: function revert(_ref9) {
      var fromSortable = _ref9.fromSortable,
          rootEl = _ref9.rootEl,
          sortable = _ref9.sortable,
          dragRect = _ref9.dragRect;

      if (multiDragElements.length > 1) {
        // Setup unfold animation
        multiDragElements.forEach(function (multiDragElement) {
          sortable.addAnimationState({
            target: multiDragElement,
            rect: folding ? getRect(multiDragElement) : dragRect
          });
          unsetRect(multiDragElement);
          multiDragElement.fromRect = dragRect;
          fromSortable.removeAnimationState(multiDragElement);
        });
        folding = false;
        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref10) {
      var sortable = _ref10.sortable,
          isOwner = _ref10.isOwner,
          insertion = _ref10.insertion,
          activeSortable = _ref10.activeSortable,
          parentEl = _ref10.parentEl,
          putSortable = _ref10.putSortable;
      var options = this.options;

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        }

        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location

        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {
          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible
          var dragRectAbsolute = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted
            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable

            parentEl.appendChild(multiDragElement);
          });
          folding = true;
        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out


        if (!isOwner) {
          // Only remove if not folding (folding will remove them anyways)
          if (!folding) {
            removeMultiDragElements();
          }

          if (multiDragElements.length > 1) {
            var clonesHiddenBefore = clonesHidden;

            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden


            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {
              multiDragClones.forEach(function (clone) {
                activeSortable.addAnimationState({
                  target: clone,
                  rect: clonesFromRect
                });
                clone.fromRect = clonesFromRect;
                clone.thisAnimationDuration = null;
              });
            }
          } else {
            activeSortable._showClone(sortable);
          }
        }
      }
    },
    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {
      var dragRect = _ref11.dragRect,
          isOwner = _ref11.isOwner,
          activeSortable = _ref11.activeSortable;
      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.thisAnimationDuration = null;
      });

      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {
        clonesFromRect = _extends({}, dragRect);
        var dragMatrix = matrix(dragEl$1, true);
        clonesFromRect.top -= dragMatrix.f;
        clonesFromRect.left -= dragMatrix.e;
      }
    },
    dragOverAnimationComplete: function dragOverAnimationComplete() {
      if (folding) {
        folding = false;
        removeMultiDragElements();
      }
    },
    drop: function drop(_ref12) {
      var evt = _ref12.originalEvent,
          rootEl = _ref12.rootEl,
          parentEl = _ref12.parentEl,
          sortable = _ref12.sortable,
          dispatchSortableEvent = _ref12.dispatchSortableEvent,
          oldIndex = _ref12.oldIndex,
          putSortable = _ref12.putSortable;
      var toSortable = putSortable || this.sortable;
      if (!evt) return;
      var options = this.options,
          children = parentEl.children; // Multi-drag selection

      if (!dragStarted) {
        if (options.multiDragKey && !this.multiDragKeyDown) {
          this._deselectMultiDrag();
        }

        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));

        if (!~multiDragElements.indexOf(dragEl$1)) {
          multiDragElements.push(dragEl$1);
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'select',
            targetEl: dragEl$1,
            originalEvent: evt
          }); // Modifier activated, select from last to dragEl

          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {
            var lastIndex = index(lastMultiDragSelect),
                currentIndex = index(dragEl$1);

            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {
              // Must include lastMultiDragSelect (select it), in case modified selection from no selection
              // (but previous selection existed)
              var n, i;

              if (currentIndex > lastIndex) {
                i = lastIndex;
                n = currentIndex;
              } else {
                i = currentIndex;
                n = lastIndex + 1;
              }

              for (; i < n; i++) {
                if (~multiDragElements.indexOf(children[i])) continue;
                toggleClass(children[i], options.selectedClass, true);
                multiDragElements.push(children[i]);
                dispatchEvent({
                  sortable: sortable,
                  rootEl: rootEl,
                  name: 'select',
                  targetEl: children[i],
                  originalEvent: evt
                });
              }
            }
          } else {
            lastMultiDragSelect = dragEl$1;
          }

          multiDragSortable = toSortable;
        } else {
          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);
          lastMultiDragSelect = null;
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'deselect',
            targetEl: dragEl$1,
            originalEvent: evt
          });
        }
      } // Multi-drag drop


      if (dragStarted && this.isMultiDrag) {
        folding = false; // Do not "unfold" after around dragEl if reverted

        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {
          var dragRect = getRect(dragEl$1),
              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');
          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;
          toSortable.captureAnimationState();

          if (!initialFolding) {
            if (options.animation) {
              dragEl$1.fromRect = dragRect;
              multiDragElements.forEach(function (multiDragElement) {
                multiDragElement.thisAnimationDuration = null;

                if (multiDragElement !== dragEl$1) {
                  var rect = folding ? getRect(multiDragElement) : dragRect;
                  multiDragElement.fromRect = rect; // Prepare unfold animation

                  toSortable.addAnimationState({
                    target: multiDragElement,
                    rect: rect
                  });
                }
              });
            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert
            // properly they must all be removed


            removeMultiDragElements();
            multiDragElements.forEach(function (multiDragElement) {
              if (children[multiDragIndex]) {
                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);
              } else {
                parentEl.appendChild(multiDragElement);
              }

              multiDragIndex++;
            }); // If initial folding is done, the elements may have changed position because they are now
            // unfolding around dragEl, even though dragEl may not have his index changed, so update event
            // must be fired here as Sortable will not.

            if (oldIndex === index(dragEl$1)) {
              var update = false;
              multiDragElements.forEach(function (multiDragElement) {
                if (multiDragElement.sortableIndex !== index(multiDragElement)) {
                  update = true;
                  return;
                }
              });

              if (update) {
                dispatchSortableEvent('update');
              }
            }
          } // Must be done after capturing individual rects (scroll bar)


          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
          toSortable.animateAll();
        }

        multiDragSortable = toSortable;
      } // Remove clones if necessary


      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        multiDragClones.forEach(function (clone) {
          clone.parentNode && clone.parentNode.removeChild(clone);
        });
      }
    },
    nullingGlobal: function nullingGlobal() {
      this.isMultiDrag = dragStarted = false;
      multiDragClones.length = 0;
    },
    destroyGlobal: function destroyGlobal() {
      this._deselectMultiDrag();

      off(document, 'pointerup', this._deselectMultiDrag);
      off(document, 'mouseup', this._deselectMultiDrag);
      off(document, 'touchend', this._deselectMultiDrag);
      off(document, 'keydown', this._checkKeyDown);
      off(document, 'keyup', this._checkKeyUp);
    },
    _deselectMultiDrag: function _deselectMultiDrag(evt) {
      if (typeof dragStarted !== "undefined" && dragStarted) return; // Only deselect if selection is in this sortable

      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable

      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click

      if (evt && evt.button !== 0) return;

      while (multiDragElements.length) {
        var el = multiDragElements[0];
        toggleClass(el, this.options.selectedClass, false);
        multiDragElements.shift();
        dispatchEvent({
          sortable: this.sortable,
          rootEl: this.sortable.el,
          name: 'deselect',
          targetEl: el,
          originalEvent: evt
        });
      }
    },
    _checkKeyDown: function _checkKeyDown(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = true;
      }
    },
    _checkKeyUp: function _checkKeyUp(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = false;
      }
    }
  };
  return _extends(MultiDrag, {
    // Static methods & properties
    pluginName: 'multiDrag',
    utils: {
      /**
       * Selects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be selected
       */
      select: function select(el) {
        var sortable = el.parentNode[expando];
        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;

        if (multiDragSortable && multiDragSortable !== sortable) {
          multiDragSortable.multiDrag._deselectMultiDrag();

          multiDragSortable = sortable;
        }

        toggleClass(el, sortable.options.selectedClass, true);
        multiDragElements.push(el);
      },

      /**
       * Deselects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be deselected
       */
      deselect: function deselect(el) {
        var sortable = el.parentNode[expando],
            index = multiDragElements.indexOf(el);
        if (!sortable || !sortable.options.multiDrag || !~index) return;
        toggleClass(el, sortable.options.selectedClass, false);
        multiDragElements.splice(index, 1);
      }
    },
    eventProperties: function eventProperties() {
      var _this3 = this;

      var oldIndicies = [],
          newIndicies = [];
      multiDragElements.forEach(function (multiDragElement) {
        oldIndicies.push({
          multiDragElement: multiDragElement,
          index: multiDragElement.sortableIndex
        }); // multiDragElements will already be sorted if folding

        var newIndex;

        if (folding && multiDragElement !== dragEl$1) {
          newIndex = -1;
        } else if (folding) {
          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');
        } else {
          newIndex = index(multiDragElement);
        }

        newIndicies.push({
          multiDragElement: multiDragElement,
          index: newIndex
        });
      });
      return {
        items: _toConsumableArray(multiDragElements),
        clones: [].concat(multiDragClones),
        oldIndicies: oldIndicies,
        newIndicies: newIndicies
      };
    },
    optionListeners: {
      multiDragKey: function multiDragKey(key) {
        key = key.toLowerCase();

        if (key === 'ctrl') {
          key = 'Control';
        } else if (key.length > 1) {
          key = key.charAt(0).toUpperCase() + key.substr(1);
        }

        return key;
      }
    }
  });
}

function insertMultiDragElements(clonesInserted, rootEl) {
  multiDragElements.forEach(function (multiDragElement, i) {
    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(multiDragElement, target);
    } else {
      rootEl.appendChild(multiDragElement);
    }
  });
}
/**
 * Insert multi-drag clones
 * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted
 * @param  {HTMLElement} rootEl
 */


function insertMultiDragClones(elementsInserted, rootEl) {
  multiDragClones.forEach(function (clone, i) {
    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(clone, target);
    } else {
      rootEl.appendChild(clone);
    }
  });
}

function removeMultiDragElements() {
  multiDragElements.forEach(function (multiDragElement) {
    if (multiDragElement === dragEl$1) return;
    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);
  });
}

Sortable.mount(new AutoScrollPlugin());
Sortable.mount(Remove, Revert);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sortable);



/***/ }),

/***/ "./node_modules/tiny-invariant/dist/tiny-invariant.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ invariant)
/* harmony export */ });
var isProduction = "development" === 'production';
var prefix = 'Invariant failed';
function invariant(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction) {
        throw new Error(prefix);
    }
    var provided = typeof message === 'function' ? message() : message;
    var value = provided ? prefix + ": " + provided : prefix;
    throw new Error(value);
}




/***/ }),

/***/ "./src/blocks/image/placeholder.jpg":
/*!******************************************!*\
  !*** ./src/blocks/image/placeholder.jpg ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/placeholder.da204f5f.jpg";

/***/ }),

/***/ "./src/blocks/post-featured-image/placeholder.jpg":
/*!********************************************************!*\
  !*** ./src/blocks/post-featured-image/placeholder.jpg ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "images/placeholder.da204f5f.jpg";

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = window["React"];

/***/ }),

/***/ "@wordpress/api-fetch":
/*!**********************************!*\
  !*** external ["wp","apiFetch"] ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["apiFetch"];

/***/ }),

/***/ "@wordpress/block-editor":
/*!*************************************!*\
  !*** external ["wp","blockEditor"] ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["blockEditor"];

/***/ }),

/***/ "@wordpress/blocks":
/*!********************************!*\
  !*** external ["wp","blocks"] ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["blocks"];

/***/ }),

/***/ "@wordpress/components":
/*!************************************!*\
  !*** external ["wp","components"] ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["components"];

/***/ }),

/***/ "@wordpress/core-data":
/*!**********************************!*\
  !*** external ["wp","coreData"] ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["coreData"];

/***/ }),

/***/ "@wordpress/data":
/*!******************************!*\
  !*** external ["wp","data"] ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["data"];

/***/ }),

/***/ "@wordpress/element":
/*!*********************************!*\
  !*** external ["wp","element"] ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["element"];

/***/ }),

/***/ "@wordpress/hooks":
/*!*******************************!*\
  !*** external ["wp","hooks"] ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["hooks"];

/***/ }),

/***/ "@wordpress/i18n":
/*!******************************!*\
  !*** external ["wp","i18n"] ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["i18n"];

/***/ }),

/***/ "@wordpress/primitives":
/*!************************************!*\
  !*** external ["wp","primitives"] ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["primitives"];

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _defineProperty)
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _extends)
/* harmony export */ });
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/api-fetch */ "@wordpress/api-fetch");
/* harmony import */ var _wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ "./src/store.js");
/* harmony import */ var _blocks_post_grid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./blocks/post-grid */ "./src/blocks/post-grid/index.js");
/* harmony import */ var _blocks_post_grid_filterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./blocks/post-grid-filterable */ "./src/blocks/post-grid-filterable/index.js");
/* harmony import */ var _blocks_post_title__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./blocks/post-title */ "./src/blocks/post-title/index.js");
/* harmony import */ var _blocks_post_excerpt__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./blocks/post-excerpt */ "./src/blocks/post-excerpt/index.js");
/* harmony import */ var _blocks_post_author__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blocks/post-author */ "./src/blocks/post-author/index.js");
/* harmony import */ var _blocks_post_author_fields__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./blocks/post-author-fields */ "./src/blocks/post-author-fields/index.js");
/* harmony import */ var _blocks_post_featured_image__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./blocks/post-featured-image */ "./src/blocks/post-featured-image/index.js");
/* harmony import */ var _blocks_image__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./blocks/image */ "./src/blocks/image/index.js");
/* harmony import */ var _blocks_post_categories__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./blocks/post-categories */ "./src/blocks/post-categories/index.js");
/* harmony import */ var _blocks_post_tags__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./blocks/post-tags */ "./src/blocks/post-tags/index.js");
/* harmony import */ var _blocks_post_taxonomies__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./blocks/post-taxonomies */ "./src/blocks/post-taxonomies/index.js");
/* harmony import */ var _blocks_post_date__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./blocks/post-date */ "./src/blocks/post-date/index.js");
/* harmony import */ var _blocks_post_meta__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./blocks/post-meta */ "./src/blocks/post-meta/index.js");
/* harmony import */ var _blocks_read_more__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./blocks/read-more */ "./src/blocks/read-more/index.js");
/* harmony import */ var _blocks_terms_list__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./blocks/terms-list */ "./src/blocks/terms-list/index.js");
/* harmony import */ var _blocks_icon__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./blocks/icon */ "./src/blocks/icon/index.js");
/* harmony import */ var _blocks_text__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./blocks/text */ "./src/blocks/text/index.js");
/* harmony import */ var _blocks_layers__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./blocks/layers */ "./src/blocks/layers/index.js");
/* harmony import */ var _blocks_layer__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./blocks/layer */ "./src/blocks/layer/index.js");
/* harmony import */ var _blocks_accordion__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./blocks/accordion */ "./src/blocks/accordion/index.js");
/* harmony import */ var _blocks_tabs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./blocks/tabs */ "./src/blocks/tabs/index.js");
/* harmony import */ var _blocks_list__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./blocks/list */ "./src/blocks/list/index.js");
/* harmony import */ var _blocks_breadcrumb__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./blocks/breadcrumb */ "./src/blocks/breadcrumb/index.js");
/* harmony import */ var _blocks_shortcode__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./blocks/shortcode */ "./src/blocks/shortcode/index.js");
/* harmony import */ var _blocks_social_share__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./blocks/social-share */ "./src/blocks/social-share/index.js");
/* harmony import */ var _blocks_archive_title__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./blocks/archive-title */ "./src/blocks/archive-title/index.js");
/* harmony import */ var _blocks_archive_description__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./blocks/archive-description */ "./src/blocks/archive-description/index.js");
/* harmony import */ var _blocks_post_comment_count__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./blocks/post-comment-count */ "./src/blocks/post-comment-count/index.js");

window.PostGridPluginData = {
  freeUrl: "https://wordpress.org/plugins/post-grid/",
  proUrl: "https://pickplugins.com/post-grid/",
  websiteUrl: "https://pickplugins.com/",
  demoUrl: "http://getpostgrid.com/",
  wpReviewUrl: "https://wordpress.org/support/plugin/post-grid/reviews/#new-post",
  reviewUrl: "http://getpostgrid.com/submit-review",
  renewLicense: "https://pickplugins.com/renew-license/?licenseKey=",
  hasSubscribed: false,
  utm: {
    utm_source: "",
    utm_medium: "",
    utm_campaign: "",
    utm_content: "",
    utm_term: "",
    utm_id: ""
  }
};
_wordpress_api_fetch__WEBPACK_IMPORTED_MODULE_0___default()({
  path: '/post-grid/v2/get_plugin_data',
  method: 'POST',
  data: {}
}).then(res => {
  //console.log(res);
  window.PostGridPluginData = res;
});





























})();

/******/ })()
;
//# sourceMappingURL=index.js.map